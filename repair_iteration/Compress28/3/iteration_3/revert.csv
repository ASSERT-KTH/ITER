projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize==Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset().intValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<1){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MAX_VALUE||entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=entrySize||entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize{Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=this.blockSize||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset&&entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.available();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=this.currEntry.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getKey();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getValue()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getValue()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>Integer.MAX_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntrySize()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntrySize()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=MAX_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MAX_VALUE||entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MAX_VALUE||entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MAX_VALUE||entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MAX_VALUE||entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MAX_VALUE||entryOffset>=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryLength()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryLength()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryCount();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryStart();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset&&entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=this.blockSize||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==entrySize||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==entryOffset||entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MIN_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<this.blockSize||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<this.blockSize||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=this.blockSize&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<this.blockSize||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<this.blockSize||entryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Long.MIN_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Long.MIN_VALUE||entrySize>Long.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<Integer.MAX_VALUE||entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<Integer.MAX_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<Integer.MAX_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize==Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<Integer.MAX_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize==Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize==Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=this.currEntry.getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=this.currEntry.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177LongentryOffset=getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset().intValue()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset().intValue()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset().intValue()*2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset().length();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=currEntry.getEntryOffset().intValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryOffset().longValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryOffset().length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=entrySize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=entrySize||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getKey();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.available();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getValue()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getValue()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=currEntry.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Long.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Long.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<Long.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Long.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Long.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=Integer.MAX_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=Integer.MAX_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE&&entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE&&entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize==Integer.MIN_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE||entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset==Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<MAX_VALUE||entrySize>MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=this.blockSize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=MAX_VALUE||entrySize>MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*EntryOffset>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset==Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset!=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*EntryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentrySize=getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=getEntrySize()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=getEntrySize()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=currEntry.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getEntrySize()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getEntrySize()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=currEntry.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getEntrySize(this.blockSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getEntrySize()-2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset==Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>=Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset!=Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<Integer.MIN_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>Integer.MAX_VALUE||entrySize*entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<=Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=MAX_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset&&entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getEntrySize()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getEntrySize()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize<Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=entrySize||entrySize>Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<=Integer.MIN_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize!=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177longentryOffset=this.currEntry.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.available();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.getValue()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.getValue()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=this.currEntry.getKey();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<SMALL_BUFFER_SIZE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE||entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<=Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<SMALL_BUFFER_SIZE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>1){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==1){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=1){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<1){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset==Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset==Integer.MIN_VALUE||entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset!=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*this.blockSize!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset+entrySize!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntrySize()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntrySize()-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntryStart();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Integer.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Integer.MIN_VALUE||entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset<=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset*entrySize<Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*EntryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset-entrySize<=MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*length<Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Long.MAX_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Long.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>Integer.MAX_VALUE||entrySize*entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE&&entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entryOffset>=Integer.MIN_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MAX_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntryLength()-currEntry.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=currEntry.getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*length!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==entrySize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*length<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=entryOffset||entryOffset>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=currEntry.getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MAX_VALUE||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<0||entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset==Integer.MIN_VALUE||entrySize>MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=this.currEntry.getEntryOffset().intValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*this.blockSize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*length==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entryOffset>Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>entryOffset||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset==Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>=Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>Integer.MAX_VALUE||entryOffset>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entrySize<=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=1){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getEntrySize().length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*length<Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<SMALL_BUFFER_SIZE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<this.blockSize&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>=this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize==this.blockSize||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<Integer.MIN_VALUE||entrySize==Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntrySize()-blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=getEntrySize()-2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntrySize()-currEntry.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentryOffset=getEntrySize()-blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset>Integer.MAX_VALUE||entrySize*entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=Integer.MAX_VALUE||entryOffset>Long.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<=Long.MAX_VALUE||entryOffset>=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset>Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177LongentryOffset=getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentryOffset=this.currEntry.getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize/entryOffset<Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize>Integer.MAX_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize!=Integer.MAX_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<entrySize||entrySize>Integer.MIN_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset<SMALL_BUFFER_SIZE||entrySize<Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<2){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset*Integer.MIN_VALUE||entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=Long.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize<Integer.MAX_VALUE||entryOffset>this.blockSize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.getItemSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177LongentryOffset=getEntryOffset().longValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset>=Integer.MIN_VALUE&&entryOffset>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getRowSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getImplicitRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Long.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset<=LAST_VALUE||entrySize>Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset*Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize*EntryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getEntryLength();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=getEntry().length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=getEntry().length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177intentrySize=this.currEntry.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177IntegerentrySize=this.currEntry.getEntryOffset();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize-entryOffset!=Integer.MAX_VALUE){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java177if(entrySize-entryOffset!=Integer.MIN_VALUE||entrySize-entryOffset==Integer.MAX_VALUE){
