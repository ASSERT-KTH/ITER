projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*10);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getValues();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=encoding.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,fileSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF()-available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF()+available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=available*getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF()*available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longis=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*1+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip*available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=available+currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=available.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream(),available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.available,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=available.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available.length-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available.length-2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available.length+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=available.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available.length-6;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip/available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*10);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available+numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available+numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intskipped=IOUtils.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*2+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+1,is.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*1+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*8);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,entrySize,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip,available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,this.numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*size-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*size+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*size,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*size-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=available.getValues();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=this.currEntry.getValues();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getKeys();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getValues(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getImplicitRecord();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getValues(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*size-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*size+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*size-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*size,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*count);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip*this.blockSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getInputStream(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getInputStream(),available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getInputStream().readLine();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getInputStream(),available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*2+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*size-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+1,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,this.numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available-1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*numToSkip-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip-available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*2-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*2+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available.length,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*2+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,is.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available*4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available*8);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*length-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*length,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.encoding.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=available+encoding.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=available*encoding.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=encoding.getInputStream(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=fileEncoding.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*this.blockSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*10);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available*10);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available*4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/10,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/2,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip/2,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/2,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available/2,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1000,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*1000L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*10000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197shortnumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=Math.min(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197doublenumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197LongnumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=Math.min(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip,this.blockSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip,this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip*this.blockSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getRecordSize(),available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getRecordSize()+available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getRecordSize()-available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getRecordSize(),available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getRecordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*2-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,this.available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip+1,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numOffset+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/10,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip+1,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.sin(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=Math.sin(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available+1,available.length+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*this.blockSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intskipped=IOUtils.skip(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*SMALL_BUFFER_SIZE+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/SMALL_BUFFER_SIZE,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*SMALL_BUFFER_SIZE,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=available*(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*(numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*(numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*(entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*(numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available/(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip,this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*length-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*length+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*length-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*length,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numToSIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+1,available.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available-1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*2+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+16);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getRecordSize(),available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getRecordSize()+available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getRecordSize(),available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getRecordSize()-available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longhasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available*numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytehasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available+numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available*hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*length-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*length+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*length-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*length,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+1,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=available.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=available+currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197Integeris=currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=available-currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=this.currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=available*currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream(),available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream(),available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getOutputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=available*this.currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*2-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*2-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*SMALL_BUFFER_SIZE,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*SMALL_BUFFER_SIZE+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/SMALL_BUFFER_SIZE,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*SMALL_BUFFER_SIZE-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*numToSkip+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,is.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,fileSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numToSIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numToSip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,is);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip+1,this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available+1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getKey();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getISOControl();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*10);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*100,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10+1,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available+1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/2,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip+available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip+4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=Math.min(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=zipEncoding.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=ZipEncoding.getInputStream(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getZipEncoding().getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=encoding.getZipEncoding();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*SMALL_BUFFER_SIZE-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numOffset,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/2,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/2,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip*available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=currEntry.getISOControl();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream(),available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getCurrentEntry().getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*numSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*10,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip-1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*size+1,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*size,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1)+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,entrySize-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*8);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/10,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip+1,this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream()+available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+1L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF()&numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF()/numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numToSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available.length-4;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getRecordSize(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available*10);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numToSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-1,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available-1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available-1,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getOutputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numOffset,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available+numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*length+1,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*0,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*2-fileSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/1,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+1,fileSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*2,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip+4);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available+available*numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available-available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip)+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skipped(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*2,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,entrySize*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available+1,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip/available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=hasHitEOF?getHitEOF():available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.sin(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*SMALL_BUFFER_SIZE+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream(entry);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream(entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=currEntry.getItemCount();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=currEntry.getItemSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=currEntry.getSize()-available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=currEntry.getImmediateParentPointer();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,this.entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*2-fileSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-available-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*10,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,getOffset());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available-entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getInputStream(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,this.entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available-entrySize*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numOffset+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip*this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,this.available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available*2,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available-entryOffset-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available-entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available*2,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*this.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*size;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=ZipEncoding.getInputStream(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=ZipEncoding.getInputStream(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,fileSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*6,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available-entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available-entrySize*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-16);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available<numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=available>numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*6,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getImplicitRecords();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getImplicitRecorder();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.available*this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,this.entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available+numToSkip*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*1000,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/2,numToSkip*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip*this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip*this.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getHitEOF?this.currEntry.getInputStream():available;
