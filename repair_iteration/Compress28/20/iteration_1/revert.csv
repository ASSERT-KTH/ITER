projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.sin(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*10);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*1,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*size);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*2,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,available*1000);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available/numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longnumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,available+1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.max(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197bytenumToSkip=Math.min(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=this.currEntry.getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=available*(numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197byte[]is=currEntry.getValues();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,this.numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.sin(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,this.available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available/2,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available+1,numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-numToSkip,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=encoding.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intis=currEntry.getSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197InputStreamis=currEntry.getRecordSize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available-1,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available,numToSkip-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available*numToSkip,available*SMALL_BUFFER_SIZE);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available,numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available+numToSkip);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197longskipped=IOUtils.skip(available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197inthasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197intnumToSkip=Math.min(available,numToSkip-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.max(available,numToSkip-available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,available);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java197numToSkip=Math.min(available*10,numToSkip);
