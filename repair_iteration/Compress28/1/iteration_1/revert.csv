projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227returnnull;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227returnthis;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrycannotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.getNextTarEntry()");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()shouldnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()isnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)null;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustbe>0");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustbe>0",hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustbe>0");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustnotbe>0");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustbe>0.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()doesnotexist.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull.");thrownewIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull.");ThrownewIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull.");newIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull.");IllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntrycannotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntrycannotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntrycannotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrycannotbenull.".);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()doesnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()cannotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarEntry.getNextTarEntry()mustnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.getNextTarEntry()");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.getNextTarEntry()",hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.getNextTarEntry().");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.getNextTarEntry():");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextRecordEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextEntry().getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextFileEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextEscape();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)this.currEntry;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)this;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227returngetNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)this.nextEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds:");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds.n");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds:"+getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()shouldnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntry.getNextTarEntry()shouldnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()shouldn'tbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarEntry.getNextTarEntry()shouldnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextName()shouldnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("".equals(getName()));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalStateException("");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.n");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry."+getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227TarArchiveEntrycurrEntry=getNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227finalTarArchiveEntrycurrEntry=getNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227finalTarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){returncurrEntry;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){skip(currEntry.getName());}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227finalTarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){skip(currEntry.getName());}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry==null){returncurrEntry;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)currEntry;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)super.getNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()isnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntry.getNextTarEntry()isnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()shouldbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNext()isnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(hasHitEOF){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227||hasHitEOF){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){returnthis;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Annotation<T>currEntry=getNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227aughtExceptionHandler.throwAsIOException("");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(hasHitEOF){returnthis;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227Throwables.thrownewIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull!");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull."+getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()shouldnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds."+getHitEOF());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){returnTarArchiveEntry.getNextTarEntry();}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){skip(-1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227TarArchiveEntrycurrEntry=getNextTarEntry();if(currEntry!=null){returncurrEntry.getName();}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF&&isEnabled(TarArchiveEntry.class)){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF&&isEnabled(Feature.QUOTE_FIELD_NAMES)){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF&&isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF&&isEnabled(TarArchiveEntry.DEFAULT_TAR_ENTRY)){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){thrownewIllegalArgumentException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("".equals(getHitEOF()));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)sourceFile.getNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)entry;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull.");java.lang.Exception:thrownewIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarEntrycannotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrycannotbenull."+getHitEOF());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrycannotbenull."+getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()isnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarEntry.getNextTarEntry()isnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.getNextTarEntry()");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry.getNextTarEntry()");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)currEntry.getNextTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextOriginalTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextTarEntry().getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227ThrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustbe>0");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustbe>-1");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227newIllegalArgumentException("TarArchiveEntry.getNextTarEntry()mustbe>0");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry."+"Cannotaccessthisentry.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){thrownewIllegalArgumentException("TarArchiveEntryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(hasHitEOF){thrownewIllegalArgumentException("TarArchiveEntryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227_thrownewIllegalArgumentException("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveavalidentryentry.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)in.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrycannotbenull.Tryagain.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalStateException("TarArchiveEntrycannotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrycannotbenull.Tryagain!");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){thrownewIllegalStateException("TarArchiveEntryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227this.currEntry.setHitEOF(hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF){thrownewRuntimeException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)encoding.getNext();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227returnnewTarArchiveEntry(this,getHitEOF());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry."+"Cannotgetnextentry.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry."+"CannotaccesstheTarArchiveEntry.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnotavalidTarArchiveEntry."+"CannotaccesstheTarArchiveentry.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds.Tryagain.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntrydoesnothaveEOFbounds.Pleasecheckthattheentryisempty.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextEscapedTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227return(TarArchiveEntry)getNextBinaryTarEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull".equals(getHitEOF()));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227returnnewTarArchiveEntry("TarArchiveEntryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull".equals(getName()));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(!hasHitEOF&&hasHitEOF){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227if(hasHitEOF||isEnabled(Feature.QUOTE_FIELD_NAMES)){returnnull;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNextName()mustnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntry.getNext()shouldnotbenull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java227thrownewIllegalArgumentException("TarArchiveEntryisnull.");if(!hasHitEOF){thrownewIllegalArgumentException("TarArchiveEntryisnull.");}
