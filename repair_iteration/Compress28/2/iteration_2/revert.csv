projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=isHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(hashCode==0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead).hashCode()>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset==0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead==0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize==0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset>=0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(totalRead==0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset>>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entrySize,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=marked;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.encodeHitEOF("shouldReset");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset==0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>=0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset<0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashRecord;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readNow;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!isHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF:false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=null;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!isReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readAndClearBuffer();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(currEntry.record);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(currEntry.getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOfThis{0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,totalRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entrySize,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,0,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,toHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>entrySize){if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="hasHitEOF";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!marked;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!encoding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hash;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hished;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()==0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"shouldReset":"should";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset{0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset<0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>=0){thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove();entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove();entryOffset+=len;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove();entryOffset+=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=isHitEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(getRecordSize()+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset:".equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=hasHitEOF.equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset".equals(getRecordSize()+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset:".equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(getRecordSize()-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(getRecordSize(),totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readNow(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,totalRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,totalRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,len+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,totalRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,totalRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset==0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entrySize==0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(entryOffset){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset==0){thrownewIllegalStateException("".getMessage());}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586trecută{thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset==0){thrownewIllegalStateException("");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset==0){thrownewIllegalStateException("TarArchiveEntryisnotinuse.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead==0)&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead==0)&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead<0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead>=0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=!hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=is.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=is.hasNext();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=!shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>=SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()!=SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>>SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entrySize,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(0,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entrySize,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entry,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset:".equals(currEntry.getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=hasHitEOF.equals(currEntry.getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset".equals(currEntry.getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset:".equals(currEntry.getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(currEntry.getName())&&hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()&&is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hashCode()||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=i.hashCode()||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entrySize,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,totalRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entrySize,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,totalRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?entrySize:is.read(buf,offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>=entrySize){if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset<entrySize){if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset==entrySize){if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>entrySize){if(currEntry==null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset<entrySize){if(currEntry==null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>totalRead){if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entry,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entryOffset,entrySize,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entryOffset,entrySize,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entryOffset,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=currEntry.hashCode(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF(entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,totalRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+2,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=1L;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readNow+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readByte;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.readNow;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()!=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hashCode()==-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>=SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()!=SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>>SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,buf.length-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entryOffset,buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,buf.length,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,numToRead,is.read);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,len,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=shouldReset||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashRecord.hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashRecord.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&currEntry.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()&&is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset()&&is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF()&&is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,len,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!encoding.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset-0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.readAndClearBuffer(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,hasHitEOF):hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+2,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entryOffset+=len;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove();entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove();entryOffset+=numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize=i.remove();entryOffset+=len;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586Entryentry=currEntry.getEntry(numToRead);entryOffset+=entry.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586Entryentry=currEntry.getEntry(numToRead,numToRead);entryOffset+=entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entryOffset+=numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=currEntry.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,0L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586bytetotalRead=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entryOffset,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entryOffset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entry,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?entryOffset:is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?entryOffset+1:is.read(buf,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=i.hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode+numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=currEntry.hashCode(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=currEntry.isEOF(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead,ch);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead,is.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.isEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isISOControl();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isOSD();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isECS();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isIOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586EntryEntrycurrEntry=currEntry.getEntry(numToRead);entryOffset+=currEntry.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586Entryentry=currEntry.getEntry(numToRead);entryOffset+=entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize=i.remove();entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=numToRead.hashCode()||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hashCode()||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entrySize,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=null;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF|=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.readNow;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&currEntry.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+2,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entryOffset,buf,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entry,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,toHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,toHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,count(toHitEOF));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead>>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize>>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=currEntry.in.read(buf,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,entryOffset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()>1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()<0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()>=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()!=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset+numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=i.shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset&&is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,totalRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF/1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF+2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCodeOf(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCode+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCodeAndClearBuffer(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF||hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset:".equals(currEntry.record);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=hasHitEOF.equals(currEntry.record);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset".equals(currEntry.record);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(currEntry.record)&&hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset:".equals(currEntry.record);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF:true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF:true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF:is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF:null;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF:is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF:is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&is.read(buf,offset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&currEntry.read(buf,offset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset<0)&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOfThis==0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize{0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset==0));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF||is.hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove(entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586TarArchiveEntrycurrEntry=currEntry.getEntry(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.removeChild(currEntry.getKey());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586TarArchiveEntrycurrEntry=currEntry.getValue();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586TarArchiveEntrycurrEntry=currEntry.getCurrentEntry();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.removeChild(currEntry.getValue());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hasHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()>>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.hashCode()==1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset<0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(entryOffset)){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowRecording(entryOffset)){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowRecord(entryOffset)){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset<0){thrownewIllegalStateException("".getMessage());}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!record.hashCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&hasHitEOF+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=i.isEOF()&&hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()||hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,totalRead):null;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>=SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE&&is.read(buf,offset,numToRead)>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()!=SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>>SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.shouldReset||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.shouldReset||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream(entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream(),entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getErrorStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream(entry);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getRawInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF||hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF||currEntry.hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hished+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hittle;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hash+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=getHitEOF()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=getHitEOF(entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=getHitEOF(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=getHitEOF(0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=getHitEOF(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=currEntry.read(buf,offset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!isHitEOF&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!isHitEOF&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!isHitEOF||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>=SMALL_BUFFER_SIZE||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE&&is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==SMALL_BUFFER_SIZE||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>SMALL_BUFFER_SIZE||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()!=SMALL_BUFFER_SIZE||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>>SMALL_BUFFER_SIZE||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,totalRead+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset+numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset+numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCode()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCode()*2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.size();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()?"shouldReset":"should";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"shouldreset":"should";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"shouldReset":"should",hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"should":"should";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"shouldReset":",shouldReset";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset>=0){thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entrySize>=0){thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset!=0){thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowEOF(entryOffset){thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,off,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,off,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entryOffset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&currEntry.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hashCode(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hasHitEOF(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()?is.read(buf,offset,numToRead):null;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=currEntry.read(buf,offset,numToRead);entryOffset+=numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586bytetotalRead=is.read(buf,offset,numToRead);entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=currEntry.read(buf,offset,numToRead);entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586IntegertotalRead=is.read(buf,offset,numToRead);entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.readAndClearBuffer();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readAndClearBuffer(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readAndClearBuffer(entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readAndClearBuffer(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entryOffset,buf,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entry,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.size();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()*2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=i.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()*numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.encodeHitEOF("shouldReset");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.decodeHitEOF("shouldReset");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.encodeHitEOF("shouldReset:should");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.encodeHitEOF("shouldReset",-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.decodeHitEOF("shouldReset");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,0,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,0,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,0,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,0,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,0,entrySize):0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hashCode(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.hasHitEOF(offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,totalRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset>=0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset!=0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset>=0){thrownewIllegalStateException("".getMessage());}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=currEntry.read(buf,offset,numToRead);entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586bytetotalRead=is.read(buf,offset,numToRead);entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586IntegertotalRead=is.read(buf,offset,numToRead);entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=length*2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=len;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead).hashCode()>=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead).hashCode()==0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead).hashCode()>1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead).hashCode()!=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead).hashCode()<=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead).hashCode()>>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>=SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE&&is.read(buf,offset,numToRead)>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()!=SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=isReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!isRecord;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entrySize,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entry,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entrySize,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entryOffset+=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize=currEntry.recordSize();entryOffset+=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize=currEntry.recordSize();entryOffset+=numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize=currEntry.getSize();entryOffset+=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF&&is.read(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset,0,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,0,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,0,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize+0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize<0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entrySize>=0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.length();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.size();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.hashCode()+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,off,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,totalRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,off,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+2,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(totalRead>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()==1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&&true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hasNext();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hashCode()==hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hashCode()!=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hasMoreElements();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF+1L;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!shouldReset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,totalRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,0,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.isEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=this.currEntry.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream(-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=currEntry.getInputStream(entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead+3);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hiddle;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!remainder.hashCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!remainder.hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF()&&is.read(buf,offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead+1);entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,buffer.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashAndSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.recordSize(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586bytetotalRead=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF:is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF:is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF:is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,0,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,0,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowReset){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset==0L){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset==0){thrownewIllegalStateException("".);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586safeTarEntry(currEntry,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset==0){thrownewIllegalStateException(".");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,totalRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+2,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF-=currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashRecord+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashRecord;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead+1);entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset()&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=shouldReset&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,numToRead,ch);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,len+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,fullNameData+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF||is.hasMoreElements();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entrySize,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.getHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hash||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize=i.remove();entryOffset+=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize+=currEntry.recordSize;entryOffset+=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=4;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()&&is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF&&is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&currEntry.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hashCode()==0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hashCode()==true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||is.hashCode()!=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode&0xff;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=currEntry.hashCode()==0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586Entryentry=currEntry.getEntry(numToRead);entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586Entryentry=currEntry.getEntry(numToRead,numToRead);entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586HasHitEOF&=is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()!=-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCodeAndClearBuffer();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCodeAndClose(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCodeAndClose(numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,totalRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,totalRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-1L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586safeTarEntry()){thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586aughtException("Tarentryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset>=0){thrownewIllegalStateException("Tarentryisnull..");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.remove();entryOffset+=currEntry.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,buf.length*2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+2,buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,buf.length-2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586safeTarEntry()){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset<0){thrownewIllegalStateException("".);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586safeTarEntry(currEntry,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOfThis>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOfThis==-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead==-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(numToRead==0)&&is.read(buf);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&currEntry.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,toHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset||i.hasNext();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset||is.read(buf,offset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF='shouldReset'.equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF="shouldReset".equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||currEntry.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entry,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,in.read);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=currEntry.shouldReset.equals("shouldReset");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF="shouldReset".equals(currEntry.getName(),hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.shouldReset()?"shouldReset":"should";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"shouldReset":",should";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"shouldReset",-1:1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(totalRead>=0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.isEOF(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entryOffset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF|=!isReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readNow+(int)Math.rint((int)entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset()&&hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,totalRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset+1,totalRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readEOF()&&is.readNow();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.shouldReset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.shouldReset||is.read(buf,offset+totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=encoding.shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,0,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,0,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode&&is.read(buf,offset+totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode&&is.read(buf,offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF||is.read(buf,offset+totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(currEntry!=null)?currEntry.hashCode():0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(currEntry!=null)?currEntry.hashCode():-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitCode();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hashCode()||totalRead>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586TarArchiveEntrycurrEntry=currEntry.getEntry(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586TarArchiveEntrycurrEntry=currEntry.getEntry(offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>>SMALL_BUFFER_SIZE||is.read(buf,offset,numToRead)>-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset()||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,fullRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,count(totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readAndClearBuffer(0,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readAndClearBuffer(0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!shouldReset&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF&&currEntry.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset!=entrySize){if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entryOffset+=entrySize){if(currEntry!=null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>=entrySize){if(currEntry==null){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()[Delete]0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+entrySize}0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+entrySize>>0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF&=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.encodeHitEOF("shouldReset",numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=currEntry.encodeHitEOF(".shouldReset");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashAndReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashReset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset!=0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset>=0){thrownewIllegalStateException("".);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isEORF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isERROR();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isEOF(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isISOControl(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(offset,buf,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,toHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,this.shouldReset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+2,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=i.hashCode()<SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-entryLimit);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586||entryOffset<0||totalRead>0){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586thrownewIllegalStateException("");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586aughtInvalidTarEntry(currEntry,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586aughtInvalidTarEntry(currEntry.getName(),entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,off,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entriesSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF||is.hasNext();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?is.read(buf,offset,numToRead-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entrySize,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<1||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=hasHitEOF?"shouldReset":"shouldReset".equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.read(buf,offset,getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=hasHitEOF?getRecordSize():"shouldReset".equals(getRecordSize());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entry,offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readAndClearBuffer(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(totalRead<0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(buf,offset+1,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize+=i.remove();entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize-=i.remove();entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<SMALL_BUFFER_SIZE||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()<HIT_BUFFER_SIZE||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize+=i.remove();entryOffset+=len;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,count+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hasHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()>=-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586trecută{thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(entryOffset+numToRead){thrownewIllegalStateException("Tarentryisnull.");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586aughtAfterLastAccessException("Tarentryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586aughtInvalidTarEntry("Tarentryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586thrownewIllegalStateException("Tarentryisnull.");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!isRecorded;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!remainder;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead);entryOffset+=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEffects();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entrySize,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=is.size()==0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(entry,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entryStart,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,count(numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(entrySize,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(entry,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(entryOffset,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitEOF||is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(buf,offset+1,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,numToRead,buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=getHitEOF(entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset,-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.readAndClearBuffer(entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-1,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-1,-offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,-1,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.encodeHitEOF("shouldReset:");
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.size()>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()?"shouldReset":"<";
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.removeChild(currEntry.getImmediateParentPointer());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.removeChild(currEntry.getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586i.removeChild(currEntry.getMethod());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize=i.remove();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset,-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.shouldReset()&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF:is.read(buf,offset,-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF:is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF:is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(entryOffset+numToRead){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(entryOffset+1)){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(entryOffset+0)){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(entryOffset+3)){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,toHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readNow*2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.readNow(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(offset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.currEntry.read(buf,offset,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,fullNameData,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,totalRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586allowSkip(numToRead){thrownewIllegalStateException("");}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=!hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashReset&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashReset&&is.read(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashReset&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,len+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read(numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hasHitEOF&&is.read();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,off,0,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entrySize,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.size()==0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,toHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitCode;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.read(buf,offset,entryOffset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=hasHitEOF||is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode&&is.read(buf,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode&&is.read(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hashCode&&is.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entrySize+=i.remove();entryOffset+=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entryOffset+=iSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586entryOffset+=i.remove();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!encoding.shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!markerEncoding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()||is.isEOFRecord();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.isEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset+1,entryOffset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF(entryOffset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,in.read);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586if(entryOffset>=entrySize){if(currEntry!=null){thrownewIllegalStateException("".);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.read()||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()||is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()+is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()*SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()+SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.size()<SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.shouldReset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=hasHitEOF?"shouldReset":"should".equals(currEntry.getName());
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.in.read(buf,offset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?entrySize:is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.isEOF()?entrySize+1:is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,off,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(currEntry,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(entrySize,buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(curr,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=currEntry.hashCode(numToRead,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hailed;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!hounded+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=3;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586InputStreamis=i.getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHit();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.isEOF();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitCharacterEncoding();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=!currEntry.hasHitElement();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,off+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586ch=is.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.isEOF()&&is.read(buf,offset+1,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=(entryOffset+numToRead)<0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF||isRecorded;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586haveHitEOF=marked;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+numToRead,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+numToRead,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586inttotalRead=is.read(buf,offset+2,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF=is.hashCode()&&is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java586hasHitEOF&=is.read(buf,offset,1,entryOffset+numToRead);
