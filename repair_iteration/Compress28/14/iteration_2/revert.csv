projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returntotalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>access){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>available){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=0){if(!hasHitEOF){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF+entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset/numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);entrySize+=padding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize,hasHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize,hasHitEOF,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize,hasHitEOF,shouldReset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset<entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+entrySize){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset<entrySize){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>0){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=entrySize){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>numRecords){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize-1){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(entryOffset,buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entryOffset+hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591charch=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591Integerch=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591bytech=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entryOffset);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entrySize);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591bytepadding=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.readByte(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=i.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset/1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numRecords.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+2;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-hasHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentrySize+hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF+entryOffset+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF+entryOffset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF-entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF/entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF,shouldReset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entries.length,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset,length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset/numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numRecords+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numRecords,hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numRecords+length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numRecords*numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset-numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,totalRead-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,hasHitEOF-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset-totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,numToRead-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset-numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset-1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset-1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entryOffset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readInt(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=entrySize){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==entrySize){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<access){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<access){returnentrySize;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset-=entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset/=entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=numToSkip;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize+numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,totalRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,hasHitEOF,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,numToRead,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF+numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,hasHitEOF+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF/numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF*numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entryOffset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591bytepadding=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,len-1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,entryOffset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset/entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset/entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset/numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset*numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entryOffset);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entrySize);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591Integerch=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,len);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591ch=is.read(buf,offset,numToRead);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+numToRead,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF.read(buf,offset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=entrySize+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,entryOffset+numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.readByte(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,entryOffset-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset-1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intnumRecords=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset,0);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset+1,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords.length;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize-numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entrySize,hasHitEOF,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entrySize,hasHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset+entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF?is.read(buf,offset+numToRead):hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<numRecords){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<numToRead){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize=entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<0){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<numToRead){returnentrySize;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+totalRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+count(numToRead),hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+length,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF+entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset+numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=entrySize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==entrySize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset!=entrySize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591||entryOffset>entrySize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize<=entryOffset){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset+1){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset.length){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>numRecords){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>0){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize+=entryOffset){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=entrySize){for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset,0);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset+1,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entryOffset);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entrySize);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591bytepadding=is.read(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.readByte(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591Integerpadding=is.read(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,hasHitEOF,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,len,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1,hasHitEOF,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1,hasHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<available){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>available){returnentrySize;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=available){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==available){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<available){returnentrySize;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset!=available){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>available){returntotalRead;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,len+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entries[offset+numToRead]);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-totalRead+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-totalRead.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset/totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentrySize-totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,hasHitEOF,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize,hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize&&is.read(buf,offset,numToRead));
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset<entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize&&hasHitEOF){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize.length){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(record,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(entryOffset,buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset+hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entryOffset);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,entrySize);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591Integerch=is.read(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591ch=is.read(buf,offset,entryOffset);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591ch=is.read(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591charch=is.read(buf,offset,numToRead);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset||hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,len-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,hasHitEOF,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,totalRead,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,totalRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591hasHitEOF=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591n.remove();hasHitEOF=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(i.hasNext()){i.remove();hasHitEOF=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(!hasHitEOF){i.remove();hasHitEOF=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==0){i.remove();hasHitEOF=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset!=0){i.remove();hasHitEOF=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset,hasHitEOF+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numRecords,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,totalRead,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numToRead+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset/numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numToRead+length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset<entrySize){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>0){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+entrySize){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=entrySize){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize-1){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize.length){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entryOffset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset!=0){if(!hasHitEOF){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==0){if(!hasHitEOF){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>0){if(!hasHitEOF){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<0){if(!hasHitEOF){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=0){if(!hashEOF){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentrySize+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentrySize+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentrySize+numRecords.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);entrySize+=length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591bytepadding=is.read(buf,offset,numToRead);entrySize+=padding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,entrySize);entrySize+=numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);entrySize+=blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591Integerpadding=is.read(buf,offset,numToRead);entrySize+=padding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead,hasHitEOF);entrySize+=padding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>0){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>SMALL_BUFFER_SIZE){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>numToRead){returnis.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize<=entryOffset){returnis.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize<=entryOffset){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>numRecords){returnis.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize+=entryOffset){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numToRead,hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>SMALL_BUFFER_SIZE;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>available;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset<entrySize){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+entrySize){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>0){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=entrySize){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize-1){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>numRecords){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=entryOffset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=entryOffset+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=entryOffset+numRecords.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=entryOffset.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591for(inti=offset;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=entrySize){for(inti=offset;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i>=numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords.length;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<numRecords;++i){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+numToRead,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,entryOffset+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591hasHitEOF=is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>entrySize){i.remove();hasHitEOF=is.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){i.remove();hasHitEOF=is.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entryOffset,hasHitEOF,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entryOffset,hasHitEOF,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entryOffset,hasHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=entrySize){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==entrySize){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intentrySize=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){returnis.read(buf,offset,totalRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+2);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entryOffset-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset!=0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize==0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==0){if(!hashEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=0){if(!hashEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead+1);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,0);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,buffer.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>recordSize){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>access){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,0L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,0,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize+=entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,inputSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,buffer.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numRecords+offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,hasHitEOF,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.readByte(buf,offset,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset-=totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>=0){intpadding=is.read(buf,offset,numToRead);entrySize+=padding;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>=0){intpadding=is.read(buf,offset,numToRead);entrySize+=padding;}else{hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize!=0){intpadding=is.read(buf,offset,numToRead);entrySize+=padding;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead+1);entrySize+=padding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize!=0){intpadding=is.read(buf,offset,numToRead);entrySize+=padding;}else{hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>=0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=numRecords){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>available){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=entrySize){for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset+numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset/numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset/numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF/numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,entryOffset-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readInt(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==-1){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=access){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset==access){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset!=access){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>access){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,hasHitEOF-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>access){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returntotalRead-entryOffset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF-totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset-inputSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,0);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intch=is.read(buf,offset,numToRead+1);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>recordSize){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead+1);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,0);hasHitEOF=hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnisEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read||hasHitEOF||is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnisEOF&&is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF&&hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entryOffset-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,0,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-entrySize,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,0);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead+1);hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,hasHitEOF+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead*1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF.read(buf,offset,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead-buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead-inputSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>0){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>recordSize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+entrySize){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize-1){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,len,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,0,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead+1,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+2,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+1L;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,hasHitEOF;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=count(entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(i!=null){i.remove();hasHitEOF=is.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>0){i.remove();hasHitEOF=is.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize==0){i.remove();hasHitEOF=is.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>=0){i.remove();hasHitEOF=is.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>access){for(inti=offset;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<0;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,0,entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,0L);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnisEOF||is.read(buf,offset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset+numToRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset+1,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+totalRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+buf.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,totalRead+numToRead;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset+numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead+entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,totalRead+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,hasHitEOF+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>entryOffset){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>recordSize){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>access){hasHitEOF=true;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>totalRead){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>recordSize){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>=0){if(!hasHitEOF){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591readNow=is.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset-entrySize+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(i!=null){i.remove();hasHitEOF=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(i==null){i.remove();hasHitEOF=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>numToRead){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>access){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>totalRead){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize<numToRead){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=0;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=currEntry.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=currEntry.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=currEntry.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,hasHitEOF,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entries.length-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset-1,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead-buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead-inputSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF+entryOffset-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF+entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize&&is.read(buf,offset,numToRead)){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset+1,entries.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize.length){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(i.hasNext()){hasHitEOF=is.read(buf,offset,entryOffset);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,entryOffset+numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>entrySize){returnis.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591while(entryOffset<entrySize){returnis.read(buf,offset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(i.hasNext()){hasHitEOF=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591i.remove();hasHitEOF=is.read(buf,offset,-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numToRead+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+2,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+0,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entrySize-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=entrySize-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=entrySize+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset=entrySize+numRecords.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize<entryOffset){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readByte(buf,offset,0);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset<numRecords){returnentrySize;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset+1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset+numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset+numRecords.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF,entrySize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,hasHitEOF,entryOffset-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToSkip);entrySize+=padding;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,numToRead);entrySize+=numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entrySize>0){if(!hasHitEOF){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=0){hasHitEOF=false;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize-1;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize+numRecords.length;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>access){returnentrySize;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>access){returnhasHitEOF;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>accessRecords){returnentryOffset;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=entryOffset+numRecords.size();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591EntryOffsetentrySize=i.getEntrySize();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,hasHitEOF+buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset,hasHitEOF-hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+0,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf,offset,numToRead+1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>available){returnbuf.length;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnentryOffset+numToRead+offset;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,buf.length-numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset+=recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,buf.length,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,fullNameData,entryOffset,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,entryOffset+numToRead-1);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,count(entryOffset,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset){returnis.read(buf,offset,numToRead+1);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entrySize>entryOffset){returnis.read(buf,offset,0);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=offset;i<SMALL_BUFFER_SIZE;i++){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<numRecords;i++){buffer[i]=is.read(buf,offset,0);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+1,entries.length-entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead+len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+totalRead,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.readAndClose(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset,numToRead,buf.length);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591intpadding=is.read(buf,offset,0);hasHitEOF=false;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>=0){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>0){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<0){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset>entrySize){for(inti=start;i<numRecords;++i){hasHitEOF=true;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,totalRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,len);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF&&is.read(buf,offset,0,numToRead);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnhasHitEOF||is.read(buf);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<numRecords;++i){buffer[i]=is.read(buf,offset,0);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591if(entryOffset<entrySize){for(inti=offset;i<0;++i){buffer[i]=is.read(buf,offset,numToRead);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591returnis.read(buf,offset+entries.length,hasHitEOF);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java591entryOffset>entrySize,hasHitEOF=false;
