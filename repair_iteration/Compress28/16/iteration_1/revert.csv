projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(numRecords*this.recordSize)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.recordSize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.entrySize*this.recordSize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*numRecords)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(numRecords*this.recordSize)/this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(numRecords/this.recordSize)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303intpadding=(this.recordSize*numRecords)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.recordSize)/this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.entrySize*numRecords)-this.recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.blockSize)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize/this.recordSize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.entrySize/this.recordSize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize/this.numRecords)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize/this.entrySize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize/this.recordSize)-blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(numRecords*this.recordSize)-this.recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.recordSize)/numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303intpadding=(this.recordSize*this.recordSize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.entrySize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=IOUtils.skip(numRecords,this.entryOffset);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;++i){skipRecordPadding();}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=IOUtils.skip(this.entryOffset,this.recordSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303InputStreamis=getInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;++i){skipRecordPadding(i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;++i){skipRecordPadding(i,i);}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=IOUtils.skip(numRecords,this.recordSize);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.entrySize*this.recordSize)/numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.entrySize)/numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*numRecords)/this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.entrySize*numRecords)/this.recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303intpadding=(this.recordSize*this.recordSize)/this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303intpadding=(numRecords*this.recordSize)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303intpadding=(numRecords*this.recordSize)-this.recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303intpadding=(numRecords/this.recordSize)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.recordSize)/this.blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.length*this.recordSize)/this.recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(numRecords*this.recordSize)/this.blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){skipRecordPadding
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){skipRecordPadding
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry!=null){return;}
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getValue()==null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;i++){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getValue()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303InputStreamis=getRecordInputStream();
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303intpadding=(this.recordSize*this.entrySize)-numRecords;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize/this.recordSize)-this.entrySize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize/this.recordSize)-this.blockSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=IOUtils.skip(numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getName().endsWith("
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=IOUtils.skip(this.recordSize,numRecords);
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.getValue()!=null){
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303if(numRecords>0){for(inti=0;i<numRecords;++i){TarArchiveEntrycurrEntry=getCurrentEntry();if(currEntry.skipRecordPadding
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.entrySize*this.recordSize)-this.recordSize;
projects/Compress28/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java303longpadding=(this.recordSize*this.entrySize)-this.recordSize;
