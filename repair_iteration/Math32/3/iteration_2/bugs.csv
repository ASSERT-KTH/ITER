bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	9	None	replace
2	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN,  v);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN,  v);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN,  v);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	9	None	replace
3	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  v.type);  [CE]  cannot  find  symbol  type  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  v.type);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  v.type);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v);    	non-compiled	[CE]  cannot  find  symbol  type	9	None	replace
4	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  point);  [CE]  cannot  find  symbol  point  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  point);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  point);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v);    	non-compiled	[CE]  cannot  find  symbol  point	9	None	replace
5	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(true);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	3	None	replace
6	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(true);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	3	None	replace
7	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  point  =  getTree(true);  [CE]  tree  has  private  access  in  AbstractRegion  [FE]    ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  point  =  getTree(true);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  point  =  getTree(true);	      final    BSPTree    <    Euclidean2D>    point    =    getTree(false);    	non-compiled	[CE]  tree  has  private  access  in  AbstractRegion	14	None	replace
8	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  point  =  getTree(false,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  point  =  getTree(false,  v.length);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  point  =  getTree(false,  v.length);	      final    BSPTree    <    Euclidean2D>    point    =    getTree(false);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	14	None	replace
9	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(),  v);  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(),  v);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(),  v);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree();    	non-compiled	[CE]  ';'  expected	7	None	replace
10	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN,  v.length);  [CE]  method  setSize  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN,  v.length);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN,  v.length);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Vector2D.NaN);    	non-compiled	[CE]  method  setSize  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	4	None	replace
11	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  false);  setSize(Vector2D.NaN);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  false);  setSize(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  false);  setSize(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Vector2D.NaN);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	4	None	replace
12	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN,  v);  [CE]  method  setSize  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN,  v);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN,  v);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Vector2D.NaN);    	non-compiled	[CE]  method  setSize  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	4	None	replace
13	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  false);  setSize(Vector2D.NaN);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  false);  setSize(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  false);  setSize(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Vector2D.NaN);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	4	None	replace
14	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(false,    v.length);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	8	None	replace
15	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(false,    v.length);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	8	None	replace
16	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v.length,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v.length,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(false,  v.length,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(false,    v.length);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	8	None	replace
17	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreeCount();  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreeCount();  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTreeCount();	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(0);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
18	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getTree(true);  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getTree(true);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getTree(true);	      final    Vector2D[][]    v    =    getTree(false);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	15	None	replace
19	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getTree(false,  null);  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getTree(false,  null);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getTree(false,  null);	      final    Vector2D[][]    v    =    getTree(false);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	15	None	replace
20	[BUG]  [BUGGY]  setSize(Double.POSITIVE_INFINITY);  [CE]  tree  has  private  access  in  AbstractRegion  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  setSize(Double.POSITIVE_INFINITY);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	setSize(Double.POSITIVE_INFINITY);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(true);    setSize(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  tree  has  private  access  in  AbstractRegion	11	None	replace
21	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length);  setSize(Double.POSITIVE_INFINITY);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length);  setSize(Double.POSITIVE_INFINITY);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true,  v.length);  setSize(Double.POSITIVE_INFINITY);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(true);    setSize(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	11	None	replace
22	[BUG]  [BUGGY]      final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  [CE]  variable  point  is  already  defined  in  method  computeGeometricalProperties()  [FE]    ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]      final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	        final    BSPTree    <    Euclidean2D>    point    =    getTree(false);    final  BSPTree  <  Euclidean2D>  point  =  getTree(false);	  	non-compiled	[CE]  variable  point  is  already  defined  in  method  computeGeometricalProperties()	13	None	add
23	[BUG]  [BUGGY]      final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  Final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  [CE]  ';'  expected  [FE]      ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]      final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  Final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	        final    BSPTree    <    Euclidean2D>    point    =    getTree(false);    Final  BSPTree  <  Euclidean2D>  point  =  getTree(false);	  	non-compiled	[CE]  ';'  expected	13	None	add
24	[BUG]  [BUGGY]      final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  final  BSPTree  <  Euclidean2D>  point  =  getTree(true);  [CE]  variable  point  is  already  defined  in  method  computeGeometricalProperties()  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]      final  BSPTree  <  Euclidean2D>  point  =  getTree(false);  final  BSPTree  <  Euclidean2D>  point  =  getTree(true);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	        final    BSPTree    <    Euclidean2D>    point    =    getTree(false);    final  BSPTree  <  Euclidean2D>  point  =  getTree(true);	  	non-compiled	[CE]  variable  point  is  already  defined  in  method  computeGeometricalProperties()	13	None	add
25	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getVector2D();  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getVector2D();  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getVector2D();	      final    Vector2D[][]    v    =    getGeometricalProperties();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	12	None	replace
26	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getVertices();  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getVertices();  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getVertices();	      final    Vector2D[][]    v    =    getGeometricalProperties();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	12	None	replace
27	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getVectors();  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getVectors();  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getVectors();	      final    Vector2D[][]    v    =    getGeometricalProperties();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	12	None	replace
28	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v.length);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	16	None	replace
29	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.vertices);  [CE]  cannot  find  symbol  vertices  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.vertices);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.vertices);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v.length);    	non-compiled	[CE]  cannot  find  symbol  vertices	16	None	replace
30	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.width);  [CE]  cannot  find  symbol  width  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.width);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  v.width);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v.length);    	non-compiled	[CE]  cannot  find  symbol  width	16	None	replace
31	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v);  setSize(Double.POSITIVE_INFINITY);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v);  setSize(Double.POSITIVE_INFINITY);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v);  setSize(Double.POSITIVE_INFINITY);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	10	None	replace
32	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length);  setSize(Double.POSITIVE_INFINITY);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length);  setSize(Double.POSITIVE_INFINITY);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length);  setSize(Double.POSITIVE_INFINITY);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	10	None	replace
33	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	add	BSPTree  <  Euclidean2D>  tree  =  getTree(true);	      BSPTree    <    Euclidean2D>    tree    =    getTree(false);    	compilable	  [FE]  ClassCastException  	2	1	replace
34	[BUG]  [BUGGY]  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	BSPTree  <  Euclidean2D>  tree  =  getTree(true);	      BSPTree    <    Euclidean2D>    tree    =    getTree(false);    	compilable	  [FE]  ClassCastException  	2	1	replace
35	[BUG]  [BUGGY]  BSPTree  <  Euclidean2D>  tree  =  getTree(v);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  BSPTree  <  Euclidean2D>  tree  =  getTree(v);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	BSPTree  <  Euclidean2D>  tree  =  getTree(v);	      BSPTree    <    Euclidean2D>    tree    =    getTree(false);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	2	None	replace
36	[BUG]  [BUGGY]  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	BSPTree  <  Euclidean2D>  tree  =  getTree(v.length);	      BSPTree    <    Euclidean2D>    tree    =    getTree(false);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	2	None	replace
37	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(true);  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]                ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(true);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(true);	      final    BSPTree    <    Euclidean2D>[][]    v    =    getTree(false);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	5	None	replace
38	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(false,  v.length);  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]                  ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(false,  v.length);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(false,  v.length);	      final    BSPTree    <    Euclidean2D>[][]    v    =    getTree(false);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	5	None	replace
39	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN);  [CE]  method  setSize  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  method  setSize  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	10	None	replace
40	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setBarycenter(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	add	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setBarycenter(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Double.POSITIVE_INFINITY);    	compilable	  [FE]  ClassCastException  	10	1	replace
41	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setBarycenter(Vector2D.NaN);  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setBarycenter(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setBarycenter(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Double.POSITIVE_INFINITY);    	compilable	  [FE]  ClassCastException  	10	1	replace
42	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  point  =  getTree(0);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  point  =  getTree(0);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  point  =  getTree(0);	      final    BSPTree    <    Euclidean2D>    point    =    getTree(false);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	14	None	replace
43	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setBarycenter(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	add	final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setBarycenter(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(true);    setSize(Double.POSITIVE_INFINITY);    	compilable	  [FE]  ClassCastException  	11	1	replace
44	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setBarycenter(Vector2D.NaN);  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setBarycenter(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setBarycenter(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(true);    setSize(Double.POSITIVE_INFINITY);    	compilable	  [FE]  ClassCastException  	11	1	replace
45	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(axis,  v);  [CE]  cannot  find  symbol  axis  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(axis,  v);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(axis,  v);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v);    	non-compiled	[CE]  cannot  find  symbol  axis	9	None	replace
46	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreeRoot();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreeRoot();  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTreeRoot();	  final    BSPTree    <    Euclidean2D>    tree    =    getTree();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
47	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getGeometricalVectors();  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getGeometricalVectors();  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getGeometricalVectors();	      final    Vector2D[][]    v    =    getGeometricalProperties();    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	12	None	replace
48	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getTree();  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getTree();  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getTree();	      final    Vector2D[][]    v    =    getTree(false);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	15	None	replace
49	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(0);  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]                ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(0);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>[][]  v  =  getTree(0);	      final    BSPTree    <    Euclidean2D>[][]    v    =    getTree(false);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	5	None	replace
50	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v.length);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	16	None	replace
51	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.getAttribute(),  v.length);  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.getAttribute(),  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.getAttribute(),  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v.length);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
52	[BUG]  [BUGGY]  if(v.length  ==  1)  {  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setSize(Double.POSITIVE_INFINITY);  }  [CE]  tree  has  private  access  in  AbstractRegion  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  if(v.length  ==  1)  {  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setSize(Double.POSITIVE_INFINITY);  }  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	if(v.length  ==  1)  {  final  BSPTree  <  Euclidean2D>  tree  =  getTree(false);  setSize(Double.POSITIVE_INFINITY);  }	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  tree  has  private  access  in  AbstractRegion	10	None	replace
53	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  1);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  1);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  1);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(0);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	6	None	replace
54	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  1);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  1);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  1);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(0);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	6	None	replace
55	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  false);  setSize(Vector2D.NaN);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  false);  setSize(Vector2D.NaN);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v.length,  false);  setSize(Vector2D.NaN);	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(false);    setSize(Vector2D.NaN);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	4	None	replace
56	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreePoint();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreePoint();  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTreePoint();	  final    BSPTree    <    Euclidean2D>    tree    =    getTree();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
57	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreeInput();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTreeInput();  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTreeInput();	  final    BSPTree    <    Euclidean2D>    tree    =    getTree();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
58	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(Vector2D.NaN);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(v);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	9	None	replace
59	[BUG]  [BUGGY]  final  Vector2D[][]  v  =  getTree(false,  v.length);  [CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  Vector2D[][]  v  =  getTree(false,  v.length);  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  Vector2D[][]  v  =  getTree(false,  v.length);	      final    Vector2D[][]    v    =    getTree(false);    	non-compiled	[CE]  variable  v  is  already  defined  in  method  computeGeometricalProperties()	15	None	replace
60	[BUG]  [BUGGY]  if(v.length  ==  1)  {  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Double.POSITIVE_INFINITY);  }  [CE]  tree  has  private  access  in  AbstractRegion  [FE]          ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  if(v.length  ==  1)  {  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Double.POSITIVE_INFINITY);  }  [BUGGY]    final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	if(v.length  ==  1)  {  final  BSPTree  <  Euclidean2D>  tree  =  getTree(true);  setSize(Double.POSITIVE_INFINITY);  }	      final    BSPTree    <    Euclidean2D>    tree    =    getTree(true);    setSize(Double.POSITIVE_INFINITY);    	non-compiled	[CE]  tree  has  private  access  in  AbstractRegion	11	None	replace
61	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  false,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  false,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(v,  false,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(false,    v.length);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	8	None	replace
62	[BUG]  [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(null,  v.length);  [CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {    [BUGGY]  final  BSPTree  <  Euclidean2D>  tree  =  getTree(null,  v.length);  [BUGGY]    if  ((Boolean)  tree.getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  }  else  if  (v[0][0]  ==  null)  {  [CLASS]  PolygonsSet  ComparableSegment  SegmentsBuilder  [METHOD]  computeGeometricalProperties  [RETURN_TYPE]  void  [VARIABLES]  BSPTree  tree  boolean  Vector2D  point  double  factor  sum  sumX  sumY  x0  x1  y0  y1  AVLTree  sorted  OrderedTuple  sortingKey  Vector2D[][]  v  vertices  Vector2D[]  loop  	projects/Math32/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java	1.0	135	135	1	replace	final  BSPTree  <  Euclidean2D>  tree  =  getTree(null,  v.length);	  final    BSPTree    <    Euclidean2D>    tree    =    getTree(false,    v.length);    	non-compiled	[CE]  method  getTree  in  class  AbstractRegion<S,T>  cannot  be  applied  to  given  types;	8	None	replace
