bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  def.setLength(0);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setLength(0);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(0);	  def.clear();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
2	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
3	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
4	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getCrc()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getCrc()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
5	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));	  def.finish();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
6	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(entry.getCompressedSize());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize());	  def.finish();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
7	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));	  def.finish();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
8	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getSize()));	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
9	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getCrc()));	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
10	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getName()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getName()));	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
11	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getIn()));	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
12	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  written));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
13	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
14	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
15	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  1));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
16	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
17	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written);	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
18	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
19	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
20	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
21	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
22	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
23	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
24	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
25	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
26	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
27	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
28	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
29	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  1));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
30	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
31	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
32	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
33	[BUG]  [BUGGY]  def.set(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.set(entry.getName());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName());	  def.set();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
34	[BUG]  [BUGGY]  def.set(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.set(entry.getMethod());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getMethod());	  def.set();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
35	[BUG]  [BUGGY]  def.set(entry.getName(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.set(entry.getName(),  realCrc);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  realCrc);	  def.set();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
36	[BUG]  [BUGGY]  def.set(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.set(entry.getCompressedSize());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getCompressedSize());	  def.set();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
37	[BUG]  [BUGGY]  def.setInput(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setInput(entry.getMethod());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInput(entry.getMethod());	  def.set();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
38	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _deflate(entry.getMethod(),  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  DEFLATED);	  def.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
39	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _deflate(entry.getMethod(),  realCrc);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  realCrc);	  def.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
40	[BUG]  [BUGGY]  _deflate(entry.getName(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _deflate(entry.getName(),  realCrc);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  realCrc);	  def.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
41	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(!def.finished())  {  deflate();  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  deflate();  }	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
42	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod(),  DEFLATED);	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
43	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
44	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
45	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUnsupportedOperation();	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
46	[BUG]  [BUGGY]  deflate(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  deflate(entry.getMethod());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	deflate(entry.getMethod());	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
47	[BUG]  [BUGGY]  def.start();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.start();  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.start();	  def.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
48	[BUG]  [BUGGY]  Deflater.init(entry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  Deflater.init(entry);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(entry);	  def.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
49	[BUG]  [BUGGY]  Deflater.init();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  Deflater.init();  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init();	  def.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
50	[BUG]  [BUGGY]  def.init(entry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.init(entry);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.init(entry);	  def.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
51	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  1));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
52	[BUG]  [BUGGY]  def.setLength(entry.getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setLength(entry.getLength());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getLength());	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
53	[BUG]  [BUGGY]  def.setLength(def.getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setLength(def.getLength());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.getLength());	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
54	[BUG]  [BUGGY]  _deflate(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _deflate(entry.getName(),  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  DEFLATED);	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
55	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
56	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
57	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
58	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
59	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }  else  {  deflate();  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }  else  {  deflate();  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
60	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
61	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
62	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
63	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
64	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
65	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
66	[BUG]  [BUGGY]  def.setEncoding(encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setEncoding(encoding);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(encoding);	  def.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
67	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  DEFLATED);	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
68	[BUG]  [BUGGY]  _reportUndeflate(entry,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflate(entry,  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry,  DEFLATED);	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
69	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflate(entry.getMethod());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod());	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
70	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
71	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
72	[BUG]  [BUGGY]  _reportUndeflated();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflated();  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated();	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
73	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod(),  DEFLATED);	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
74	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  DEFLATED);	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
75	[BUG]  [BUGGY]  _reportUndeflated(entry,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  _reportUndeflated(entry,  DEFLATED);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry,  DEFLATED);	  deflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
76	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
77	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
78	[BUG]  [BUGGY]  def.setInit(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setInit(true);  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInit(true);	  def.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
79	[BUG]  [BUGGY]  def.setInstance(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setInstance(entry.getMethod());  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInstance(entry.getMethod());	  def.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
80	[BUG]  [BUGGY]  if(entry.getCrc()!=  realCrc)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getCrc()!=  realCrc)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCrc()!=  realCrc)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
81	[BUG]  [BUGGY]  def.remove();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.remove();  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.remove();	  def.clear();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
82	[BUG]  [BUGGY]  def.write('n');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.write('n');  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.write('n');	  def.flush();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
83	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
84	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
85	[BUG]  [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
86	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);    [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written));  [BUGGY]      written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
