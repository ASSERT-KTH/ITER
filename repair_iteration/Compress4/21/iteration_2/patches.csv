bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  /  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  /  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
2	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset(),  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset(),  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
3	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written),  DEFLATED);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
4	[BUG]  [BUGGY]  def.setLength(ZipUtil.adjustToLong(entry.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(ZipUtil.adjustToLong(entry.getCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(ZipUtil.adjustToLong(entry.getCrc()));	  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
5	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlock()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlock()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlock()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
6	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlank()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlank()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlank()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
7	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written  +  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written  +  1);	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),    written);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
8	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  1),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  1),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  1),  written);	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),    written);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
9	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize(),  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize(),  written));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),    written);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
10	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
11	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
12	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
13	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
14	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
15	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
16	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
17	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
18	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
19	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
20	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.finish();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.finish();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.finish();  }	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
21	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
22	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
23	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
24	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
25	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
26	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
27	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getTotalOut()));	  def.remove();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	81	None	replace
28	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
29	[BUG]  [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
30	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
31	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
32	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
33	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.set  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.set  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.set	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
34	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCompressed()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCompressed()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCompressed()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
35	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrcIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrcIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCrcIn()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
36	[BUG]  [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def!=  null)  {  if(!def.finished())  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
37	[BUG]  [BUGGY]  if(!def.finished())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
38	[BUG]  [BUGGY]  if(def.finished())  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.finished())  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.finished())  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
39	[BUG]  [BUGGY]  if(!def.finished())  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
40	[BUG]  [BUGGY]  if(!def.finishedIn())  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finishedIn())  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finishedIn())  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
41	[BUG]  [BUGGY]  def.setInit(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInit(false);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInit(false);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
42	[BUG]  [BUGGY]  Deflater.setInit(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.setInit(false);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.setInit(false);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
43	[BUG]  [BUGGY]  def.setInstance(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInstance(true);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInstance(true);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
44	[BUG]  [BUGGY]  def.setInitialize(false);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInitialize(false);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInitialize(false);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
45	[BUG]  [BUGGY]  Deflater.setInstance(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.setInstance(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.setInstance(entry.getMethod());	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
46	[BUG]  [BUGGY]  _reportUndeflate(entry,  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry,  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry,  DEFLATED,  written);	  _reportUndeflate(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
47	[BUG]  [BUGGY]  _reportUndeflate(entry,  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry,  BYTE_MASK);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry,  BYTE_MASK);	  _reportUndeflate(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
48	[BUG]  [BUGGY]  _reportUndeflate(entry,  EFS_FLAG);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry,  EFS_FLAG);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry,  EFS_FLAG);	  _reportUndeflate(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
49	[BUG]  [BUGGY]  _reportUndeflate(entry,  DEFLATED,  wrote);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry,  DEFLATED,  wrote);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry,  DEFLATED,  wrote);	  _reportUndeflate(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
50	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  *  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  *  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  *  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
51	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
52	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
53	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
54	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
55	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
56	[BUG]  [BUGGY]  entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
57	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
58	[BUG]  [BUGGY]  def.set(entry.getName(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  written);	  def.set(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
59	[BUG]  [BUGGY]  def.set(entry.getName()  +  comment);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName()  +  comment);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName()  +  comment);	  def.set(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
60	[BUG]  [BUGGY]  def.add(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.add(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.add(entry.getName());	  def.set(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
61	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
62	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate(entry.getMethod());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate(entry.getMethod());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate(entry.getMethod());  }	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
63	[BUG]  [BUGGY]  deflate(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  deflate(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	deflate(entry.getName());	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
64	[BUG]  [BUGGY]  deflate(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  deflate(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	deflate(entry.getCompressedSize());	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
65	[BUG]  [BUGGY]  deflate(entry.getMethod(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  deflate(entry.getMethod(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	deflate(entry.getMethod(),  written);	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
66	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  else  {  return;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  else  {  return;  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  else  {  return;  }	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
67	[BUG]  [BUGGY]  def.setInput(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInput(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInput(entry.getCompressedSize());	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
68	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
69	[BUG]  [BUGGY]  def.setInput(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInput(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInput(entry.getName());	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
70	[BUG]  [BUGGY]  def.setMethod(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setMethod(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setMethod(entry.getMethod());	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
71	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
72	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  return;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  return;  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  return;  }	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
73	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getTotalCrc()));	  def.setSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
74	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));	  def.setSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
75	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getTotalIn()));	  def.setSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
76	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));	  def.setSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
77	[BUG]  [BUGGY]  _reportUndeflate(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName());	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
78	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
79	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
80	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
81	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  deflate();  }	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
82	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  throw  new  IllegalStateException( " ");  }	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
83	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
84	[BUG]  [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	DEFLATED.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
85	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  DEFLATED,  written);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
86	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  EFS_FLAG);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getName(),  EFS_FLAG);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  EFS_FLAG);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
87	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  wrote);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  wrote);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  DEFLATED,  wrote);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
88	[BUG]  [BUGGY]  _reportError(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportError(entry.getName(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportError(entry.getName(),  DEFLATED);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
89	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  write);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  write);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  DEFLATED,  write);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
90	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getIn()));	  def.start();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
91	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
92	[BUG]  [BUGGY]  entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
93	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
94	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedS  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedS  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedS	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
95	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
96	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  DEFLATED,  written);	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
97	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
98	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  else  {  deflate();  }	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
99	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _deflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
100	[BUG]  [BUGGY]  deflate(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  deflate(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	deflate(entry.getMethod(),  DEFLATED);	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
101	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
102	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),  written);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
103	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
104	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalDelta()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalDelta()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
105	[BUG]  [BUGGY]  def.init(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.init(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.init(entry.getMethod());	  def.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
106	[BUG]  [BUGGY]  def.setMethod(def.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setMethod(def.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setMethod(def.getMethod());	  def.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
107	[BUG]  [BUGGY]  def.init(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.init(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.init(entry.getName());	  def.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
108	[BUG]  [BUGGY]  def.init(entry,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.init(entry,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.init(entry,  written);	  def.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
109	[BUG]  [BUGGY]  Deflater.instance();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.instance();  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.instance();	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
110	[BUG]  [BUGGY]  Deflater.init(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(entry.getMethod());	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
111	[BUG]  [BUGGY]  Deflater.deflate(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.deflate(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.deflate(entry.getMethod());	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
112	[BUG]  [BUGGY]  Deflater.deflate(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.deflate(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.deflate(entry.getName());	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
113	[BUG]  [BUGGY]  Deflater.deflate(entry.getName(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.deflate(entry.getName(),  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.deflate(entry.getName(),  realCrc);	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
114	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getName()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getName()));	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
115	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getMethod()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getMethod()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getMethod()));	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
116	[BUG]  [BUGGY]  def.setLength(ZipUtil.adjustToLong(entry.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(ZipUtil.adjustToLong(entry.getName()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(ZipUtil.adjustToLong(entry.getName()));	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
117	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getName()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getName()  +  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getName()  +  1));	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
118	[BUG]  [BUGGY]  _deflate(entry.getName(),  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  DEFLATED,  written);	  _deflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
119	[BUG]  [BUGGY]  _deflate(entry.getName(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  written);	  _deflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
120	[BUG]  [BUGGY]  deflate(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  deflate(entry.getName(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	deflate(entry.getName(),  DEFLATED);	  _deflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
121	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
122	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(entry.getCrc()!=  realCrc)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(entry.getCrc()!=  realCrc)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  if(entry.getCrc()!=  realCrc)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }	  if(entry.getCrc()!=    realCrc)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
123	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
124	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  *  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  *  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  *  written));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
125	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written),  DEFLATED);	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
126	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
127	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getTotalIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getTotalIn()));	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
128	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
129	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
130	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
131	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
132	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
133	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
134	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));	  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
135	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()),  written);	  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
136	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));	  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
137	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedIn()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
138	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedOut()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
139	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedDestination()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedDestination()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
140	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize()  +  written);	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
141	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  -  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  -  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize()  -  written);	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
142	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize()  +  1);	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
143	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(entry.getCompressedSize(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize(),  written);	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
144	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getIn()));	  def.setSize(ZipUtil.adjustToLong(entry.getIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
145	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
146	[BUG]  [BUGGY]  def.set(entry.getName(),  crc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName(),  crc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  crc);	  def.set(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
147	[BUG]  [BUGGY]  def.set(entry.getName(),  realCrc,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName(),  realCrc,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  realCrc,  written);	  def.set(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
148	[BUG]  [BUGGY]  def.set(entry.getName(),  realCrc,  crc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName(),  realCrc,  crc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  realCrc,  crc);	  def.set(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
149	[BUG]  [BUGGY]  def.set(entry.getName(),  realCrc,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName(),  realCrc,  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  realCrc,  DEFLATED);	  def.set(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
150	[BUG]  [BUGGY]  def.add(entry.getName(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.add(entry.getName(),  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.add(entry.getName(),  realCrc);	  def.set(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
151	[BUG]  [BUGGY]  Deflater.init(entry,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(entry,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(entry,  written);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
152	[BUG]  [BUGGY]  Deflater.init(def,  entry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(def,  entry);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(def,  entry);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
153	[BUG]  [BUGGY]  Deflater.init(raf,  entry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(raf,  entry);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(raf,  entry);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
154	[BUG]  [BUGGY]  Deflater.init(realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(realCrc);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
155	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  /  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  /  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
156	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  written),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  written),  DEFLATED);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
157	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written  +  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written  +  1);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),    written);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
158	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  entry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  entry);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  entry);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),    written);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
159	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1),  written);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),    written);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
160	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
161	[BUG]  [BUGGY]  if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
162	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
163	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
164	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
165	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
166	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
167	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
168	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjust  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjust  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjust	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
169	[BUG]  [BUGGY]  def.set(entry.getCompressedSize()  +  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getCompressedSize()  +  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getCompressedSize()  +  written);	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
170	[BUG]  [BUGGY]  def.set(entry.getCompressedSize(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getCompressedSize(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getCompressedSize(),  written);	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
171	[BUG]  [BUGGY]  def.set(entry.getCompressedSize()  -  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getCompressedSize()  -  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getCompressedSize()  -  written);	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
172	[BUG]  [BUGGY]  def.set(entry.getCompressedSize()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getCompressedSize()  +  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getCompressedSize()  +  1);	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
173	[BUG]  [BUGGY]  def.set(entry.getCompressedSize()  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getCompressedSize()  -  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getCompressedSize()  -  1);	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
174	[BUG]  [BUGGY]  def.setLength(entry.getLength()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getLength()  +  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getLength()  +  1);	  def.setLength(entry.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
175	[BUG]  [BUGGY]  def.setLength(entry.getLength()  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getLength()  -  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getLength()  -  1);	  def.setLength(entry.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
176	[BUG]  [BUGGY]  def.setLength(entry.getLength()  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getLength()  +  2);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getLength()  +  2);	  def.setLength(entry.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
177	[BUG]  [BUGGY]  def.setLength(entry.getLength()  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getLength()  -  2);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getLength()  -  2);	  def.setLength(entry.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
178	[BUG]  [BUGGY]  def.setLength(def.getLength()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.getLength()  +  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.getLength()  +  1);	  def.setLength(def.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
179	[BUG]  [BUGGY]  def.setLength(def.getLength()  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.getLength()  -  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.getLength()  -  1);	  def.setLength(def.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
180	[BUG]  [BUGGY]  def.setLength(def.getLength()  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.getLength()  +  2);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.getLength()  +  2);	  def.setLength(def.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
181	[BUG]  [BUGGY]  Def.setLength(entry.getLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setLength(entry.getLength());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setLength(entry.getLength());	  def.setLength(def.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
182	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  DEFLATED,  written);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
183	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  EFS_FLAG);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName(),  EFS_FLAG);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  EFS_FLAG);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
184	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  write);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  write);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  DEFLATED,  write);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
185	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  wrote);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  wrote);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  DEFLATED,  wrote);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
186	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
187	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
188	[BUG]  [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
189	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
190	[BUG]  [BUGGY]  def.set(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getMethod(),  DEFLATED);	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
191	[BUG]  [BUGGY]  def.set(entry.getMethod(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getMethod(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getMethod(),  written);	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
192	[BUG]  [BUGGY]  def.add(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.add(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.add(entry.getMethod());	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
193	[BUG]  [BUGGY]  def.set(entry.getMethod(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getMethod(),  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getMethod(),  realCrc);	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
194	[BUG]  [BUGGY]  def.setEncoding(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setEncoding(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(entry.getName());	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
195	[BUG]  [BUGGY]  def.setEncoding(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setEncoding(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(entry.getCompressedSize());	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
196	[BUG]  [BUGGY]  def.setEncoding(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setEncoding(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(entry.getMethod());	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
197	[BUG]  [BUGGY]  Deflater.setEncoding(encoding);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.setEncoding(encoding);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.setEncoding(encoding);	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
198	[BUG]  [BUGGY]  _reportUndeflated(entry,  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry,  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry,  DEFLATED,  written);	  _reportUndeflated(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
199	[BUG]  [BUGGY]  _reportUndeflated(entry,  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry,  BYTE_MASK);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry,  BYTE_MASK);	  _reportUndeflated(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
200	[BUG]  [BUGGY]  _reportUndeflated(entry,  EFS_FLAG);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry,  EFS_FLAG);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry,  EFS_FLAG);	  _reportUndeflated(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
201	[BUG]  [BUGGY]  _reportUndeflated(entry,  SHORT);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry,  SHORT);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry,  SHORT);	  _reportUndeflated(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
202	[BUG]  [BUGGY]  Deflated.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflated.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflated.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
203	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
204	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getTotalSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getTotalSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getTotalSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
205	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getRealSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(entry.getRealSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(entry.getRealSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
206	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
207	[BUG]  [BUGGY]  if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
208	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
209	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
210	[BUG]  [BUGGY]  if(entry.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
211	[BUG]  [BUGGY]  if(def.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
212	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
213	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
214	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
215	[BUG]  [BUGGY]  def.setLength(1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(1);	  def.setLength(0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
216	[BUG]  [BUGGY]  def.setLength(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getName());	  def.setLength(0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
217	[BUG]  [BUGGY]  def.setLength(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getCompressedSize());	  def.setLength(0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
218	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
219	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
220	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
221	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
222	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
223	[BUG]  [BUGGY]  if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
224	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod(),  DEFLATED,  written);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
225	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflated(entry.getMethod(),  DEFLATED);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflated(entry.getMethod(),  DEFLATED);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflated(entry.getMethod(),  DEFLATED);  }	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
226	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod(),  EFS_FLAG);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getMethod(),  EFS_FLAG);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod(),  EFS_FLAG);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
227	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED,  wrote);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED,  wrote);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod(),  DEFLATED,  wrote);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
228	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflated(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflated(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflated(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
229	[BUG]  [BUGGY]  _reportUndeflate();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate();  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate();	  _reportUndeflated();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
230	[BUG]  [BUGGY]  _reportError( "Undeflated  entry: "  +  entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportError( "Undeflated  entry: "  +  entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportError( "Undeflated  entry: "  +  entry.getName());	  _reportUndeflated();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
231	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod());	  _reportUndeflated();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
232	[BUG]  [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
233	[BUG]  [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
234	[BUG]  [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
235	[BUG]  [BUGGY]  if(def  ==  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def  ==  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def  ==  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
236	[BUG]  [BUGGY]  if(def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
237	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  written);	  _deflate(entry.getMethod(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
238	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  realCrc,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  realCrc,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  realCrc,  written);	  _deflate(entry.getMethod(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
239	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  crc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  crc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  crc);	  _deflate(entry.getMethod(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
240	[BUG]  [BUGGY]  _deflate(entry.getCompressedSize(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getCompressedSize(),  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getCompressedSize(),  realCrc);	  _deflate(entry.getMethod(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
241	[BUG]  [BUGGY]  deflate(entry.getMethod(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  deflate(entry.getMethod(),  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	deflate(entry.getMethod(),  realCrc);	  _deflate(entry.getMethod(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
242	[BUG]  [BUGGY]  def.write('n',  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.write('n',  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.write('n',  written);	  def.write('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
243	[BUG]  [BUGGY]  Deflater.write(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.write(entry.getName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.write(entry.getName());	  def.write('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
244	[BUG]  [BUGGY]  def.write('n',  write);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.write('n',  write);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.write('n',  write);	  def.write('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
245	[BUG]  [BUGGY]  def.write( "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.write( "n ");  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.write( "n ");	  def.write('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
246	[BUG]  [BUGGY]  def.write('n',  raf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.write('n',  raf);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.write('n',  raf);	  def.write('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
247	[BUG]  [BUGGY]  _deflate(entry.getName(),  crc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  crc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  crc);	  _deflate(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
248	[BUG]  [BUGGY]  _deflate(entry.getName(),  realCrc,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  realCrc,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  realCrc,  written);	  _deflate(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
249	[BUG]  [BUGGY]  _deflate(entry.getName(),  realCrc,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  realCrc,  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  realCrc,  DEFLATED);	  _deflate(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
250	[BUG]  [BUGGY]  _deflate(entry.getName(),  realCrc,  write);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  realCrc,  write);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  realCrc,  write);	  _deflate(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
251	[BUG]  [BUGGY]  _deflate(entry.getName(),  realCrc,  crc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  realCrc,  crc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  realCrc,  crc);	  _deflate(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
252	[BUG]  [BUGGY]  def.setInstance(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInstance(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInstance(entry.getCompressedSize());	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
253	[BUG]  [BUGGY]  def.setInstance(entry.getMethod(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInstance(entry.getMethod(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInstance(entry.getMethod(),  written);	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
254	[BUG]  [BUGGY]  def.setInstance(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInstance(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInstance(entry.getMethod(),  DEFLATED);	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
255	[BUG]  [BUGGY]  def.setInstance(entry.getDeclaredMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInstance(entry.getDeclaredMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInstance(entry.getDeclaredMethod());	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
256	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
257	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
258	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
259	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(dev.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(dev.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(dev.getCompressedSize()));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
260	[BUG]  [BUGGY]  entry.setCompressedSize(zipUtil.adjustToLong(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(zipUtil.adjustToLong(def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(zipUtil.adjustToLong(def.getCompressedSize()));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
261	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
262	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()  -  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
263	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod(),  DEFLATED,  written);	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
264	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
265	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
266	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUndeflate(entry.getMethod(),  DEFLATED);  }  else  {  throw  new  IllegalStateException( " ");  }	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
267	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  wrote);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  wrote);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod(),  DEFLATED,  wrote);	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
268	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
269	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  _reportUnsupportedOperation();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  _reportUnsupportedOperation();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  _reportUnsupportedOperation();  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
270	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
271	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  deflate();  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
272	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
273	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  throw  new  IllegalStateException( " ");  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
274	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
275	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
276	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
277	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),  written);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
278	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
279	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  /  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  /  written));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
280	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  *  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  *  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  *  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
281	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
282	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalDestination()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalDestination()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
283	[BUG]  [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	DEFLATED.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
284	[BUG]  [BUGGY]  _throwUnsupportedOperation();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUnsupportedOperation();  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
285	[BUG]  [BUGGY]  _throwInternal();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwInternal();  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwInternal();	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
286	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
287	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  else  {  deflate();  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
288	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
289	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {!def.finished())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
290	[BUG]  [BUGGY]  _throwUndeflated(entry,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflated(entry,  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflated(entry,  DEFLATED);	  _reportUndeflated(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
291	[BUG]  [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
292	[BUG]  [BUGGY]  if(def  ==  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def  ==  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def  ==  null)  {  if(!def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
293	[BUG]  [BUGGY]  def.set(entry.getName(),  realCrc  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName(),  realCrc  +  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  realCrc  +  1);	  def.set(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
294	[BUG]  [BUGGY]  if(def!=  null)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def!=  null)  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def!=  null)  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
295	[BUG]  [BUGGY]  if(!def.enabled())  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.enabled())  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.enabled())  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
296	[BUG]  [BUGGY]  if(def  ==  null)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def  ==  null)  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def  ==  null)  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
297	[BUG]  [BUGGY]  Deflate.append(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflate.append(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflate.append(entry.getCompressedSize());	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
298	[BUG]  [BUGGY]  _deflate(entry.getName(),  def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  def);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  def);	  _deflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
299	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
300	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  else  {  deflate();  }	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
301	[BUG]  [BUGGY]  def.setInstance(def.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInstance(def.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInstance(def.getMethod());	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
302	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  else  {  def.finish();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  else  {  def.finish();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInstance(entry.getMethod());  }  else  {  def.finish();  }	  def.setInstance(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
303	[BUG]  [BUGGY]  _throwUndeflate(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflate(entry.getName(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflate(entry.getName(),  DEFLATED);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
304	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  DEFLATER_BLOCK_SIZE);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
305	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName(),  DEFLATED,  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  DEFLATED,  realCrc);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
306	[BUG]  [BUGGY]  _addUndeflate(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _addUndeflate(entry.getName(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_addUndeflate(entry.getName(),  DEFLATED);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
307	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  DEFLATER_BLOCK_SIZE);	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
308	[BUG]  [BUGGY]  _deflate(entry.getCompressedSize(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getCompressedSize(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getCompressedSize(),  DEFLATED);	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
309	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  DEFLATED  +  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  DEFLATED  +  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  DEFLATED  +  written);	  _deflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
310	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  deflate();  }	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
311	[BUG]  [BUGGY]  def.setInput(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInput(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInput(entry.getMethod(),  DEFLATED);	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
312	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  def.finish();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  def.finish();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setInput(entry.getMethod());  }  else  {  def.finish();  }	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
313	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
314	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
315	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
316	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
317	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()  -  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
318	[BUG]  [BUGGY]  def.set(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName(),  DEFLATED);	  def.set(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
319	[BUG]  [BUGGY]  def.set(entry.getName()  + ": "  +  Long.toHexString(entry.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName()  + ": "  +  Long.toHexString(entry.getTotalOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName()  + ": "  +  Long.toHexString(entry.getTotalOut()));	  def.set(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
320	[BUG]  [BUGGY]  def.set(entry.getName()  + ": "  +  Long.toHexString(entry.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getName()  + ": "  +  Long.toHexString(entry.getTotalIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getName()  + ": "  +  Long.toHexString(entry.getTotalIn()));	  def.set(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
321	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
322	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate(entry.getMethod());  }  else  {  deflate();  }	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
323	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
324	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getName()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getName()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getName()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
325	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getName()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getName()));	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
326	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getName()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getName()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getName()));  }  else  {  deflate();  }	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
327	[BUG]  [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getName()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(ZipUtil.adjustToLong(def.getName()));	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
328	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  -  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  -  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
329	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
330	[BUG]  [BUGGY]  if(def.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.getCrc()!=  realCrc)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
331	[BUG]  [BUGGY]  if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
332	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedOut()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
333	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
334	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
335	[BUG]  [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	DEFLATED.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));	  if(entry.getCompressedSize()!=    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
336	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDegree()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDegree()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDegree()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
337	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
338	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
339	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
340	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod(),  DEFLATER_BLOCK_SIZE);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
341	[BUG]  [BUGGY]  _throwUndeflated(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflated(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflated(entry.getMethod(),  DEFLATED);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
342	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED,  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED,  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod(),  DEFLATED,  realCrc);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
343	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
344	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
345	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));  }  else  {  deflate();  }	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
346	[BUG]  [BUGGY]  def.append('n');  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.append('n');  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.append('n');	  def.write('n');    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	82	None	replace
347	[BUG]  [BUGGY]  _throwUndeflate(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflate(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflate(entry.getMethod());	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
348	[BUG]  [BUGGY]  _reportUndeflate(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getCompressedSize());	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
349	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod(),  def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getMethod(),  def);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod(),  def);	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
350	[BUG]  [BUGGY]  _reportError(entry.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportError(entry.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportError(entry.getMethod());	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
351	[BUG]  [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalDegree()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setSize(ZipUtil.adjustToLong(def.getTotalDegree()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setSize(ZipUtil.adjustToLong(def.getTotalDegree()));	  def.setSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
352	[BUG]  [BUGGY]  def.init(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.init(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.init(entry.getMethod(),  DEFLATED);	  def.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
353	[BUG]  [BUGGY]  def.setMethod(DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setMethod(DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setMethod(DEFLATED);	  def.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
354	[BUG]  [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def!=  null)  {  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  if(!def.finished())    {    def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
355	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  def);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  def);	  _deflate(entry.getMethod(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
356	[BUG]  [BUGGY]  _deflate(entry.getMethod(),  realCrc,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getMethod(),  realCrc,  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getMethod(),  realCrc,  DEFLATED);	  _deflate(entry.getMethod(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
357	[BUG]  [BUGGY]  _throwUndeflate(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflate(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflate(entry.getMethod(),  DEFLATED);	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
358	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod(),  DEFLATER_BLOCK_SIZE);	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
359	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod(),  DEFLATED,  realCrc);	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
360	[BUG]  [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  write);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getMethod(),  DEFLATED,  write);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getMethod(),  DEFLATED,  write);	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
361	[BUG]  [BUGGY]  def.add(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.add(entry.getCompressedSize());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.add(entry.getCompressedSize());	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
362	[BUG]  [BUGGY]  Deflater.init(def,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(def,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(def,  written);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
363	[BUG]  [BUGGY]  Deflater.init(def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(def);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(def);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
364	[BUG]  [BUGGY]  Deflater.init(def,  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(def,  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(def,  realCrc);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
365	[BUG]  [BUGGY]  Deflater.init(def,  write);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(def,  write);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(def,  write);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
366	[BUG]  [BUGGY]  Deflater.init(def,  read);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(def,  read);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(def,  read);	  Deflater.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
367	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  DEFLATER_BLOCK_SIZE);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
368	[BUG]  [BUGGY]  _throwUndeflated(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflated(entry.getName(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflated(entry.getName(),  DEFLATED);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
369	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getName(),  DEFLATED,  realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  DEFLATED,  realCrc);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
370	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  -  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize()  -  1);	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
371	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  2);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize()  +  2);	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
372	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
373	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
374	[BUG]  [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getLength()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getLength()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(ZipUtil.adjustToLong(def.getLength()));	  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
375	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }	  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
376	[BUG]  [BUGGY]  def.setLength(def.getLength()  -  2);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.getLength()  -  2);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.getLength()  -  2);	  def.setLength(def.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
377	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  else  {  deflate();  }	  def.setSize(ZipUtil.adjustToLong(entry.getIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
378	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  else  {  def.finish();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  else  {  def.finish();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getIn()));  }  else  {  def.finish();  }	  def.setSize(ZipUtil.adjustToLong(entry.getIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
379	[BUG]  [BUGGY]  Def.setSize(ZipUtil.adjustToLong(def.getIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setSize(ZipUtil.adjustToLong(def.getIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setSize(ZipUtil.adjustToLong(def.getIn()));	  def.setSize(ZipUtil.adjustToLong(entry.getIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
380	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
381	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()  +  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
382	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written),  DEFLATED);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
383	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
384	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
385	[BUG]  [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(ZipUtil.adjustToLong(def.getCompressedSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
386	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.set  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.set  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.set	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
387	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrcOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrcOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCrcOut()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
388	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOffset()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOffset()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
389	[BUG]  [BUGGY]  _reportUndeflate(entry,  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry,  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry,  DEFLATER_BLOCK_SIZE);	  _reportUndeflate(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
390	[BUG]  [BUGGY]  _throwUndeflate(entry,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflate(entry,  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflate(entry,  DEFLATED);	  _reportUndeflate(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
391	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
392	[BUG]  [BUGGY]  _throwUndeflated();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _throwUndeflated();  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_throwUndeflated();	  _reportUndeflated();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
393	[BUG]  [BUGGY]  Deflater.init(entry,  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(entry,  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(entry,  DEFLATED);	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
394	[BUG]  [BUGGY]  Deflater.init(DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.init(DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.init(DEFLATED);	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
395	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
396	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
397	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
398	[BUG]  [BUGGY]  def.end();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.end();  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.end();	  def.start();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
399	[BUG]  [BUGGY]  def.setStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setStart();  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setStart();	  def.start();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
400	[BUG]  [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
401	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()),  written);	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()),    written);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
402	[BUG]  [BUGGY]  if(def!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
403	[BUG]  [BUGGY]  if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(writer!=  null)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
404	[BUG]  [BUGGY]  def.set(entry.getMethod()  + ": "  +  Long.toHexString(entry.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getMethod()  + ": "  +  Long.toHexString(entry.getTotalOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getMethod()  + ": "  +  Long.toHexString(entry.getTotalOut()));	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
405	[BUG]  [BUGGY]  def.set(entry.getMethod()  + ": "  +  Long.toHexString(entry.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getMethod()  + ": "  +  Long.toHexString(entry.getName()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getMethod()  + ": "  +  Long.toHexString(entry.getName()));	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
406	[BUG]  [BUGGY]  def.setInitialize(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInitialize(true);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInitialize(true);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
407	[BUG]  [BUGGY]  def.setInitializing(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInitializing(true);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInitializing(true);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
408	[BUG]  [BUGGY]  _deflate(entry.getName(),  realCrc,  def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  realCrc,  def);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  realCrc,  def);	  _deflate(entry.getName(),    realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
409	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
410	[BUG]  [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  DEFLATED.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	DEFLATED.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));	  if(entry.getCrc()!=    realCrc)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	80	None	replace
411	[BUG]  [BUGGY]  if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
412	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));  }  else  {  deflate();  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
413	[BUG]  [BUGGY]  def.setEncoding(encoded);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setEncoding(encoded);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(encoded);	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
414	[BUG]  [BUGGY]  def.setEncoding(comment);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setEncoding(comment);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(comment);	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
415	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
416	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
417	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getSize()));  }  else  {  deflate();  }	  def.setSize(ZipUtil.adjustToLong(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
418	[BUG]  [BUGGY]  Def.setSize(ZipUtil.adjustToLong(def.getSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setSize(ZipUtil.adjustToLong(def.getSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setSize(ZipUtil.adjustToLong(def.getSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
419	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToInt(def.getCompressedSize()));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
420	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(Def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(Def.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(Def.getCompressedSize()));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
421	[BUG]  [BUGGY]  _deflate(entry.getName(),  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _deflate(entry.getName(),  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_deflate(entry.getName(),  DEFLATER_BLOCK_SIZE);	  _deflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
422	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  +  written),  DEFLATED);	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
423	[BUG]  [BUGGY]  def.setLength(entry.getCompressedLength());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getCompressedLength());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getCompressedLength());	  def.setLength(entry.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
424	[BUG]  [BUGGY]  def.setLength(entry.getLength()  -  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(entry.getLength()  -  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(entry.getLength()  -  written);	  def.setLength(entry.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
425	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCrc(realCrc);  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
426	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCrc(realCrc);    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	84	None	replace
427	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()  +  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()  +  written));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
428	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()),  written);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
429	[BUG]  [BUGGY]  if(def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.finished())  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
430	[BUG]  [BUGGY]  def.setLength(ZipUtil.adjustToLong(entry.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(ZipUtil.adjustToLong(entry.getCompressedSize()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(ZipUtil.adjustToLong(entry.getCompressedSize()));	  def.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
431	[BUG]  [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  +  1));  }	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
432	[BUG]  [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(ZipUtil.adjustToLong(def.getCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(ZipUtil.adjustToLong(def.getCrc()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
433	[BUG]  [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()  -  written));	  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
434	[BUG]  [BUGGY]  def.init(realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.init(realCrc);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.init(realCrc);	  def.init(entry);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
435	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
436	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
437	[BUG]  [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
438	[BUG]  [BUGGY]  if(!def.enabled())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.enabled())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.enabled())  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
439	[BUG]  [BUGGY]  if(!def.finished()  ||  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished()  ||  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished()  ||  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
440	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
441	[BUG]  [BUGGY]  if(def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.finished())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
442	[BUG]  [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(def.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(def.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
443	[BUG]  [BUGGY]  if(!def.enabled())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.enabled())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.enabled())  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
444	[BUG]  [BUGGY]  if(!def.finished()  ||  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished()  ||  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished()  ||  DEFLATED)  {  deflate();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!def.finished())    {    deflate();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
445	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  def.setCompressedSize(entry.getCompressedSize());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  def.setCompressedSize(entry.getCompressedSize());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  def.setCompressedSize(entry.getCompressedSize());  }	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
446	[BUG]  [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(entry.getCompressedSize()  +  BYTE_MASK);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(entry.getCompressedSize()  +  BYTE_MASK);	  def.setCompressedSize(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
447	[BUG]  [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }	  if(!def.finished())    {    def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	85	None	replace
448	[BUG]  [BUGGY]  Def.setSize(ZipUtil.adjustToLong(def.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Def.setSize(ZipUtil.adjustToLong(def.getName()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Def.setSize(ZipUtil.adjustToLong(def.getName()));	  def.setSize(ZipUtil.adjustToLong(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
449	[BUG]  [BUGGY]  _reportUndeflate(entry.getCompressedSize(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getCompressedSize(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getCompressedSize(),  DEFLATED);	  _reportUndeflate(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
450	[BUG]  [BUGGY]  if(!def.finished()  ||  DEFLATED.equals(entry.getName()))  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished()  ||  DEFLATED.equals(entry.getName()))  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished()  ||  DEFLATED.equals(entry.getName()))  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
451	[BUG]  [BUGGY]  if(!def.finished()  ||  DEFLATED.equals(realCrc))  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished()  ||  DEFLATED.equals(realCrc))  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished()  ||  DEFLATED.equals(realCrc))  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
452	[BUG]  [BUGGY]  if(!def.finished()  ||  DEFLATED.equals(entry.getCompressedSize()))  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished()  ||  DEFLATED.equals(entry.getCompressedSize()))  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished()  ||  DEFLATED.equals(entry.getCompressedSize()))  {  deflate();  }	  if(!def.finished())    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
453	[BUG]  [BUGGY]  def.set(def.getMethod());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(def.getMethod());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(def.getMethod());	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
454	[BUG]  [BUGGY]  def.set(entry.getSimpleName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getSimpleName());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getSimpleName());	  def.set(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
455	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
456	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
457	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));  }  else  {  deflate();  }	  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
458	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
459	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  def.setSize(ZipUtil.adjustToLong(entry.getTotalIn()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
460	[BUG]  [BUGGY]  if(entry.getCrc()!=  realCrc)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCrc()!=  realCrc)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCrc()!=  realCrc)  {  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));  }	  def.setSize(ZipUtil.adjustToLong(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
461	[BUG]  [BUGGY]  def.setEncoding(entry.getEncoding());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setEncoding(entry.getEncoding());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(entry.getEncoding());	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
462	[BUG]  [BUGGY]  def.setEncoding(ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setEncoding(ENCODING);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setEncoding(ENCODING);	  def.setEncoding(encoding);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
463	[BUG]  [BUGGY]  def.setInitialSize(true);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInitialSize(true);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInitialSize(true);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
464	[BUG]  [BUGGY]  def.setInit(true,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInit(true,  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInit(true,  written);	  def.setInit(true);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
465	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
466	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    def.setCompressedSize(ZipUtil.adjustToLong(entry.getCrc()));    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
467	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
468	[BUG]  [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED  +  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getMethod(),  DEFLATED  +  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getMethod(),  DEFLATED  +  written);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
469	[BUG]  [BUGGY]  _reportUndeflated(entry.getCompressedSize(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getCompressedSize(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getCompressedSize(),  DEFLATED);	  _reportUndeflated(entry.getMethod(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
470	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  def.close();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  def.close();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  _reportUnsupportedOperation();  }  else  {  def.close();  }	  _reportUnsupportedOperation();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
471	[BUG]  [BUGGY]  _reportUndeflated(entry.getName(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry.getName(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry.getName(),  written);	  _reportUndeflated(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
472	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	86	None	replace
473	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
474	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
475	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
476	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
477	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  def.set(entry.getCompressedSize());  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  def.set(entry.getCompressedSize());  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  def.set(entry.getCompressedSize());  }	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
478	[BUG]  [BUGGY]  def.set(entry.getCompressedSize()  +  BYTE_MASK);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.set(entry.getCompressedSize()  +  BYTE_MASK);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.set(entry.getCompressedSize()  +  BYTE_MASK);	  def.set(entry.getCompressedSize());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
479	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written  +  1));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()  -  written  +  1));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
480	[BUG]  [BUGGY]  def.setLength(def.getLength()  +  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.getLength()  +  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.getLength()  +  written);	  def.setLength(def.getLength());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
481	[BUG]  [BUGGY]  if(!def.finished())  {  _reportUndeflated();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  _reportUndeflated();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  _reportUndeflated();  }	  _reportUndeflated();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
482	[BUG]  [BUGGY]  if(!def.finished())  {  _reportUndeflated();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  _reportUndeflated();  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  _reportUndeflated();  }  else  {  deflate();  }	  _reportUndeflated();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
483	[BUG]  [BUGGY]  def.setLength(def.length());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.length());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.length());	  def.setLength(0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
484	[BUG]  [BUGGY]  def.setLength(256);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(256);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(256);	  def.setLength(0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
485	[BUG]  [BUGGY]  def.setLength(def.length);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.length);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.length);	  def.setLength(0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
486	[BUG]  [BUGGY]  def.setLength(def.length()  -  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setLength(def.length()  -  1);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setLength(def.length()  -  1);	  def.setLength(0);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
487	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  written)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  written)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  written)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
488	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  written)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()  ==  written)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()  ==  written)  {  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
489	[BUG]  [BUGGY]  def.setInput(entry.getCompressedIn());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInput(entry.getCompressedIn());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInput(entry.getCompressedIn());	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
490	[BUG]  [BUGGY]  def.setInput(entry.getCompressed());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setInput(entry.getCompressed());  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setInput(entry.getCompressed());	  def.setInput(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
491	[BUG]  [BUGGY]  _reportUndeflate(entry.getName(),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflate(entry.getName(),  written);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflate(entry.getName(),  written);	  _reportUndeflate(entry.getName(),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
492	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  written),  DEFLATED);	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    -    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	83	None	replace
493	[BUG]  [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(!def.finished())  {  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));  }	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
494	[BUG]  [BUGGY]  def.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  def.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	def.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));	  def.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
495	[BUG]  [BUGGY]  _reportUndeflated(entry,  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  _reportUndeflated(entry,  DEFLATER_BLOCK_SIZE);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	_reportUndeflated(entry,  DEFLATER_BLOCK_SIZE);	  _reportUndeflated(entry,    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
496	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));  }	  Def.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
497	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
498	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()!=  DEFLATED)  {  _reportUndeflate(entry.getMethod());  }  else  {  deflate();  }	  _reportUndeflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
499	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(DefLATER_BLOCK_SIZE));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(DefLATER_BLOCK_SIZE));  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(DefLATER_BLOCK_SIZE));	  entry.setCompressedSize(ZipUtil.adjustToLong(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
500	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  deflate(entry.getMethod());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
501	[BUG]  [BUGGY]  Deflater.deflate(entry.getMethod(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.deflate(entry.getMethod(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.deflate(entry.getMethod(),  DEFLATED);	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
502	[BUG]  [BUGGY]  Deflater.deflate(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);      [BUGGY]  Deflater.deflate(entry.getName(),  DEFLATED);  [BUGGY]        written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	Deflater.deflate(entry.getName(),  DEFLATED);	  Deflater.init();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
