projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368intrealCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalMillis()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(creator.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(crc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(realCrc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(realCrc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(cref.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.reset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getLastChild()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDeltaIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.reset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getDeltaIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastChild()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalout()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalMillis()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.finish()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.finish()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setInput(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()*written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setRealIn(ZipUtil.adjustToLong(def.getRealIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealDeltaIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(crc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(creator.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(cref.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalMillis()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOff()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/totalIn));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(realCrc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getAncestor();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getRawEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=def.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getAnchor();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getTotalIn()));return;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.gettotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368longrealCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368intrealCrc=crc.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368doublerealCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368charrealCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368shortrealCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368intrealCrc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368intrealCrc=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(!def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=def.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(!def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=def.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(realCrc!=DEFLATED){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(realCrc));written+=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(realCrc!=DEFLATED){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=def.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getValueIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setLength(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()/comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()-comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),written+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getCompressedSize()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getEndIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getEnd()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getEnd()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalMillis()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalEnd()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.totalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getReset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.totalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getTotalIn()));break;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.gettotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOUT()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getDeltaIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getDeltaIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCrcIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getLastIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getStartIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getReset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.reset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(realCrc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(crc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getIn()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDeleta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater.setMethod(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+realCrc),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()*realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(creator.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalMillis(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedSize()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()-comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalUp()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getValueIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=crc.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setMethod(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()*comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()/comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getEndIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getEnd()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn()/1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+realCrc),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=crc.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getCrc();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getReal();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(crc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=crc.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=written+entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getDataStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getCompressedSize()+written;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getFirstChild()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getLastChild()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getLastChild(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=entry.getValue()-written;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastChild()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getFirstChild()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastChild(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastChild()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getLastIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=_raf.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=DEFLATED.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entryentry=getEntry(def.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater.setMethod(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));break
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())+written,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getRealIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getDeltaIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));return
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(entry.getTotalIn()));written+=def.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(!def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=DEFLATED.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=DEFLATED.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/2));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressionIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getCompressedEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.reset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getDeltaIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastChild()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.gettotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setPosition(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getCompressedIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalUp()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getItalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getIntalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.gettotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getCompressedSize()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(cref.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=raf.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getDataStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(creator.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getEntry(0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIntalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),written+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.reset()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.reset()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getDeltaIn()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setDelimiter(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getLastChild()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getLastChild(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=def.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getRealCrc();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()==DEFLATER_BLOCK_SIZE){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIn()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getIntotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<L>realCrc=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflatercrc=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealIn()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));break;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()>=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getLastChild()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setTotal(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getCrcIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(def.getIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Deflater<?>realCrc=entry.getReal();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setValue(ZipUtil.adjustToLong(def.getLastChild()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getLastChild()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getCompressedSize()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368LongrealCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry.setCompressedSize(ZipUtil.adjustToLong(def.finish()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalIn()-comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=def.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDeserial()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setSize(ZipUtil.adjustToLong(cref.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getCompressedSize()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATER_BLOCK_SIZE){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setMethod(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));break;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),written+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getDeltaIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368entry.setCompressedSize(ZipUtil.adjustToLong(def.getStartIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java368Entry<K,V>entry=entry.getEntryBytes();
