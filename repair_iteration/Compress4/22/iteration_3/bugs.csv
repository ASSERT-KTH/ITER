bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile();	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
2	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getName());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile(entry.getName());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
3	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile(entry.getCompressedSize());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
4	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getValue());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile(entry.getValue());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
5	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getKey());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getKey());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile(entry.getKey());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
6	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getLowerCrc());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getLowerCrc());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile(entry.getLowerCrc());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
7	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile(entry.getSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile(entry.getSize());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
8	[BUG]  [BUGGY]  Deflater  raf  =  entry.getReal();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getReal();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getReal();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
9	[BUG]  [BUGGY]  Deflater  raf  =  entry.getImplicitReturn();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getImplicitReturn();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getImplicitReturn();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
10	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
11	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
12	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToL  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToL  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToL	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
13	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
14	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
15	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
16	[BUG]  [BUGGY]  Deflater  raf  =  entry.getKey();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getKey();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getKey();	  Deflater    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
17	[BUG]  [BUGGY]  Deflater  raf  =  entry.getAssignedValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getAssignedValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getAssignedValue();	  Deflater    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
18	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRawValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getRawValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getRawValue();	  Deflater    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
19	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRawClass();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getRawClass();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getRawClass();	  Deflater    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
20	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getKey();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getKey();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getKey();	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
21	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getValue()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getValue()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getValue()  +  1;	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
22	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getRawValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getRawValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getRawValue();	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
23	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getValue()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getValue()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getValue()  -  1;	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
24	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getRaw();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getRaw();	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
25	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  *  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getCompressedSize()  *  dataStart;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  *  dataStart;	  written    -=    entry.getCompressedSize()    +    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
26	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getCompressedSize()  +  2;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  +  2;	  written    -=    entry.getCompressedSize()    +    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
27	[BUG]  [BUGGY]  Written  -=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  -=  entry.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  -=  entry.getCompressedSize();	  written    -=    entry.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
28	[BUG]  [BUGGY]  wrote  -=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  wrote  -=  entry.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	wrote  -=  entry.getCompressedSize();	  written    -=    entry.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
29	[BUG]  [BUGGY]  written  -=  entry.getDataStart()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getDataStart()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getDataStart()  +  1;	  written    -=    entry.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
30	[BUG]  [BUGGY]  written  -=  entry.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getRaw();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getRaw();	  written    -=    entry.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
31	[BUG]  [BUGGY]  write(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  write(entry.getName());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	write(entry.getName());	  written    -=    entry.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
32	[BUG]  [BUGGY]  written  -=  entry.getImmediateParent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getImmediateParent();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getImmediateParent();	  written    +=    entry.getImmediateParent();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
33	[BUG]  [BUGGY]  written  +=  entry.getImmediateParent()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getImmediateParent()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getImmediateParent()  -  1;	  written    +=    entry.getImmediateParent();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
34	[BUG]  [BUGGY]  written  +=  entry.getDataEnd()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataEnd()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataEnd()  +  1;	  written    +=    entry.getDataStart()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
35	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  /  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  /  1;	  written    +=    entry.getDataStart()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
36	[BUG]  [BUGGY]  Written  +=  entry.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getDataStart();	  written    +=    entry.getDataStart()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
37	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  dataStart)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  dataStart)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  dataStart)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
38	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
39	[BUG]  [BUGGY]  if(entry.getName()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getName()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
40	[BUG]  [BUGGY]  if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
41	[BUG]  [BUGGY]  if(entry.getCompressedSize()  >=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  >=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  >=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
42	[BUG]  [BUGGY]  if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
43	[BUG]  [BUGGY]  written  -=  realCrc.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  realCrc.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  realCrc.getDataStart();	  written    +=    realCrc.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
44	[BUG]  [BUGGY]  written  -=  def.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  def.getName();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  def.getName();	  written    +=    def.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
45	[BUG]  [BUGGY]  written  +=  def.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getLength();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getLength();	  written    +=    def.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
46	[BUG]  [BUGGY]  written  -=  def.getCompressedSize()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  def.getCompressedSize()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  def.getCompressedSize()  -  1;	  written    +=    def.getCompressedSize()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
47	[BUG]  [BUGGY]  written  +=  def.getCompressedSize()  *  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getCompressedSize()  *  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getCompressedSize()  *  1;	  written    +=    def.getCompressedSize()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
48	[BUG]  [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }	  written    -=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
49	[BUG]  [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }	  written    -=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
50	[BUG]  [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  def.reset();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  def.reset();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  def.reset();  }	  written    -=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
51	[BUG]  [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  return;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  return;  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getDataStart()!=  dataStart)  {  written  -=  entry.getDataStart();  }  else  {  return;  }	  written    -=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
52	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRawEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getRawEntry();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getRawEntry();	  Deflater    raf    =    entry.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
53	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRawParent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getRawParent();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getRawParent();	  Deflater    raf    =    entry.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
54	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRealCrc();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getRealCrc();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getRealCrc();	  Deflater    raf    =    entry.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
55	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getCompressedSize());	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
56	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getName(),  DEFLATED);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getName(),  DEFLATED);	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
57	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getKey());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getKey());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getKey());	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
58	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getImmediateParent());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getImmediateParent());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getImmediateParent());	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
59	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getName(),  realCrc);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getName(),  realCrc);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getName(),  realCrc);	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
60	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getRaw());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getRaw());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getRaw());	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
61	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getName()  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getName()  +  1);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getName()  +  1);	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
62	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getCompressedSize());	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
63	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName()  + ": ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName()  + ": ");  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getName()  + ": ");	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
64	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName(),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName(),  DEFLATED);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getName(),  DEFLATED);	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
65	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getSize());	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
66	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName(),  def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName(),  def);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getName(),  def);	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
67	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName()  + "n ");  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName()  + "n ");  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getName()  + "n ");	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
68	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getKey();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getKey();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getKey();	  Deflater    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
69	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRawValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRawValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getRawValue();	  Deflater    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
70	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getValue()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getValue()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getValue()  +  1;	  Deflater    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
71	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getDataStart();	  Deflater    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
72	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
73	[BUG]  [BUGGY]  if(!def.finished())  {  if(entry.getName().endsWith( "/   "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  if(entry.getName().endsWith( "/   "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  if(entry.getName().endsWith( "/   "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
74	[BUG]  [BUGGY]  Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
75	[BUG]  [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
76	[BUG]  [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
77	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
78	[BUG]  [BUGGY]  written  -=  def.getCompressedSize()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  def.getCompressedSize()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  def.getCompressedSize()  +  1;	  written    +=    def.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
79	[BUG]  [BUGGY]  Written  +=  def.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  def.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  def.getCompressedSize();	  written    +=    def.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
80	[BUG]  [BUGGY]  written  +=  def.getCompressedSize()  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getCompressedSize()  /  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getCompressedSize()  /  1;	  written    +=    def.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
81	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
82	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
83	[BUG]  [BUGGY]  ||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  ||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
84	[BUG]  [BUGGY]  ||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  ||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
85	[BUG]  [BUGGY]  raf.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  raf.closeEntry();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	raf.closeEntry();	  raf.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
86	[BUG]  [BUGGY]  raf.flush();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  raf.flush();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	raf.flush();	  raf.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
87	[BUG]  [BUGGY]  raf.reset();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  raf.reset();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	raf.reset();	  raf.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
88	[BUG]  [BUGGY]  _raf.close();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  _raf.close();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	_raf.close();	  raf.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
89	[BUG]  [BUGGY]  raf.release();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  raf.release();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	raf.release();	  raf.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
90	[BUG]  [BUGGY]  written  /=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  /=  entry.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  /=  entry.getCompressedSize();	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
91	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  BYTE_MASK)  {  written  /=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  BYTE_MASK)  {  written  /=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  BYTE_MASK)  {  written  /=  def.getCompressedSize();  }	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
92	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  /=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  /=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  DEFLATED)  {  written  /=  def.getCompressedSize();  }	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
93	[BUG]  [BUGGY]  if(def.getCompressedSize()  ==  BYTE_MASK)  {  written  /=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()  ==  BYTE_MASK)  {  written  /=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()  ==  BYTE_MASK)  {  written  /=  def.getCompressedSize();  }	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
94	[BUG]  [BUGGY]  if(def.getCompressedSize()  ==  DEFLATED)  {  written  /=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()  ==  DEFLATED)  {  written  /=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()  ==  DEFLATED)  {  written  /=  def.getCompressedSize();  }	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
95	[BUG]  [BUGGY]  if(def.getCompressedSize()  >  0)  {  written  /=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()  >  0)  {  written  /=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()  >  0)  {  written  /=  def.getCompressedSize();  }	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
96	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRaw()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getRaw()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getRaw()  +  1;	  Deflater    raf    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
97	[BUG]  [BUGGY]  Deflater  raf  =  entry.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getDataStart();	  Deflater    raf    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
98	[BUG]  [BUGGY]  written  -=  def.getSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  def.getSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  def.getSize();	  written    +=    def.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
99	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getCompressedSize();	  Deflater    <    K,    V>    realCrc    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
100	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRaw()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRaw()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getRaw()  +  1;	  Deflater    <    K,    V>    realCrc    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
101	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getData();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getData();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getData();	  Deflater    <    K,    V>    realCrc    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
102	[BUG]  [BUGGY]  written  +=  entry.getCompressedSize()  *  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getCompressedSize()  *  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getCompressedSize()  *  1;	  written    +=    entry.getCompressedSize()    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
103	[BUG]  [BUGGY]  written  +=  entry.getCompressedSize()  /  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getCompressedSize()  /  2;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getCompressedSize()  /  2;	  written    +=    entry.getCompressedSize()    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
104	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getCompressedSize()  /  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  /  1;	  written    +=    entry.getCompressedSize()    /    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
105	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
106	[BUG]  [BUGGY]  if(entry.getSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
107	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
108	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
109	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  dataStart)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  dataStart)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  dataStart)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
110	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
111	[BUG]  [BUGGY]  if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
112	[BUG]  [BUGGY]  if(entry.getCompressedSize()  >=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  >=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  >=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
113	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  dataStart)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  dataStart)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  dataStart)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
114	[BUG]  [BUGGY]  written  -=  def.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  def.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  def.getDataStart();	  written    +=    def.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
115	[BUG]  [BUGGY]  written  +=  def.getDataEnd();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getDataEnd();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getDataEnd();	  written    +=    def.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
116	[BUG]  [BUGGY]  written  -=  entry.getDataStart()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getDataStart()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getDataStart()  -  1;	  written    +=    entry.getDataStart()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
117	[BUG]  [BUGGY]  written  +=  entry.getDataEnd()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataEnd()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataEnd()  -  1;	  written    +=    entry.getDataStart()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
118	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  *  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  *  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  *  1;	  written    +=    entry.getDataStart()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
119	[BUG]  [BUGGY]  if(entry.getSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
120	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
121	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  BUFFER_SIZE)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
122	[BUG]  [BUGGY]  if(entry.getCompressedSize()  >=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  >=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  >=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
123	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
124	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
125	[BUG]  [BUGGY]  Written  +=  entry.getCompressedSize()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getCompressedSize()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getCompressedSize()  +  1;	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
126	[BUG]  [BUGGY]  Written  +=  entry.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getName();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getName();	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
127	[BUG]  [BUGGY]  Written  +=  entry.getCompressedSize()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getCompressedSize()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getCompressedSize()  -  1;	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
128	[BUG]  [BUGGY]  Written  +=  entry.getCompressedSize()  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getCompressedSize()  -  2;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getCompressedSize()  -  2;	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
129	[BUG]  [BUGGY]  Written  +=  entry.getCompressedSize()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getCompressedSize()  +  2;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getCompressedSize()  +  2;	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
130	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
131	[BUG]  [BUGGY]  Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
132	[BUG]  [BUGGY]  if(def.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
133	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(def	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
134	[BUG]  [BUGGY]  if(!def.finished())  {  if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
135	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToL  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToL  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToL	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
136	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  /  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  /  dataStart;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  /  dataStart;	  written    +=    entry.getDataStart()    -    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
137	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  *  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  *  dataStart;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  *  dataStart;	  written    +=    entry.getDataStart()    -    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
138	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  -  2;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  -  2;	  written    +=    entry.getDataStart()    -    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
139	[BUG]  [BUGGY]  written  -=  entry.getRawSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getRawSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getRawSize();	  written    -=    entry.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
140	[BUG]  [BUGGY]  written  -=  entry.getSize()  +  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getSize()  +  dataStart;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getSize()  +  dataStart;	  written    -=    entry.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
141	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getCompressedSize()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  -  1;	  written    +=    entry.getCompressedSize()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
142	[BUG]  [BUGGY]  written  +=  entry.getSize()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getSize()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getSize()  -  1;	  written    +=    entry.getCompressedSize()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
143	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
144	[BUG]  [BUGGY]  if(entry.getSize()!=  def.getSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getSize()!=  def.getSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getSize()!=  def.getSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
145	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()  ==  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()  ==  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
146	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
147	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
148	[BUG]  [BUGGY]  Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
149	[BUG]  [BUGGY]  if(def.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
150	[BUG]  [BUGGY]  written  -=  entry.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getLength();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getLength();	  written    +=    entry.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
151	[BUG]  [BUGGY]  written  +=  entry.getLength()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getLength()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getLength()  +  1;	  written    +=    entry.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
152	[BUG]  [BUGGY]  written  -=  entry.getDataEnd();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getDataEnd();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getDataEnd();	  written    +=    entry.getDataEnd();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
153	[BUG]  [BUGGY]  ||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  ||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	||!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
154	[BUG]  [BUGGY]  if(!def.finished())  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  written  -=  def.getCompressedSize();  }	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
155	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
156	[BUG]  [BUGGY]  if(def.getCompressedSize()  ==  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()  ==  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()  ==  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
157	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  dataStart)  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  dataStart)  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  dataStart)  {  written  -=  def.getCompressedSize();  }	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
158	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
159	[BUG]  [BUGGY]  written  -=  realCrc.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  realCrc.getName();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  realCrc.getName();	  written    +=    realCrc.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
160	[BUG]  [BUGGY]  written  /=  realCrc.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  /=  realCrc.getName();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  /=  realCrc.getName();	  written    +=    realCrc.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
161	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  +  DEFLATED;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getCompressedSize()  +  DEFLATED;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  +  DEFLATED;	  written    -=    entry.getCompressedSize()    +    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
162	[BUG]  [BUGGY]  Deflater  raf  =  def.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  def.getRaw();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  def.getRaw();	  Deflater    raf    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
163	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getName(),  DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getName(),  DEFLATER_BLOCK_SIZE);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getName(),  DEFLATER_BLOCK_SIZE);	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
164	[BUG]  [BUGGY]  Deflater  raf  =  def.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  def.getEntry();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  def.getEntry();	  Deflater    raf    =    entry.getEntry();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
165	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
166	[BUG]  [BUGGY]  entry.setCompressedSize(entry.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setCompressedSize(entry.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setCompressedSize(entry.getCompressedSize());	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
167	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
168	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  Entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  Entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  Entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
169	[BUG]  [BUGGY]  raf.close(entry);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  raf.close(entry);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	raf.close(entry);	  raf.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
170	[BUG]  [BUGGY]  _raf.closeEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  _raf.closeEntry();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	_raf.closeEntry();	  raf.close();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
171	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
172	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  realCrc)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  realCrc)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  realCrc)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
173	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  realCrc.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  realCrc.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  realCrc.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
174	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  def.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
175	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  DEFLATED;  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  DEFLATED;  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  DEFLATED;  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
176	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  def.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  def.getValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  def.getValue();	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
177	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getEntry();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getEntry();	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
178	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getDataStart();	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
179	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  def.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  def.getValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  def.getValue();	  Deflater    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
180	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  crc.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  crc.getValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  crc.getValue();	  Deflater    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
181	[BUG]  [BUGGY]  written  +=  def.getDataStart()  -  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getDataStart()  -  dataStart;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getDataStart()  -  dataStart;	  written    +=    def.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
182	[BUG]  [BUGGY]  written  +=  def.getDataStart()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getDataStart()  -  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getDataStart()  -  1;	  written    +=    def.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
183	[BUG]  [BUGGY]  Deflater  raf  =  def.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  def.getValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  def.getValue();	  Deflater    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
184	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
185	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
186	[BUG]  [BUGGY]  if(!def.finished())  {  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(!def.finished())  {  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
187	[BUG]  [BUGGY]  Deflater  raf  =  def.getDeflate();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  def.getDeflate();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  def.getDeflate();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
188	[BUG]  [BUGGY]  Deflater  raf  =  entry.getReference();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getReference();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getReference();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
189	[BUG]  [BUGGY]  -=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  -=  entry.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	-=  entry.getCompressedSize();	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
190	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  def.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
191	[BUG]  [BUGGY]  written  +=  realCrc.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  realCrc.getLength();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  realCrc.getLength();	  written    +=    entry.getLength();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
192	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(def.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(def.getName());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(def.getName());	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
193	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getCharset());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getCharset());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getCharset());	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
194	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getKey());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getKey());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getKey());	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
195	[BUG]  [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
196	[BUG]  [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToL  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToL  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToL	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
197	[BUG]  [BUGGY]  def.setCompressedSize(def.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  def.setCompressedSize(def.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	def.setCompressedSize(def.getCompressedSize());	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
198	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  else  {  return;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  else  {  return;  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  else  {  return;  }	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
199	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }  else  {  return;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }  else  {  return;  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  BYTE_MASK)  {  written  -=  def.getCompressedSize();  }  else  {  return;  }	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
200	[BUG]  [BUGGY]  if(entry.getDataStart()!=  dataEnd)  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getDataStart()!=  dataEnd)  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getDataStart()!=  dataEnd)  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }	  written    -=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
201	[BUG]  [BUGGY]  wrote  +=  def.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  wrote  +=  def.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	wrote  +=  def.getCompressedSize();	  written    +=    def.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
202	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setSize(ZipUtil.adjustToLong(def.	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
203	[BUG]  [BUGGY]  written  +=  def.getCompressedSize()  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getCompressedSize()  -  2;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getCompressedSize()  -  2;	  written    +=    def.getCompressedSize()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
204	[BUG]  [BUGGY]  written  +=  def.getRawSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getRawSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getRawSize();	  written    +=    entry.getRawSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
205	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  crc.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  crc.getRaw();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  crc.getRaw();	  Deflater    <    K,    V>    realCrc    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
206	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  def.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  def.getRaw();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  def.getRaw();	  Deflater    <    K,    V>    realCrc    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
207	[BUG]  [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
208	[BUG]  [BUGGY]  written  +=  entry.getCompressedSize()  -  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getCompressedSize()  -  2;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getCompressedSize()  -  2;	  written    +=    entry.getCompressedSize()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
209	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(DEFLATER_BLOCK_SIZE);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(DEFLATER_BLOCK_SIZE);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(DEFLATER_BLOCK_SIZE);	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
210	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(DEFLATED);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(DEFLATED);	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
211	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(def.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(def.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(def.getCompressedSize());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
212	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(def);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(def);	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
213	[BUG]  [BUGGY]  write  +=  def.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  write  +=  def.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	write  +=  def.getDataStart();	  written    +=    realCrc.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
214	[BUG]  [BUGGY]  Written  +=  def.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  def.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  def.getDataStart();	  written    +=    realCrc.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
215	[BUG]  [BUGGY]  written  /=  def.getCompressedSize()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  /=  def.getCompressedSize()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  /=  def.getCompressedSize()  +  1;	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
216	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  /=  def.getCompressedSize();  }  else  {  return;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  DEFLATED)  {  written  /=  def.getCompressedSize();  }  else  {  return;  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  DEFLATED)  {  written  /=  def.getCompressedSize();  }  else  {  return;  }	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
217	[BUG]  [BUGGY]  written  +=  def.getChars();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getChars();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getChars();	  written    +=    def.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
218	[BUG]  [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def!=  null)  {  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(!def.finished())    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
219	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
220	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  realCrc.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  realCrc.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  realCrc.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
221	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  realCrc)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  realCrc)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  realCrc)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
222	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  def.getCompressedSize();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
223	[BUG]  [BUGGY]  written  +=  def.getEncoding();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getEncoding();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getEncoding();	  written    +=    def.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
224	[BUG]  [BUGGY]  written  +=  realCrc.getDataStart()  -  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  realCrc.getDataStart()  -  dataStart;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  realCrc.getDataStart()  -  dataStart;	  written    +=    entry.getDataStart()    -    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
225	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  -  DEFLATED;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  -  DEFLATED;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  -  DEFLATED;	  written    +=    entry.getDataStart()    -    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
226	[BUG]  [BUGGY]  Written  +=  realCrc.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  realCrc.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  realCrc.getCompressedSize();	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
227	[BUG]  [BUGGY]  Written  +=  DEFLATED.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  DEFLATED.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  DEFLATED.getCompressedSize();	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
228	[BUG]  [BUGGY]  write  +=  def.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  write  +=  def.getName();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	write  +=  def.getName();	  written    +=    realCrc.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
229	[BUG]  [BUGGY]  Written  +=  def.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  def.getName();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  def.getName();	  written    +=    realCrc.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
230	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  dataEnd)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  dataEnd)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  dataEnd)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
231	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  def.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
232	[BUG]  [BUGGY]  written  +=  realCrc.getDataStart()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  realCrc.getDataStart()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  realCrc.getDataStart()  +  1;	  written    +=    entry.getDataStart()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
233	[BUG]  [BUGGY]  wrote  +=  entry.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  wrote  +=  entry.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	wrote  +=  entry.getDataStart();	  written    +=    entry.getDataStart()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
234	[BUG]  [BUGGY]  written  +=  def.getImmediateParent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getImmediateParent();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getImmediateParent();	  written    +=    entry.getImmediateParent();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
235	[BUG]  [BUGGY]  Deflater  raf  =  entry.getData();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  entry.getData();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getData();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
236	[BUG]  [BUGGY]  written  +=  def.toString();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.toString();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.toString();	  written    +=    def.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
237	[BUG]  [BUGGY]  written  +=  def.getDataStart()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getDataStart()  +  1;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getDataStart()  +  1;	  written    +=    entry.getDataStart()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
238	[BUG]  [BUGGY]  written  +=  entry.getCompressedSize()  -  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getCompressedSize()  -  dataStart;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getCompressedSize()  -  dataStart;	  written    +=    entry.getCompressedSize()    -    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
239	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  written)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  written)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  written)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
240	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  defLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  defLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  defLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
241	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  deflated)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  deflated)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  deflated)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
242	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  deflate)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  deflate)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  deflate)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
243	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  -  def.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  -  def.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  -  def.getCompressedSize();	  written    +=    entry.getDataStart()    -    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
244	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  -  def.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  entry.getDataStart()  -  def.getLength();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  -  def.getLength();	  written    +=    entry.getDataStart()    -    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
245	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRawParent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRawParent();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getRawParent();	  Deflater    <    K,    V>    realCrc    =    entry.getRaw();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
246	[BUG]  [BUGGY]  Written  +=  entry.getCompressedSize()  -  DEFLATED;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getCompressedSize()  -  DEFLATED;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getCompressedSize()  -  DEFLATED;	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
247	[BUG]  [BUGGY]  Written  +=  entry.getCompressedSize()  *  DEFLATED;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Written  +=  entry.getCompressedSize()  *  DEFLATED;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getCompressedSize()  *  DEFLATED;	  Written    +=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	18	None	replace
248	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getData();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getData();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getData();	  Entry    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
249	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( ".java "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getName().endsWith(   "/   "))    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(def.    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
250	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  written)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  written)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  written)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
251	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  deflated)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  deflated)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  deflated)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
252	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  deflate)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  deflate)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  deflate)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATED)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
253	[BUG]  [BUGGY]  WrittenSize  -=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  WrittenSize  -=  entry.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	WrittenSize  -=  entry.getCompressedSize();	  written    -=    entry.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
254	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getEncoding());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(entry.getEncoding());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getEncoding());	  Deflater    raf    =    new    Deflater(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
255	[BUG]  [BUGGY]  wrote  +=  entry.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  wrote  +=  entry.getName();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	wrote  +=  entry.getName();	  written    +=    realCrc.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
256	[BUG]  [BUGGY]  written  +=  def.getDataLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  def.getDataLength();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getDataLength();	  written    +=    def.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
257	[BUG]  [BUGGY]  written  +=  dataStart.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  +=  dataStart.getDataStart();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  dataStart.getDataStart();	  written    +=    realCrc.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
258	[BUG]  [BUGGY]  Deflater  raf  =  deflate(def.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(def.getName());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(def.getName());	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
259	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getAssignedValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getAssignedValue());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getAssignedValue());	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
260	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getEncoding());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  deflate(entry.getEncoding());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getEncoding());	  Deflater    raf    =    deflate(entry.getName());    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
261	[BUG]  [BUGGY]  if(def.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
262	[BUG]  [BUGGY]  entry.setCompressedSize(def.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.setCompressedSize(def.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.setCompressedSize(def.getCompressedSize());	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
263	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getDataStart();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getDataStart();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getDataStart();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
264	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  written  -  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  written  -  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  written  -  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
265	[BUG]  [BUGGY]  entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }	  if(entry.getCompressedSize()!=    DEFLATER_BLOCK_SIZE)    {    written    -=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
266	[BUG]  [BUGGY]  write(entry.getDataStart());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  write(entry.getDataStart());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	write(entry.getDataStart());	  written    -=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
267	[BUG]  [BUGGY]  writer.write(entry.getDataStart());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  writer.write(entry.getDataStart());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	writer.write(entry.getDataStart());	  written    -=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
268	[BUG]  [BUGGY]  write(def.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  write(def.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	write(def.getCompressedSize());	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
269	[BUG]  [BUGGY]  writer.write(def.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  writer.write(def.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	writer.write(def.getCompressedSize());	  written    -=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
270	[BUG]  [BUGGY]  written  *=  def.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  *=  def.getCompressedSize();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  *=  def.getCompressedSize();	  written    /=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
271	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getAssignedValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getAssignedValue();  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getAssignedValue();	  Deflater    <    K,    V>    realCrc    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
272	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  +  comment;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  written  -=  entry.getCompressedSize()  +  comment;  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  +  comment;	  written    -=    entry.getCompressedSize()    +    dataStart;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
273	[BUG]  [BUGGY]  if(def.finished())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(def.finished())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(def.finished())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
274	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  entry.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
275	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getTotalIn();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getTotalIn();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getTotalIn();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
276	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  def.getDataStart())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  def.getDataStart())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  def.getDataStart())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
277	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getDataStart();  }  else  {  deflate();  }	  if(entry.getCompressedSize()!=    def.getCompressedSize())    {    written    -=    entry.getCompressedSize();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
278	[BUG]  [BUGGY]  Deflater  raf  =  new  RandomAccessFile(def.getCompressedSize());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  RandomAccessFile(def.getCompressedSize());  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  RandomAccessFile(def.getCompressedSize());	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
279	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(Deflater.DEFAULT_ENCODING);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();      [BUGGY]  Deflater  raf  =  new  Deflater(Deflater.DEFAULT_ENCODING);  [BUGGY]      }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(Deflater.DEFAULT_ENCODING);	  Deflater    raf    =    new    Deflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
