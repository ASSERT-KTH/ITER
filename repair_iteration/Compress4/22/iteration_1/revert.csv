projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written-=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getCompressedSize()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getDataStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=def.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written-=entry.getDataStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written-=entry.getCompressedSize()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written-=entry.getCompressedSize()+dataStart;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Entry<K,V>realCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflater<K,V>realCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflaterraf=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflaterraf=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflaterraf=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflater<K,V>realCrc=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373raf.close();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getDataStart()-dataStart;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getDataStart()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getDataStart()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getDataEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written-=entry.getName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getImmediateParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getCompressedSize()/1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Written+=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getCompressedSize()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written-=entry.getSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getRawSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=entry.getLength();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written-=def.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=def.getCompressedSize()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written/=def.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=def.getCompressedSize()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=def.getName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=realCrc.getName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflaterraf=deflate(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflaterraf=newDeflater(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflaterraf=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373Deflaterraf=newDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=def.getDataStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=realCrc.getDataStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373written+=def.getSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getCompressedSize()!=DEFLATED){written-=entry.getCompressedSize();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getCompressedSize()!=DEFLATED){written-=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getCompressedSize()!=def.getCompressedSize()){written-=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getCompressedSize()!=DEFLATER_BLOCK_SIZE){written-=entry.getCompressedSize();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getCompressedSize()!=def.getCompressedSize()){written-=entry.getCompressedSize();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getCompressedSize()!=DEFLATER_BLOCK_SIZE){written-=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(!def.finished()){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(de
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(!def.finished()){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getName().endsWith("/")){entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(de
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(!def.finished()){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustToLong(de
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getName().endsWith("/")){entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(def.
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(!def.finished()){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustToLong(
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java373if(entry.getName().endsWith("/")){entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(def
