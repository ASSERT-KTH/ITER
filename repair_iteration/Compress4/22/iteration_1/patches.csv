bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  written  -=  entry.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  -=  entry.getDataStart();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getDataStart();	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
2	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  -=  entry.getCompressedSize()  +  1;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  +  1;	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
3	[BUG]  [BUGGY]  written  -=  entry.getCompressedSize()  +  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  -=  entry.getCompressedSize()  +  dataStart;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getCompressedSize()  +  dataStart;	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
4	[BUG]  [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Entry  <  K,  V>  realCrc  =  entry.getValue();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Entry  <  K,  V>  realCrc  =  entry.getValue();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
5	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getValue();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getValue();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
6	[BUG]  [BUGGY]  Deflater  raf  =  entry.getDeflate();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  raf  =  entry.getDeflate();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getDeflate();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
7	[BUG]  [BUGGY]  Deflater  raf  =  entry.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  raf  =  entry.getValue();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getValue();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
8	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  raf  =  entry.getRaw();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getRaw();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
9	[BUG]  [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  <  K,  V>  realCrc  =  entry.getRaw();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  <  K,  V>  realCrc  =  entry.getRaw();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
10	[BUG]  [BUGGY]  raf.close();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  raf.close();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	raf.close();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
11	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  -  dataStart;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getDataStart()  -  dataStart;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  -  dataStart;	  written    +=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
12	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getDataStart()  +  1;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  +  1;	  written    +=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
13	[BUG]  [BUGGY]  written  +=  entry.getDataStart()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getDataStart()  -  1;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataStart()  -  1;	  written    +=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
14	[BUG]  [BUGGY]  written  +=  entry.getDataEnd();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getDataEnd();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getDataEnd();	  written    +=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
15	[BUG]  [BUGGY]  written  -=  entry.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  -=  entry.getName();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getName();	  written    +=    entry.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
16	[BUG]  [BUGGY]  written  +=  entry.getImmediateParent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getImmediateParent();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getImmediateParent();	  written    +=    entry.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
17	[BUG]  [BUGGY]  written  +=  entry.getCompressedSize()  /  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getCompressedSize()  /  1;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getCompressedSize()  /  1;	  written    +=    entry.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
18	[BUG]  [BUGGY]  Written  +=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Written  +=  entry.getCompressedSize();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Written  +=  entry.getCompressedSize();	  written    +=    entry.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
19	[BUG]  [BUGGY]  written  +=  entry.getCompressedSize()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getCompressedSize()  -  1;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getCompressedSize()  -  1;	  written    +=    entry.getCompressedSize()    +    1;    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
20	[BUG]  [BUGGY]  written  -=  entry.getSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  -=  entry.getSize();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  entry.getSize();	  written    +=    entry.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
21	[BUG]  [BUGGY]  written  +=  entry.getRawSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getRawSize();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getRawSize();	  written    +=    entry.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
22	[BUG]  [BUGGY]  written  +=  entry.getLength();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  entry.getLength();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  entry.getLength();	  written    +=    entry.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
23	[BUG]  [BUGGY]  written  -=  def.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  -=  def.getCompressedSize();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  -=  def.getCompressedSize();	  written    +=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
24	[BUG]  [BUGGY]  written  +=  def.getCompressedSize()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  def.getCompressedSize()  +  1;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getCompressedSize()  +  1;	  written    +=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
25	[BUG]  [BUGGY]  written  /=  def.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  /=  def.getCompressedSize();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  /=  def.getCompressedSize();	  written    +=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
26	[BUG]  [BUGGY]  written  +=  def.getCompressedSize()  -  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  def.getCompressedSize()  -  1;  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getCompressedSize()  -  1;	  written    +=    def.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
27	[BUG]  [BUGGY]  written  +=  def.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  def.getName();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getName();	  written    +=    entry.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
28	[BUG]  [BUGGY]  written  +=  realCrc.getName();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  realCrc.getName();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  realCrc.getName();	  written    +=    entry.getName();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
29	[BUG]  [BUGGY]  Deflater  raf  =  deflate(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  raf  =  deflate(entry.getName());  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  deflate(entry.getName());	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
30	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  raf  =  new  Deflater(entry.getName());  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater(entry.getName());	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
31	[BUG]  [BUGGY]  Deflater  raf  =  entry.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  raf  =  entry.getEntry();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  entry.getEntry();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
32	[BUG]  [BUGGY]  Deflater  raf  =  new  Deflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  Deflater  raf  =  new  Deflater();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	Deflater  raf  =  new  Deflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
33	[BUG]  [BUGGY]  written  +=  def.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  def.getDataStart();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getDataStart();	  written    +=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
34	[BUG]  [BUGGY]  written  +=  realCrc.getDataStart();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  realCrc.getDataStart();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  realCrc.getDataStart();	  written    +=    entry.getDataStart();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
35	[BUG]  [BUGGY]  written  +=  def.getSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  written  +=  def.getSize();  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	written  +=  def.getSize();	  written    +=    entry.getSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
36	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
37	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  written  -=  entry.getCompressedSize();  }	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
38	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
39	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
40	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  def.getCompressedSize())  {  written  -=  entry.getCompressedSize();  }  else  {  deflate();  }	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
41	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  written  -=  entry.getCompressedSize();  }	  written    -=    entry.getCompressedSize();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
42	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
43	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
44	[BUG]  [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
45	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
46	[BUG]  [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
47	[BUG]  [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(!def.finished())  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
48	[BUG]  [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty    [CONTEXT]    while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCrc(realCrc);  def.reset();    [BUGGY]  if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def  [BUGGY]    }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(   "bad  CRC  checksum  for  entry     "  +  entry.getName()  +     ":     "  +  Long.toHexString(entry.getCrc())  +     "  instead  of     "  +  Long.toHexString(realCrc));  }  if  (entry.getSize()  !=  written  -  dataStart)  {  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	if(entry.getName().endsWith( "/ "))  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
