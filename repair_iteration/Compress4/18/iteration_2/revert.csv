projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getDeltaOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getMethod(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(realCrc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(zipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(zipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.gettotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalout()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalout()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=realCrc){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalout()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(!def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(!def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(realCrc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut()+2));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut()),0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry.getMethod(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry.getCompressedSize());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.gettotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getTotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalUp()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setDelimiter(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalOffset()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setDelimiter(ZipUtil.adjustToLong(def.getDeltaOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getDeltaOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getDeltaIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getDeltaOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getMethod(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),DEFLATED,crc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getValue(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),DEFLATED,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),DEFLATED,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),DEFLATED,realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=def.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=entries.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=entry.getAncestor();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=entry.getRawEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=crc.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=entry.getLongValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalOut()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()+1),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(zipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(zipEncodingUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(zipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(creator.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(crc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalout()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getCompressedOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(entry.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(entry.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn(),realCrc),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn(),realCrc),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(entry.getTotalIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(creator.getTotalIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=raf.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.finish();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater.setTotalOut(def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater.setTotalOut(def.getTotalOut()-realCrc){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater.setCrc(def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater.setTotalOut(def.getTotalOut()+realCrc){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater<T>deflate=def.getTotalOut();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setOutput(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(creator.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(crc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setOut(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()),def.getTotalIn());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(realCrc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getReal();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(!def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(!def.finished()){entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOut()));}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalDown()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getConstructor();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getDeflate(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(entry,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getImplicitReturn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(zipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalMillis()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),realCrc,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),crc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),realCrc,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getValue(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(realCrc,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=createUnicodeExtraFields(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(realCrc,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(raf);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=def.getEntry(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(crc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalOut()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=def.getTotalOut();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdeflate=def.getTotalOut();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater.setMethod(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(creator.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(zipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getInput()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(realCrc,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=raf.getEntry(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(def,realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(realCrc,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getCompressedSize());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getEntry());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getInput());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(creator.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(crc.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(zipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setString(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn(),realCrc),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn(),realCrc),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn(),crc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(creator.getTotalIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalUp()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getInt()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getOut(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLength(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setDelimiter(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.getEntry(0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.getEntry(n);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.getEntry(raf);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.getEntry(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getCompressedSize());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getMethod(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getDelimiter());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getDelta());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getMethod(),realCrc,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getMethod(),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getValue(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getMethod(),crc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getName(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()),DEFLATED,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn()),DEFLATED,realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setRealSize(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getRealIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setRealOut(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOffset()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setString(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalOut(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=raf.deflate(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(realCrc,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(DEFLATED,realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(realCrc,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getIn(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry.setValue(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(zipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(creator.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(crc.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(cref.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setDelimiter(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getValue()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_deflater.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_def.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=DEFLATED.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.finish();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setEnd(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),DEFLATED,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getCompressedSize(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),DEFLATED,ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.gettotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalout()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalout()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getCompressedSize(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(def.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=createUnicodeExtraFields(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=createUnicodeExtraField(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=def.getEntry(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=_raf.getEntry(Deflater.DEFAULT_ENCODING);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setReal(ZipUtil.adjustToLong(def.getRealOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getRealOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(zipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setOutput(zipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(dev.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(def,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_createUnicodeExtraField(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()==realCrc){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflater.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));def.reset();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getReal()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setDelta(ZipUtil.adjustToLong(def.getDeltaOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setDelimiter(ZipUtil.adjustToLong(def.getDeltaIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getCompressedOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut())+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getFromtalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getImplicitReturn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.gettotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(cref.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.gettotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn(),def));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getFromtalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalout()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=entry.getValue()+DEFLATED;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLong(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=realCrc){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflate(def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLength(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalSize(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setDelimiter(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalOut()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.totalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getInput();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(entry.getCompressedSize(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getImplicitReturn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(def,realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=raf.deflate(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=raf.deflate(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn(),def));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.gettotalOut(),realCrc));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToInt(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalOut()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.gettotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(zipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getFrom()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=def.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.gettotalOut()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalOUT()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.gettotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.gettotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOUT()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=DEFLATED.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=_def.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=_entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setLength(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOffset()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getIntotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getItalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getFromOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getEntryOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotal(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=DEFLATED||def.getTotalOut()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=DEFLATED||def.getTotalOut()!=DEFLATER_BLOCK_SIZE){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=DEFLATED||def.getTotalOut()==DEFLATER_BLOCK_SIZE){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getSize());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalInt(ZipUtil.adjustToInt(def.getTotalInt()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalOut()),def.reset());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalSize(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getTotalIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getFromOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(Deflater.DEFAULT_ENCODING);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.deflate(Deflater.DEFAULT_ENCODING,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setOutput(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.totalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(realCrc.getOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()),def.getTotalOut()-1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalout()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367IntegerrealCrc=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_raf.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(cref.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=getEntry(def,realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalout()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToLong(def.getTotalIn(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=entry.deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInput(ZipUtil.adjustToLong(def.getTotalOut(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(ZipUtil.adjustToInt(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalIn()!=realCrc){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=deflate(def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=deflate(realCrc,def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=DEFLATED||def.getTotalOut()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367if(def.getTotalOut()!=DEFLATED||def.getTotalOut()!=DEFLATER_BLOCK_SIZE){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(realCrc.getOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(cref.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(Deflater.deflate(realCrc)));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getFromOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getEntry()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setMethod(def.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getMethod(),defLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=_deflateEntry(def,entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getRawParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterraf=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getTotalOut()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterdef=newDeflater(def.getDeprecated());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setString(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalLength(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalLength(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entryentry=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setOutput(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(realCrc.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setTotalOut(ZipUtil.adjustToLong(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setValue(ZipUtil.adjustToLong(def.getFromtalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setCompressedSize(ZipUtil.adjustToLong(def.getIntalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()),def.getTotalOut());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(def.getInput(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(realCrc.getMethod(),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Deflaterentry=createUnicodeExtraFields(creator.getMethod(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=_raf.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java367Entry<K,V>entry=entry.getEntry(0);
