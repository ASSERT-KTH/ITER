projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entries.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.entrySet().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entries.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=offsets.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.entries.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=this.entries.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.entrySet();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=this.entrySet.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.getEntrySet().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entries.entrySet();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.keySet();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340writeCentralFileHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340writeCentralFileHeader((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340writeCentralFileHeader((ZipArchiveEntry)entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340writeCentralFileHeader((ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340Deflater<ZipArchiveEntry>d=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340Deflater<ZipArchiveEntry>offsets=entry.getValues();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340Deflateri=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.offsets.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.list.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entry.entries.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entries.entrySet().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.keySet().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entry.entrySet().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=this.offsets.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.getValues();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratorit=entries.iterator();it.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entry.entries();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=offsets.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entries.iterator();i.hasNext()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entries.iterator();i.hasNext());){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.getEntrySet();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entry.entrySet();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entry.getValues();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entry.getEntrySet().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340if(i.hasNext()){writeCentralFileHeader((ZipArchiveEntry)i.next());}else{writeCentralFileHeader((ZipArchiveEntry)i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340if(i.hasNext()){writeCentralFileHeader((ZipArchiveEntry)i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340if(i.hasNext()){writeCentralFileHeader((ZipArchiveEntry)i.next());}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340if(i.hasNext()){writeCentralFileHeader((ZipArchiveEntry)i.next());}else{writeCentralFileHeader((ZipArchiveEntry)i.next());offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340Iterator<ZipArchiveEntry>offsets=entries.iterator();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340if(i.hasNext()){writeCentralFileHeader((ZipArchiveEntry)i.next());}else{writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entries.values().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.list().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=offsets.entrySet();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340if(i.hasNext()){writeCentralFileHeader((ZipArchiveEntry)i.next());}else{writeCentralDirectoryStart((ZipArchiveEntry)i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340if(i.hasNext()){writeCentralFileHeader((ZipArchiveEntry)i.next());}else{writeCentralDirectoryEnd((ZipArchiveEntry)i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340for(Iteratori=entry.entries().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=entries.entrySet().iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java340For(Iteratori=this.entries.iterator();i.hasNext();){
