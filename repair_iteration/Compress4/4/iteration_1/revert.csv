projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getWriter();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341ZipArchiveEntryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(OutputStream)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(in,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(Destination<ZipArchiveEntry>)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Readrentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEntryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(zipEncoding,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getKey());
