projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getWriter();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341ZipArchiveEntryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(OutputStream)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(in,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(Destination<ZipArchiveEntry>)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Readrentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEntryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(zipEncoding,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFieldEnd(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileEnd(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,(ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)entry.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,(ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,localDataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),localDataStart,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryHeader(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralDirectoryHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next()+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFieldEnd(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFields(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),def,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),def,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),entry.deflate);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.next(),def,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFields(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getSourceName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeEnd(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileEnd(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryStart();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.add(i.next());}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.add(entry.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.add(i.next());}else{for(Iteratori=entries.iterator();i.hasNext();){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),i.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryEnd);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,readCentralDirectoryEnd);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();offsets.add(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=entry.next();}else{writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryEnd();offsets.add(i.getNext());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getName(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getName(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getName(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryStart((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.getSourceName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.getSource());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralDirectoryHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.getWriter();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.getReader();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.getWriteEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryEnd();offsets.clear();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();writeCentralDirectoryEnd();offsets.clear();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.clear();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCurrentDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryStart();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.remove();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryEnd((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryEnd((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryEnd((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),i,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFields(i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFields();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFields(i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFields(i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFields(i,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryStart();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.remove();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.clear();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryEnd());offsets.clear();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();offsets.clear();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.next(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.next(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.getKey(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.getKey(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),cdOffset,i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),entry.getKey(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getWriteEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getReader();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341DeserializeZipArchiveEntryentry=(DestinationZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEntryentry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(Entry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEntryentry=(WriteCentralDirectoryEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(cdOffset,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry,(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),DEFLATED,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),DEFLATED,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),EFS_FLAG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)iterator.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)in.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)e.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getValue(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getValue(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(cdOffset,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry,(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(zipEnd,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=i.getWriter();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getWriter(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getRawWriter();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entries.getWriter();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getValue(),entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,cdOffset,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset+1,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset+2);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,written+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,cdLength+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getKey(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getValue(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),written,cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),dataStart,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def!=null){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def==null){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){thrownewIOException("Thisarchivescontainsunclosedentries.");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def==null){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def!=null){thrownewIOException("Thisarchivescontainsunclosedentries.");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),written,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),(ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),(Iterator)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),(CipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(in,(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def!=null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def==null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(cdOffset!=null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def==null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader((ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,0,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,2);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,3);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,0,written.length);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),DEFLATED,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),DEFLATED,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written,cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,DEFLATED,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)in.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)i.next()+cdOffset;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)e.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();writeCentralDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entries.next();writeCentralDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(Destination<ZipArchiveEntry>)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(Destination<ZipArchiveEntry>)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(ZipArchiveEntry>)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(ZipArchiveEntry)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryEnd();offsets.remove(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();writeCentralDirectoryEnd();offsets.remove(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryEnd();offsets.remove(0);}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();offsets.remove(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();writeCentralDirectoryEnd();offsets.remove(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileStart((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.next(),i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.next(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryEnd();offsets.add(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();writeCentralDirectoryEnd();offsets.add(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next();writeCentralDirectoryEnd();offsets.add(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=entry.next();writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamcdOffset=(OutputStream)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(OutputStream)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(OutputStream)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(outputStream)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(OutputStream)in.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getKey(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getKey(),cdOffset,i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.getKey(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getName(),entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName(),i,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,entry.getName(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getName(),entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getName(),entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Readrentry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Readerentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Readrentry=(ZipArchiveEntry)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(Writer)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),dataStart,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getSourceName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.remove(0);}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryStart();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.set(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();offsets.get(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),cdOffset,i.hasNext());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)entry.next(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next()-1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next()-1,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(comment,writeCentralDirectoryEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryStart());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeFullDirectoryEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeFileEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryEnd()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue()+1,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey()+cdOffset,entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def==null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(cdOffset!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getValue();if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def==null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd((ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryStart((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue(),entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),entry.getKey(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(cdOffset.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(zipEncoding,(ZipArchiveEntry)entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(zipEncoding,(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(zipEncoding,entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next()+cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next()+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)i.next()+cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getKey(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entries.get(i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entryList.get(i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entrySet.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entrySet.get(i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryStart();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).setDirectoryEnd(cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).setDirectoryEnd(writeCentralDirectoryEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written,cdOffset,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,cdOffset,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,writtenLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryStart();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryEnd();offsets.remove();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),DEFLATED,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),DEFLATED,cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),EFS_FLAG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)entry.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341ZipArchiveEntryentry=(ZipArchiveEntry)entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341ZipArchiveEntryentry=(ZipArchiveEntry)entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),entry.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeEnd(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileEnd(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),entry.dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(cdOffset,(ZipArchiveEntry)i.next(),entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getSourceName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getName(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getSource());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry,i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)entry.next(),cdOffset,i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileEnd(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeEnd(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.getValue()+2;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i,entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),i.getValue(),entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i.next()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(Deserializer<ZipArchiveEntry>)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>entry=(Deestination<ZipArchiveEntry>)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)entry.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeFullDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeLocalFileEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeUnicodeExtraFields();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryEnd());offsets.add(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(zipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341ZipEntryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)i.next()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFullDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.next();if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=(def!=null)?entry.getDeflater():DEFLATED;if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=(def==null)?entry.getDeflater():DEFLATED;if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset,dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeEnd(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),entry.getValue(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),i,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeFileEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryStart();offsets.clear();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeCentralDirectoryEnd);offsets.clear();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset+3);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry,(ZipArchiveEntry)i.next(),cdOffset,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.nextToken();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getValue(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.getValue(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryHeader(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Readrentry=(ZipArchiveEntry)i.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(dataStart,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteFileHeader.this.finish(entry,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341_writeFileHeader(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getName(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getSource());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.getParent());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next()-cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next()/cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next(),dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next()+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralFileHeader(i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),(ZipArchiveEntry)i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteZipDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteZipDirectoryEnd((ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)i.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)i.next()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next()+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next()-2);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEntryentry=(ZipArchiveEntry)i.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEntryentry=(ZipArchiveInfoEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,writeCentralDirectoryEnd);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeUnicodeExtraFields();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeFullDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeLocalFileEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getValue(),entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset,0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.next();if(def!=null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=(i.next()==null)?entry.getWriter():newZipArchiveEntry(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=(i.next()==null)?entry.getWriter():DEFLATED;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=(i.next()==null)?entry.getWriter():i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getWriter(i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteZipDirectoryHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeZipDirectoryHeader((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeUnicodeExtraFieldEnd(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryEnd();offsets.add(i.getNext());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next()+i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.nextToken();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,(ZipArchiveEntry)entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.nextToken();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getParent());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341ZipArchiveEntryentry=(ZipArchiveEntry)i.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.getKey(),i.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),cdOffset+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeCentralDirectoryStart();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(zipEncoding,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getName(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deserializer<ZipArchiveEntry>offsets=i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(dataStart,writeCentralDirectoryEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,writeLocalFileEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd((ZipArchiveEntry)i.next(),0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteFileHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFilesHeader(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeUnicodeExtraFieldEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeFullDirectoryEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeEnd();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeCentralDirectoryStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteFileHeader.this.finish(entry,i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteFileHeader.this.finish(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart((ZipArchiveEntry)i.next(),dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryStart((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next()+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryEnd((ZipArchiveEntry)i.next(),dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getName(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeFileHeader(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey()+i.next(),entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),_raf);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next()+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileHeader(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(zipEncoding,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entries.get(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)entrySet.get(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.next();if(def!=null){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=i.getDeflater();if(def!=null){thrownewIOException("Thisarchivescontainunclosedentries.");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteFileHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeLocalFileHeader(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader(entry.next(),i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeLocalFileEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeFullDirectoryEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(i.getLineno());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteLocalFileEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)i.next(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)i.next(),dataStart);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEnd((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(zipEncoding.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader(entry.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getValue(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getValue(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next()+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFilesHeader(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i,(ZipArchiveEntry)entry.clone());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralFileHeader(entry.next(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset*1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(in,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.next(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset+=i.next();}else{writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.getValue();}else{writeCentralDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();}else{writeDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=createUnicodeExtraFields(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLong(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeFileHeader(entry.getName(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=entry.next().getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteZipDirectoryEntryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeContentStart();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=i.next();writeContentStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getValue(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341((ZipArchiveEntry)i).deflate(cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectory((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.next(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(i.next(),entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey()+comment,entry.getValue()+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),(ZipArchiveEntry)i.next(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralDirectoryEnd(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralDirectory(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341i.next(){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCentralDirectoryEnd();}else{thrownewIOException("Thisarchivescontainsunclosedentries.");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341i.next(){writeCentralDirectoryEnd();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLong(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeEnd(i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryEntryentry=(WriterCentralDirectoryEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteCentralDirectoryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileHeader(i.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.writeCentralDirectory();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Entryentry=(ZipArchiveEntry)i.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry,(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(entry.getKey(),entry.getValue(),comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeDirectoryStart();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.getValue();}else{writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset+=i.next();}else{writeCentralDirectoryEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getValue(),entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getValue(),i.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralDirectoryEnd(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralDirectory(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341cdOffset=writeCentralDirectoryStart(i.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLong(i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341DeserialDeflaterdef=i.getDeflater();if(def!=null){writeCentralDirectoryEnd();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriteDirectoryEntryentry=(ZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.getValue(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.getKey(),cdOffset);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeUnicodeExtraFields();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeDirectoryEnd();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341WriterUtil.writeFileHeader(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341OutputStreamentry=(AbstractZipArchiveEntry)i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=i.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i,entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeDirectoryHeader((ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341DeserialDeflaterdef=i.getDeflater();if(def!=null){writeCentralDirectoryStart();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileHeader(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),this);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeLocalFileEnd((ZipArchiveEntry)i.next(),cdLength);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.findWriter(i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerwriter=entry.getWriter(),i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryStart();offsets.remove(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=entries.get(i.next(),writeCentralDirectoryEnd());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),dataStart,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),written,cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader((ZipArchiveEntry)i.next(),cdOffset,i.remove());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader((ZipArchiveEntry)i.next(),cdOffset,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Readrentry=(ZipArchiveEntry)e.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerentry=(ZipArchiveEntry)e.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Deflaterdef=entry.getDeflater();if(def!=null){thrownewIOException("Thisarchivescontainunclosedentries.");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeCrcDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){writeDirectoryEnd();offsets.clear();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Writerw=entry.writeCentralDirectory();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryStart(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),i.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeInt(entry.getKey(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeCentralDirectoryStart();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeContentStart();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341if(i.hasNext()){cdOffset=i.next();writeFileEnd();offsets.add(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralFileHeader(zipEncoding,i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryEnd(entry.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(i.getKey(),(ZipArchiveEntry)i.next());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341writeCentralDirectoryHeader(entry.getName(),i);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)i.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java341Fileentry=(ZipArchiveEntry)i.clone();
