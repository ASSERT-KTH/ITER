bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
2	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
3	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  ==  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  ==  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  ==	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
4	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
5	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjust  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjust  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjust	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
6	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  ==  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  ==  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  ==	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
7	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
8	[BUG]  [BUGGY]  entry.setSize(Long.toHexString(def.getTotalNumber()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(Long.toHexString(def.getTotalNumber()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(Long.toHexString(def.getTotalNumber()));	  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
9	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  -  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  -  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
10	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  2));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  2));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  2));	  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
11	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
12	[BUG]  [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
13	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize()  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize()  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize()	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
14	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
15	[BUG]  [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
16	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  written));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
17	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  3));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
18	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  5));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  5));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  5));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
19	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  /  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalIn()  /  written));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
20	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
21	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBytes(),  written));	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
22	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()).longValue());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()).longValue());  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBytes()).longValue());	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
23	[BUG]  [BUGGY]  entry.setSize(Long.toHexString(def.getTotalBytes()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(Long.toHexString(def.getTotalBytes()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(Long.toHexString(def.getTotalBytes()));	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
24	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize()  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize()  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize()	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
25	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getTotalIn()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
26	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalSize()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getTotalSize()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
27	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getSize()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getSize()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
28	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalDestination()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getTotalDestination()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
29	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
30	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
31	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
32	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
33	[BUG]  [BUGGY]  entry.setDelimiter(ZipUtil.adjustToLong(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setDelimiter(ZipUtil.adjustToLong(def.getTotalDelta()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setDelimiter(ZipUtil.adjustToLong(def.getTotalDelta()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
34	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
35	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
36	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalIn()));	  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
37	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalLong()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalLong()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalLong()));	  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
38	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToInt(def.getCrc()));	  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
39	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
40	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
41	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlock()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlock()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlock()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
42	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlank()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlank()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlank()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
43	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
44	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  3));	  entry.setCompressedSize(Long.toHexString(def.getTotalOut()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
45	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  5));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  5));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  5));	  entry.setCompressedSize(Long.toHexString(def.getTotalOut()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
46	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  4));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  4));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOut()  +  4));	  entry.setCompressedSize(Long.toHexString(def.getTotalOut()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
47	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
48	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
49	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
50	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
51	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
52	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
53	[BUG]  [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalSize()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setLength(ZipUtil.adjustToLong(def.getTotalSize()));	  entry.setLength(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
54	[BUG]  [BUGGY]  entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()));	  entry.setLength(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
55	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote(),  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
56	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
57	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRemote()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRemote()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalRemote()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
58	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDown()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDown()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDown()  +  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
59	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDestination()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDestination()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDestination()  +  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
60	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  4));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  4));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  4));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
61	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
62	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written),  DEFLATED);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
63	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
64	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  DEFLATED));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  DEFLATED));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  DEFLATED));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
65	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
66	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
67	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
68	[BUG]  [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getName()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
69	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
70	[BUG]  [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
71	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
72	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
73	[BUG]  [BUGGY]  entry.setRealCrc(ZipUtil.adjustToLong(def.getTotalRealCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRealCrc(ZipUtil.adjustToLong(def.getTotalRealCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRealCrc(ZipUtil.adjustToLong(def.getTotalRealCrc()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
74	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
75	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
76	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
77	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
78	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()!=  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()!=  DEFLATED)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()!=  DEFLATED)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
79	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATER_BLOCK_SIZE)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATER_BLOCK_SIZE)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATER_BLOCK_SIZE)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
80	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination(),  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
81	[BUG]  [BUGGY]  entry.setDestination(ZipUtil.adjustToLong(def.getTotalDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setDestination(ZipUtil.adjustToLong(def.getTotalDestination()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setDestination(ZipUtil.adjustToLong(def.getTotalDestination()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
82	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalStar()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalStar()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalStar()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
83	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
84	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  -  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
85	[BUG]  [BUGGY]  Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
86	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalDestination()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalDestination()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalDestination()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
87	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),  written);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),  written);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
88	[BUG]  [BUGGY]  entry.setRaw(raf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRaw(raf);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRaw(raf);	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
89	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalCrc()));	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
90	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
91	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc(),  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
92	[BUG]  [BUGGY]  entry.setRelativeCrc(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRelativeCrc(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRelativeCrc(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
93	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
94	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  /  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  /  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
95	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  written),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  written),  DEFLATED);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
96	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  -  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  -  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
97	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  3));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
98	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
99	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative(),  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
100	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRelative()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRelative()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalRelative()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
101	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
102	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),  written);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),  written);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
103	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
104	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
105	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
106	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
107	[BUG]  [BUGGY]  Deflater  def  =  entry.getMethod();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getMethod();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getMethod();	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
108	[BUG]  [BUGGY]  Deflater  def  =  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getCompressedSize();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getCompressedSize();	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
109	[BUG]  [BUGGY]  Deflater  def  =  entry.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getValue();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getValue();	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
110	[BUG]  [BUGGY]  Deflater  def  =  entry.getContent();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getContent();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getContent();	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
111	[BUG]  [BUGGY]  Deflater  def  =  entry.getDeflate(entry.getName());  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getDeflate(entry.getName());  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getDeflate(entry.getName());	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
112	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
113	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),  DEFLATED);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
114	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()),  DEFLATED);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
115	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),  DEFLATED,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),  DEFLATED,  written);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),  DEFLATED,  written);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
116	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalEnd()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalEnd()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalEnd()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
117	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()  +  1));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
118	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
119	[BUG]  [BUGGY]  entry.setInt(ZipUtil.adjustToLong(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setInt(ZipUtil.adjustToLong(def.getTotalIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setInt(ZipUtil.adjustToLong(def.getTotalIn()));	  entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
120	[BUG]  [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalOffset()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setLength(ZipUtil.adjustToLong(def.getTotalOffset()));	  entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
121	[BUG]  [BUGGY]  entry.setSize(Long.toHexString(def.getTotalIn()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(Long.toHexString(def.getTotalIn()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(Long.toHexString(def.getTotalIn()  +  1));	  entry.setSize(Long.toHexString(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
122	[BUG]  [BUGGY]  entry.setSize(Long.toHexString(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(Long.toHexString(def.getTotalOffset()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(Long.toHexString(def.getTotalOffset()));	  entry.setSize(Long.toHexString(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
123	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
124	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
125	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  3));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
126	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  -  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  -  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
127	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
128	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
129	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
130	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
131	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getCompressedSize()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToInt(def.getCompressedSize()));	  entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
132	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getTotalIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToInt(def.getTotalIn()));	  entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
133	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
134	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
135	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
136	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  +  3));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
137	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  /  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
138	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  -  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
139	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn(),  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
140	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  -  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
141	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  written),  DEFLATED);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
142	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  /  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  /  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  /  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
143	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()  +  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
144	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
145	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalEnd()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalEnd()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalEnd()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
146	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
147	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDelta(),  written));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
148	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  3));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
149	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDeleta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDeleta()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDeleta()));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
150	[BUG]  [BUGGY]  entry.setSize(Long.toHexString(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(Long.toHexString(def.getTotalDelta()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(Long.toHexString(def.getTotalDelta()));	  entry.setSize(Long.toHexString(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
151	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
152	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(de	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
153	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUt	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(de    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
154	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalDelta()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getTotalDelta()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
155	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOffset()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getTotalOffset()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
156	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalStart()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalStart()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getTotalStart()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
157	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDegrees()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDegrees()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDegrees()));	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
158	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  3));	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
159	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
160	[BUG]  [BUGGY]  entry.setRelative(ZipUtil.adjustToLong(def.getTotalRelative()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRelative(ZipUtil.adjustToLong(def.getTotalRelative()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRelative(ZipUtil.adjustToLong(def.getTotalRelative()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
161	[BUG]  [BUGGY]  entry.setRaw(len);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRaw(len);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRaw(len);	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
162	[BUG]  [BUGGY]  entry.setRaw(def);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRaw(def);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRaw(def);	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
163	[BUG]  [BUGGY]  entry.setRaw(realCrc  +  comment);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRaw(realCrc  +  comment);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRaw(realCrc  +  comment);	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
164	[BUG]  [BUGGY]  entry.setRaw(realCrc  +  1);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRaw(realCrc  +  1);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRaw(realCrc  +  1);	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
165	[BUG]  [BUGGY]  entry.setRaw(realCrc,  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRaw(realCrc,  written);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRaw(realCrc,  written);	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
166	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOut()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
167	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  1),  DEFLATED);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),    DEFLATED);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
168	[BUG]  [BUGGY]  if(entry.getName()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getName()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getName()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
169	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
170	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()  -  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()  -  1));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
171	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDeletion()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDeletion()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDeletion()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	21	None	replace
172	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  -  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  -  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
173	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  -  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  -  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  -  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
174	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  +  3));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  +  3));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()  +  3));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
175	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustToLong    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
176	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjust	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
177	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
178	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  1));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
179	[BUG]  [BUGGY]  if(entry.getCrc()!=  realCrc)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getCrc()!=  realCrc)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getCrc()!=  realCrc)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
180	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED  ||  entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
181	[BUG]  [BUGGY]  if(entry.getCrc()!=  realCrc)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getCrc()!=  realCrc)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getCrc()!=  realCrc)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
182	[BUG]  [BUGGY]  entry.setRemoteSize(ZipUtil.adjustToLong(def.getTotalRemote()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRemoteSize(ZipUtil.adjustToLong(def.getTotalRemote()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRemoteSize(ZipUtil.adjustToLong(def.getTotalRemote()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
183	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()  +  comment));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
184	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
185	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getTotalLong()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getTotalLong()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToInt(def.getTotalLong()));	  entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
186	[BUG]  [BUGGY]  entry.setLength(ZipUtil.adjustToInt(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setLength(ZipUtil.adjustToInt(def.getTotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setLength(ZipUtil.adjustToInt(def.getTotalOut()));	  entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
187	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToInt(def.getTotalOffset()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToInt(def.getTotalOffset()));	  entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
188	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
189	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalStart()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalStart()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalStart()));	  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
190	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK()));	  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
191	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
192	[BUG]  [BUGGY]  entry.setSize(Long.toHexString(def.getTotalOut()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(Long.toHexString(def.getTotalOut()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(Long.toHexString(def.getTotalOut()  +  1));	  entry.setSize(Long.toHexString(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
193	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()  +  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
194	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()  +  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
195	[BUG]  [BUGGY]  Deflater  def  =  entry.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getEntry();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getEntry();	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
196	[BUG]  [BUGGY]  Deflater  def  =  entry.getImplicitDeployment();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getImplicitDeployment();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getImplicitDeployment();	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
197	[BUG]  [BUGGY]  Deflater  def  =  entry.getDeflate(DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getDeflate(DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getDeflate(DEFLATED);	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
198	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.gettotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.gettotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.gettotalOut()));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
199	[BUG]  [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()  +  1));	  entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
200	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()),  DEFLATED);	  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
201	[BUG]  [BUGGY]  entry.setRealSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setRealSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setRealSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
202	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()),  written);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()),  written);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()),  written);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
203	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  write));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  write));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),  write));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
204	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
205	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  5));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  5));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  5));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
206	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDeletion()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDeletion()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDeletion()));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
207	[BUG]  [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalDelta()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setLength(ZipUtil.adjustToLong(def.getTotalDelta()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setLength(ZipUtil.adjustToLong(def.getTotalDelta()));	  entry.setLength(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
208	[BUG]  [BUGGY]  entry.setEnd(ZipUtil.adjustToLong(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setEnd(ZipUtil.adjustToLong(def.getTotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setEnd(ZipUtil.adjustToLong(def.getTotalOut()));	  entry.setLength(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
209	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));	  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
210	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()  +  1));	  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
211	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getLastIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToInt(def.getLastIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToInt(def.getLastIn()));	  entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
212	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()  +  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
213	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()  +  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
214	[BUG]  [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()!=  DEFLATED)  {  deflate();  }  else  {  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
215	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
216	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalDelta()  +  written));	  entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	20	None	replace
217	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBytes()  +  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
218	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBytes()),  DEFLATED);	  entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
219	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
220	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  >>  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  >>  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustTo  >>	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
221	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  /  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  /  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalIn()  /  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
222	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  -  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  -  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalIn()  -  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	42	None	replace
223	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalReal()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalReal()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalReal()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
224	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()  +  comment));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
225	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  -  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  -  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOut()  -  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalOut()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
226	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  /  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOut()  /  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOut()  /  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalOut()    +    comment));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
227	[BUG]  [BUGGY]  entry.setCrc(Long.toHexString(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(Long.toHexString(def.getTotalIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(Long.toHexString(def.getTotalIn()));	  entry.setSize(Long.toHexString(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
228	[BUG]  [BUGGY]  entry.setSize(Long.toHexString(def.getTotalIn()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(Long.toHexString(def.getTotalIn()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(Long.toHexString(def.getTotalIn()  +  comment));	  entry.setSize(Long.toHexString(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
229	[BUG]  [BUGGY]  entry.setLength(Long.toHexString(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setLength(Long.toHexString(def.getTotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setLength(Long.toHexString(def.getTotalOut()));	  entry.setSize(Long.toHexString(def.getTotalIn()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	19	None	replace
230	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalNumber()  +  comment));	  entry.setCompressedSize(Long.toHexString(def.getTotalNumber()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
231	[BUG]  [BUGGY]  entry.setTotalInt(Long.toHexString(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setTotalInt(Long.toHexString(def.getTotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setTotalInt(Long.toHexString(def.getTotalOut()));	  entry.setSize(Long.toHexString(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
232	[BUG]  [BUGGY]  entry.setCrc(Long.toHexString(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(Long.toHexString(def.getTotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(Long.toHexString(def.getTotalOut()));	  entry.setSize(Long.toHexString(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
233	[BUG]  [BUGGY]  entry.setTotal(Long.toHexString(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setTotal(Long.toHexString(def.getTotalIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setTotal(Long.toHexString(def.getTotalIn()));	  entry.setSize(Long.toHexString(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
234	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
235	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE()));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
236	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
237	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    entry.setCompressedSize(ZipUtil.adjustToLong(    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
238	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToInt(def.getTotalIn()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToInt(def.getTotalIn()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToInt(def.getTotalIn()));	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
239	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()),  DEFLATED);	  entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
240	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()  +  comment));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
241	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc(),  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc(),  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc(),  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
242	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  entry.setCompressedSize(ZipUtil.adjustTo	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    entry.setCompressedSize(ZipUtil.adjustTo    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
243	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getName()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getName()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getName()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
244	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
245	[BUG]  [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  deflate();  }  else  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  deflate();  }  else  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getCompressedSize()  ==  DEFLATER_BLOCK_SIZE)  {  deflate();  }  else  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
246	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()  +  written));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
247	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.getCompressedSize();	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
248	[BUG]  [BUGGY]  if(entry.getName()  ==  null)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getName()  ==  null)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getName()  ==  null)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
249	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));  written  +=  entry.getCompressedSize();	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
250	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
251	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()  +  written));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
252	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE  +  1));	  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
253	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()  +  comment));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()  +  comment));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()  +  comment));	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
254	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATED)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
255	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()!=  DEFLATER_BLOCK_SIZE)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
256	[BUG]  [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getMethod()  ==  DEFLATED  ||  entry.getCompressedSize()  ==  DEFLATED)  {  deflate();  }	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
257	[BUG]  [BUGGY]  Deflater  def  =  entry.getDeflated();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  Deflater  def  =  entry.getDeflated();  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	Deflater  def  =  entry.getDeflated();	  Deflater    def    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
258	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE()));	  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
259	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  written));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  written));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalOffset()  +  written));	  entry.setCompressedSize(Long.toHexString(def.getTotalOffset()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
260	[BUG]  [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDistribution()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setSize(ZipUtil.adjustToLong(def.getTotalDistribution()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setSize(ZipUtil.adjustToLong(def.getTotalDistribution()));	  entry.setRaw(realCrc);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	39	None	replace
261	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE  +  1));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE  +  1));	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    1));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
262	[BUG]  [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()  +  written),  DEFLATED);	  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
263	[BUG]  [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  written),  DEFLATED);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  written),  DEFLATED);  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCompressedSize(Long.toHexString(def.getTotalIn()  +  written),  DEFLATED);	  entry.setCompressedSize(Long.toHexString(def.getTotalIn()    +    written));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
264	[BUG]  [BUGGY]  entry.setCrc(ZipUtil.adjustToInt(def.getTotalOut()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  entry.setCrc(ZipUtil.adjustToInt(def.getTotalOut()));  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	entry.setCrc(ZipUtil.adjustToInt(def.getTotalOut()));	  entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
265	[BUG]  [BUGGY]  if(entry.getName()  ==  null)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      crc.reset();  if  (entry.getMethod()  ==  DEFLATED)  {  def.finish();  while  (!def.finished())  {  deflate();  }  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));      [BUGGY]  if(entry.getName()  ==  null)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.  [BUGGY]        def.reset();  written  +=  entry.getCompressedSize();  }  else  if  (raf  ==  null)  {  if  (entry.getCrc()  !=  realCrc)  {  throw  new  ZipException(     "bad  CRC  checksum  for  entry       "  +  entry.getName()  +       ":       "  +  Long.toHexString(entry.getCrc())  +       "  instead  of       "  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	if(entry.getName()  ==  null)  {  if(entry.getMethod()  ==  DEFLATED)  {  deflate();  }  else  {  entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));  written  +=  entry.	  if(entry.getMethod()    ==    DEFLATED)    {    deflate();    }    else    {    entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));    written    +=    entry.getCompressedSize();    }    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
