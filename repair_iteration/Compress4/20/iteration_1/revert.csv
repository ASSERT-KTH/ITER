projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(raf);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustTo
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(de
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustToLong
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustTo
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalNumber()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));
