projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(raf);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustTo
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(de
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustToLong
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustTo
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalNumber()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUt
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUt
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustTo==
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjust
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustTo==
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalNumber()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalNumber()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalNumber()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalNumber()+2));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getName()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize()
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getName()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+5));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes()).longValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalBytes()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize()
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDelta()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setDelimiter(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustToLong
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlock()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBlank()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+5));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()+4));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustTo
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setInt(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalRemote()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDown()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDestination()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+4));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),written+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getCompressedSize()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getName()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getCompressedSize()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRealCrc(ZipUtil.adjustToLong(def.getTotalRealCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getCompressedSize()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setDestination(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalStar()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalDestination()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(raf);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRelativeCrc(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelative(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalRelative()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getContent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getDeflate(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOffset()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()),DEFLATED,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setInt(ZipUtil.adjustToLong(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOffset()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUt
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustToLong(
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToInt(def.getCompressedSize()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()-written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()/written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDown()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalEnd()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDeleta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustToLong(de
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustToLong(de
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUt
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDegrees()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRelative(ZipUtil.adjustToLong(def.getTotalRelative()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(len);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(realCrc+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(realCrc+1);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRaw(realCrc,written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination()+1),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getName()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalStart()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDeletion()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()-1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalStart()+3));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjust
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getCrc()!=realCrc){if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getCrc()!=realCrc){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRemoteSize(ZipUtil.adjustToLong(def.getTotalRemote()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToInt(def.getTotalLong()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalStart()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDelta()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getImplicitDeployment();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getDeflate(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.gettotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalIn()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setRealSize(ZipUtil.adjustToLong(def.getTotalRealCrc()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()),written);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalDestination(),write));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOffset()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta()+5));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDeletion()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(ZipUtil.adjustToLong(def.getTotalDelta()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setEnd(ZipUtil.adjustToLong(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOffset()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getTotalOut()+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToInt(def.getLastIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOffset()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDestination()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()!=DEFLATED){deflate();}else{entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalDelta()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBytes()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustTo
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));entry.setCompressedSize(ZipUtil.adjustTo>>
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()/comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()-comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalReal()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRealCrc()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()-comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOut()/comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(Long.toHexString(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(Long.toHexString(def.getTotalIn()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setLength(Long.toHexString(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalNumber()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setTotalInt(Long.toHexString(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(Long.toHexString(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setTotal(Long.toHexString(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToInt(def.getTotalIn()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToLong(def.getTotalOut()),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemoteCrc(),written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));entry.setCompressedSize(ZipUtil.adjustTo
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getName()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getCompressedSize()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getCompressedSize()==DEFLATER_BLOCK_SIZE){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRemote()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getName()==null){if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalOut()));written+=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()+written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDown()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalBLOCK_SIZE+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalRelativeCrc()+comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getCompressedSize()!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getCompressedSize()!=DEFLATER_BLOCK_SIZE){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369Deflaterdef=entry.getDeflated();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalOffset()+written));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setSize(ZipUtil.adjustToLong(def.getTotalDistribution()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalBLOCK_SIZE+1));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalIn()+written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCompressedSize(Long.toHexString(def.getTotalIn()+written),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369entry.setCrc(ZipUtil.adjustToInt(def.getTotalOut()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java369if(entry.getName()==null){if(entry.getMethod()==DEFLATED){deflate();}else{entry.setSize(ZipUtil.adjustToLong(def.getTotalIn()));written+=entry.
