bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
2	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
3	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
4	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getLocalFile()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getLocalFile()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getLocalFile()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
5	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFile()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
6	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFile()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
7	[BUG]  [BUGGY]  if(raf!=  null  &&  _raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  _raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  _raf.isDirectory())  {	  if(_raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
8	[BUG]  [BUGGY]  if(raf!=  null  &&!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&!raf.isDirectory())  {	  if(_raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
9	[BUG]  [BUGGY]  if(raf!=  null  ||  _raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  _raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  _raf.isDirectory())  {	  if(_raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	46	None	replace
10	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.isDirectory())  {	  if(_raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
11	[BUG]  [BUGGY]  if(raf  ==  null  ||  _raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  _raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  _raf.isDirectory())  {	  if(_raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
12	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer().isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getFilePointer().isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer().isDirectory())  {	  if(_raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	59	None	replace
13	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getContentPointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getContentPointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getContentPointer()  ==  null)  {	  if(raf!=    null    ||    raf.getContentPointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	78	None	replace
14	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	38	None	replace
15	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
16	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
17	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
18	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getContentPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getContentPointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.getContentPointer()!=  null)  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
19	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getCrc()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getCrc()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.getCrc()!=  null)  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
20	[BUG]  [BUGGY]  if(raf!=  null  &&!raf.getFilePointer().equals(realCrc))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&!raf.getFilePointer().equals(realCrc))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&!raf.getFilePointer().equals(realCrc))  {	  if(raf!=    null    ||!raf.getFilePointer().equals(realCrc))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
21	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.getFilePointer().equals(localDataStart))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.getFilePointer().equals(localDataStart))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.getFilePointer().equals(localDataStart))  {	  if(raf!=    null    ||!raf.getFilePointer().equals(realCrc))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
22	[BUG]  [BUGGY]  if(raf  ==  null  &&!raf.getFilePointer().equals(realCrc))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&!raf.getFilePointer().equals(realCrc))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&!raf.getFilePointer().equals(realCrc))  {	  if(raf!=    null    ||!raf.getFilePointer().equals(realCrc))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
23	[BUG]  [BUGGY]  if(realCrc!=  null  ||!raf.getFilePointer().equals(raf))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(realCrc!=  null  ||!raf.getFilePointer().equals(raf))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(realCrc!=  null  ||!raf.getFilePointer().equals(raf))  {	  if(raf!=    null    ||!raf.getFilePointer().equals(realCrc))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
24	[BUG]  [BUGGY]  if(raf  ==  null  ||!raf.getFilePointer().equals(realCrc))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||!raf.getFilePointer().equals(realCrc))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||!raf.getFilePointer().equals(realCrc))  {	  if(raf!=    null    ||!raf.getFilePointer().equals(realCrc))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	12	None	replace
25	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(read));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(read));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(read));	  writeOut(ZipLong.getBytes(realCrc));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
26	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(writer));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(writer));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(writer));	  writeOut(ZipLong.getBytes(realCrc));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
27	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getRealCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getRealCrc()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getRealCrc()));	  writeOut(ZipLong.getBytes(realCrc));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
28	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(write));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(write));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(write));	  writeOut(ZipLong.getBytes(realCrc));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	57	None	replace
29	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getCrc()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.getCrc()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getCrc()  ==  null)  {	  if(raf    ==    null    ||    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	77	None	replace
30	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getLocalFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
31	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getLocalFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
32	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getLocalFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
33	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getLocalFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
34	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getLocalFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
35	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getLocalFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	34	None	replace
36	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasLocalFilePointer())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
37	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||!raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isDirectory()  ||!raf.hasFilePointer())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
38	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.canReadFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.canReadFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||!raf.canReadFilePointer())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
39	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.getLocalFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	29	None	replace
40	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  >  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  >  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  >  0)  {	  if(raf!=    null    &&    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
41	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getEnd()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getEnd()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getEnd()));	  writeOut(ZipLong.getBytes(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
42	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getCompressedSize()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getCompressedSize()  +  1));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getCompressedSize()  +  1));	  writeOut(ZipLong.getBytes(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
43	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getDeflate()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getDeflate()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getDeflate()));	  writeOut(ZipLong.getBytes(entry.getCompressedSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	24	None	replace
44	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  &&!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  &&!raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  &&!raf.hasFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
45	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasLocalFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
46	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getDirectory()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
47	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDirectory()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
48	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDirectory()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
49	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDirectory()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
50	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasLocalFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory()    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
51	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasRemoteFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasRemoteFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasRemoteFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory()    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
52	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer()  ==  null)  {	  if(raf    ==    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	14	None	replace
53	[BUG]  [BUGGY]  Integer  raf  =  entry.getKey();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Integer  raf  =  entry.getKey();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getKey();	  Integer    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
54	[BUG]  [BUGGY]  Integer  raf  =  entry.getValue()  +  1;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Integer  raf  =  entry.getValue()  +  1;  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getValue()  +  1;	  Integer    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
55	[BUG]  [BUGGY]  Integer  raf  =  entry.getLongValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Integer  raf  =  entry.getLongValue();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getLongValue();	  Integer    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
56	[BUG]  [BUGGY]  Integer  raf  =  entry.getAssignedValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Integer  raf  =  entry.getAssignedValue();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getAssignedValue();	  Integer    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
57	[BUG]  [BUGGY]  Integer  raf  =  entry.getRawValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Integer  raf  =  entry.getRawValue();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getRawValue();	  Integer    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
58	[BUG]  [BUGGY]  Integer  raf  =  entry.getImmediateParentPointer();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Integer  raf  =  entry.getImmediateParentPointer();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getImmediateParentPointer();	  Integer    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
59	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getContentPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getContentPointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getContentPointer()!=  null)  {	  if(raf!=    null    ||    raf.getContentPointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
60	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getContentPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.getContentPointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getContentPointer()!=  null)  {	  if(raf!=    null    ||    raf.getContentPointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	79	None	replace
61	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
62	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
63	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getContentPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getContentPointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getContentPointer()!=  null)  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
64	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getCrc()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getCrc()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getCrc()!=  null)  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
65	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getDirectory()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getDirectory()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getDirectory()  ==  null)  {	  if(raf!=    null    &&    raf.getDirectory()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
66	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getDirectory()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getDirectory()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getDirectory()!=  null)  {	  if(raf!=    null    &&    raf.getDirectory()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	70	None	replace
67	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer())  {	  if(raf!=    null    ||    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
68	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getDirectory())  {	  if(raf!=    null    ||    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
69	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getLocalFilePointer())  {	  if(raf!=    null    ||    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
70	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.getDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getDirectory())  {	  if(raf!=    null    ||    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
71	[BUG]  [BUGGY]  if(raf!=  null  &&  _raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  _raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  _raf.getFilePointer()!=  null)  {	  if(_raf!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	71	None	replace
72	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getContentPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
73	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getContentPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
74	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getContentPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
75	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getContentPointer()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getContentPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
76	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getContentPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
77	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  ==  0)  {	  if(raf!=    null    &&    raf.getSize()    ==    0)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
78	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getSize()  ==  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getSize()  ==  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getSize()  ==  0)  {	  if(raf!=    null    &&    raf.getSize()    ==    0)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
79	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getSize()  >  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getSize()  >  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getSize()  >  0)  {	  if(raf!=    null    &&    raf.getSize()    ==    0)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
80	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLength()  ==  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLength()  ==  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLength()  ==  0)  {	  if(raf!=    null    &&    raf.getSize()    ==    0)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
81	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  >=  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  >=  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  >=  0)  {	  if(raf!=    null    &&    raf.getSize()    ==    0)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
82	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()  ==  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()  ==  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getFilePointer()  ==  0)  {	  if(raf!=    null    &&    raf.getSize()    ==    0)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
83	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFile()  ==  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	61	None	replace
84	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getDirectory()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getDirectory()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getDirectory()!=  null)  {	  if(raf!=    null    &&    raf.getDirectory()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
85	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getCrc()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getCrc()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getCrc()!=  null)  {	  if(raf!=    null    ||    raf.getCrc()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	30	None	replace
86	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
87	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
88	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG,  DEFLATED))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG,  DEFLATED))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG,  DEFLATED))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
89	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
90	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG)&&  writeOut(ZipLong.getBytes(entry.getFilePointer())))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG)&&  writeOut(ZipLong.getBytes(entry.getFilePointer())))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG)&&  writeOut(ZipLong.getBytes(entry.getFilePointer())))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
91	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getDescriptor()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getDescriptor()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getDescriptor()));	  writeOut(ZipLong.getBytes(entry.getEntry()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	26	None	replace
92	[BUG]  [BUGGY]  raf.seek(cdLength);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  raf.seek(cdLength);  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	raf.seek(cdLength);	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
93	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
94	[BUG]  [BUGGY]  if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
95	[BUG]  [BUGGY]  if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
96	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
97	[BUG]  [BUGGY]  if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(cdLength  >  0)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalStateException( " ");  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
98	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  throw  new  IllegalStateException( " ");  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
99	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
100	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
101	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
102	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
103	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getCrc()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getCrc()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getCrc()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
104	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isDirectory()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
105	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer())  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
106	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
107	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.isLocal())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.isLocal())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.isLocal())  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
108	[BUG]  [BUGGY]  if(raf!=  null  &&!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&!raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&!raf.hasFilePointer())  {	  if(raf!=    null    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
109	[BUG]  [BUGGY]  if(raf  ==  null  ||!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||!raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||!raf.hasFilePointer())  {	  if(raf!=    null    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
110	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.hasLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.hasLocalFilePointer())  {	  if(raf!=    null    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
111	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.hasRemoteFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.hasRemoteFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.hasRemoteFilePointer())  {	  if(raf!=    null    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
112	[BUG]  [BUGGY]  if(raf!=  null  &&!raf.getFilePointer().isEmpty())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&!raf.getFilePointer().isEmpty())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&!raf.getFilePointer().isEmpty())  {	  if(raf!=    null    ||!raf.getFilePointer().isEmpty())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
113	[BUG]  [BUGGY]  if(raf  ==  null  &&!raf.getFilePointer().isEmpty())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&!raf.getFilePointer().isEmpty())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&!raf.getFilePointer().isEmpty())  {	  if(raf!=    null    ||!raf.getFilePointer().isEmpty())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
114	[BUG]  [BUGGY]  if(raf  ==  null  ||!raf.getFilePointer().isEmpty())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||!raf.getFilePointer().isEmpty())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||!raf.getFilePointer().isEmpty())  {	  if(raf!=    null    ||!raf.getFilePointer().isEmpty())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
115	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.getLocalFilePointer().isEmpty())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.getLocalFilePointer().isEmpty())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.getLocalFilePointer().isEmpty())  {	  if(raf!=    null    ||!raf.getFilePointer().isEmpty())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
116	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.getContentPointer().isEmpty())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.getContentPointer().isEmpty())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.getContentPointer().isEmpty())  {	  if(raf!=    null    ||!raf.getFilePointer().isEmpty())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	13	None	replace
117	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
118	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getLocalFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
119	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getLocalFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
120	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	32	None	replace
121	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ||!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  ||!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    ||!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
122	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isDirectory()  ||!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isDirectory()  ||!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    ||!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
123	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer())  {	  if(raf!=    null    &&    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
124	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  >  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  >  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()  >  0)  {	  if(raf!=    null    &&    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
125	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer())  {	  if(raf!=    null    &&    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
126	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_ENCODING))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
127	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_ENCODING))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
128	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING,  DEFLATED))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING,  DEFLATED))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING,  DEFLATED))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
129	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING)&&!raf.getFilePointer().equals(realCrc))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING)&&!raf.getFilePointer().equals(realCrc))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING)&&!raf.getFilePointer().equals(realCrc))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
130	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING)&&!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING)&&!raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING)&&!raf.hasFilePointer())  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
131	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_COMPRESSION))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_COMPRESSION))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_COMPRESSION))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
132	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.hasFilePointer()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.hasFilePointer()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.hasFilePointer()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
133	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasDirectory()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.hasDirectory()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasDirectory()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
134	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.hasFilePointer()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.hasFilePointer()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.hasFilePointer()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
135	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer()  ||  raf.getDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer()  ||  raf.getDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasFilePointer()  ||  raf.getDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
136	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasDataPointer()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.hasDataPointer()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasDataPointer()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
137	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasContentPointer()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.hasContentPointer()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasContentPointer()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
138	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getName()),  raf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getName()),  raf);  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getName()),  raf);	  writeOut(ZipLong.getBytes(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
139	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
140	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  ||  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
141	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
142	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer()  ||!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasFilePointer()  ||!raf.isDirectory())  {	  if(raf    ==    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	41	None	replace
143	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  >=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  >=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  >=  null)  {	  if(raf!=    null    &&    raf.getCrc()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	37	None	replace
144	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
145	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
146	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getDataPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getDataPointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getDataPointer()!=  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
147	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
148	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getDataPointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getDataPointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getDataPointer()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
149	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
150	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
151	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
152	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
153	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getDirectory()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getDirectory()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getDirectory()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
154	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
155	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getLocalFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getLocalFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getLocalFilePointer()  ==  null)  {	  if(raf!=    null    ||    raf.getLocalFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
156	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.hasRemoteFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.hasRemoteFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.hasRemoteFilePointer())  {	  if(raf!=    null    ||    raf.hasRemoteFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
157	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.hasRemoteFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.hasRemoteFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.hasRemoteFilePointer())  {	  if(raf!=    null    ||    raf.hasRemoteFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
158	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.hasRemoteFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.hasRemoteFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.hasRemoteFilePointer())  {	  if(raf!=    null    ||    raf.hasRemoteFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	55	None	replace
159	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRaw();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getRaw();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getRaw();	  Deflater    raf    =    entry.getDeflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
160	[BUG]  [BUGGY]  Deflater  raf  =  entry.getRawDeflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getRawDeflater();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getRawDeflater();	  Deflater    raf    =    entry.getDeflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
161	[BUG]  [BUGGY]  Deflater  raf  =  entry.getDataDescriptor();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getDataDescriptor();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getDataDescriptor();	  Deflater    raf    =    entry.getDeflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
162	[BUG]  [BUGGY]  Deflater  raf  =  entry.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getValue();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getValue();	  Deflater    raf    =    entry.getDeflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
163	[BUG]  [BUGGY]  Deflater  raf  =  entry.getInput();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getInput();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getInput();	  Deflater    raf    =    entry.getDeflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
164	[BUG]  [BUGGY]  Deflater  raf  =  entry.getConfig();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getConfig();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getConfig();	  Deflater    raf    =    entry.getDeflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
165	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
166	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
167	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME,  DEFLATED))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME,  DEFLATED))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME,  DEFLATED))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
168	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
169	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME)&&!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME)&&!raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME)&&!raf.hasFilePointer())  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
170	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.hasDeflater())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.hasDeflater())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.hasDeflater())  {	  if(raf!=    null    ||    raf.hasDeflater())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
171	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.hasDeflater())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.hasDeflater())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.hasDeflater())  {	  if(raf!=    null    ||    raf.hasDeflater())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
172	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.hasDeflater())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.hasDeflater())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.hasDeflater())  {	  if(raf!=    null    ||    raf.hasDeflater())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
173	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDeflater())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDeflater())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDeflater())  {	  if(raf!=    null    ||    raf.hasDeflater())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
174	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getName()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getName()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getName()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.getFilePointer()!=    null    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
175	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    ||    raf.getFilePointer()!=    null    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	35	None	replace
176	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getLocalFile()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getLocalFile()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getLocalFile()!=  null)  {	  if(raf!=    null    ||    raf.getLocalFile()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
177	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getLocalFile()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getLocalFile()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getLocalFile()  ==  null)  {	  if(raf!=    null    ||    raf.getLocalFile()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
178	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getLocalFile()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.getLocalFile()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getLocalFile()!=  null)  {	  if(raf!=    null    ||    raf.getLocalFile()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
179	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  &&!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  &&!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  &&!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
180	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isDirectory()  &&!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.isDirectory()  &&!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isDirectory()  &&!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
181	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getCrc()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getCrc()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getCrc()  ==  null)  {	  if(raf!=    null    ||    raf.getCrc()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
182	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.hasLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.hasLocalFilePointer())  {	  if(raf!=    null    ||    raf.hasLocalFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
183	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.hasLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.hasLocalFilePointer())  {	  if(raf!=    null    ||    raf.hasLocalFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
184	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.hasLocalFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.hasLocalFilePointer())  {	  if(raf!=    null    ||    raf.hasLocalFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
185	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasLocalFiles())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.hasLocalFiles())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasLocalFiles())  {	  if(raf!=    null    ||    raf.hasLocalFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	43	None	replace
186	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
187	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
188	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
189	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
190	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!raf.getFilePointer().equals(realCrc))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!raf.getFilePointer().equals(realCrc))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES)&&!raf.getFilePointer().equals(realCrc))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
191	[BUG]  [BUGGY]  Deflater  raf  =  entry.getEntry();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getEntry();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getEntry();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
192	[BUG]  [BUGGY]  Deflater  raf  =  entry.getEntryPointer();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getEntryPointer();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getEntryPointer();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
193	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getFilePointer()),  raf);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getFilePointer()),  raf);  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getFilePointer()),  raf);	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
194	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getContent()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getContent()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getContent()));	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
195	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.isLocal())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.isLocal())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||!raf.isLocal())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
196	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ||!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()  ||!raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
197	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getSize()  +  1));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getSize()  +  1));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getSize()  +  1));	  writeOut(ZipLong.getBytes(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
198	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.hasContentPointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.hasContentPointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.hasContentPointer())  {	  if(raf!=    null    ||    raf.hasContentPointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
199	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.hasContentPointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.hasContentPointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.hasContentPointer())  {	  if(raf!=    null    ||    raf.hasContentPointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
200	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getName()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getName()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getName()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getName()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
201	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getName()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
202	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getName()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
203	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getName()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
204	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getName()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
205	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getLocalFile()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getLocalFile()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getLocalFile()!=  null)  {	  if(raf!=    null    &&    raf.getName()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	69	None	replace
206	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
207	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ==  null  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ==  null  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()  ==  null  ||  raf.isDirectory())  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
208	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
209	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ==  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ==  null  &&  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()  ==  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
210	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null  &&  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
211	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()  ==  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
212	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.hasCrc())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.hasCrc())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.hasCrc())  {	  if(raf!=    null    ||    raf.hasCrc())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
213	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.hasCrc())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.hasCrc())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.hasCrc())  {	  if(raf!=    null    ||    raf.hasCrc())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
214	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	31	None	replace
215	[BUG]  [BUGGY]  if(_raf!=  null  ||  raf.hasDeflater())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(_raf!=  null  ||  raf.hasDeflater())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null  ||  raf.hasDeflater())  {	  if(raf!=    null    ||    raf.hasDeflater())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	75	None	replace
216	[BUG]  [BUGGY]  if(_raf!=  null  ||  raf.getDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(_raf!=  null  ||  raf.getDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null  ||  raf.getDirectory())  {	  if(raf!=    null    ||    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	60	None	replace
217	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getChars()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getChars()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getChars()));	  writeOut(ZipLong.getBytes(entry.getCrc()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	23	None	replace
218	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getCrc()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.getCrc()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getCrc()!=  null)  {	  if(raf    ==    null    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
219	[BUG]  [BUGGY]  if(crc!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(crc!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(crc!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
220	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  return;  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  return;  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  return;  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
221	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  }  else  {	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    raf.seek(cdLength);    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	62	None	replace
222	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isDirectory()  &&!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.isDirectory()  &&!raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isDirectory()  &&!raf.hasFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
223	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasSource())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasSource())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasSource())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	66	None	replace
224	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.hasDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	44	None	replace
225	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf    ==    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	50	None	replace
226	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isDirectory()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  &&  raf.isDirectory()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isDirectory()  ||  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
227	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()  ||  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
228	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getDirectory()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getDirectory()  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getDirectory()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	16	None	replace
229	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getName()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getName()));  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getName()));  }	  writeOut(ZipLong.getBytes(entry.getName()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	28	None	replace
230	[BUG]  [BUGGY]  Deflater  raf  =  def.getDeflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  def.getDeflater();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  def.getDeflater();	  Deflater    raf    =    entry.getDeflater();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	56	None	replace
231	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasSource())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasSource())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasSource())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
232	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getDataPointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getDataPointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getDataPointer()  ==  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	52	None	replace
233	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ||!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()  ||!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    ||!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
234	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getValue()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getValue()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getValue()));	  writeOut(ZipLong.getBytes(entry.getSize()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	25	None	replace
235	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getCrc()!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	49	None	replace
236	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.hasDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||!raf.hasDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.hasDirectory())  {	  if(raf!=    null    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
237	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.isLocal())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.isLocal())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  &&!raf.isLocal())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
238	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  &&!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  &&!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()  &&!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory()    &&!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	65	None	replace
239	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDataPointer()  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
240	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDataStart()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDataStart()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDataStart()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
241	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getDirectoryPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getDirectoryPointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getDirectoryPointer()!=  null)  {	  if(raf!=    null    &&    raf.getDataPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	68	None	replace
242	[BUG]  [BUGGY]  if(_raf!=  null  &&  raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(_raf!=  null  &&  raf.hasFilePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null  &&  raf.hasFilePointer())  {	  if(raf!=    null    &&    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	40	None	replace
243	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getName()!=  null)  {	  if(raf!=    null    &&    raf.getDirectory()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	76	None	replace
244	[BUG]  [BUGGY]  if(_raf!=  null  &&  raf.getDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(_raf!=  null  &&  raf.getDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null  &&  raf.getDirectory())  {	  if(raf!=    null    &&    raf.getDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	47	None	replace
245	[BUG]  [BUGGY]  Integer  raf  =  entry.getValue()  +  2;  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Integer  raf  =  entry.getValue()  +  2;  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getValue()  +  2;	  Integer    raf    =    entry.getValue();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	63	None	replace
246	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.DEFLATED))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.DEFLATED))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.DEFLATED))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.AUTO_CLOSE_SIG))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	72	None	replace
247	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.hasContentPointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.hasContentPointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.hasContentPointer())  {	  if(raf!=    null    ||    raf.hasContentPointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	74	None	replace
248	[BUG]  [BUGGY]  Deflater  raf  =  entry.getData();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  Deflater  raf  =  entry.getData();  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getData();	  Deflater    raf    =    entry.getDeflate();    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	27	None	replace
249	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  0)  {	  if(raf!=    null    &&    raf.getSize()    ==    0)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	48	None	replace
250	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getDirectory()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getDirectory()  ||!raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getDirectory()  ||!raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	15	None	replace
251	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getName()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getName()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getName()!=  null)  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
252	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getSize()!=  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getSize()!=  0)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getSize()!=  0)  {	  if(raf!=    null    ||    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	64	None	replace
253	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.hasCrc())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.hasCrc())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.hasCrc())  {	  if(raf!=    null    ||    raf.hasCrc())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
254	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES)&&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	53	None	replace
255	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getContentStart()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getContentStart()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getContentStart()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getContentPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
256	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getContentPointer()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getContentPointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	33	None	replace
257	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  ||  raf.isDirectory())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  ||  raf.isDirectory())  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
258	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING))  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_ENCODING))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	54	None	replace
259	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalPath()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.getLocalPath()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalPath()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getLocalFile()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	36	None	replace
260	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer()  ==  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
261	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getName()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getName()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.getName()!=  null)  {	  if(raf!=    null    &&    raf.isDirectory()    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	67	None	replace
262	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME)&&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME)&&  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME)&&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	58	None	replace
263	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getDirectory()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.getDirectory()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getDirectory()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getDirectory()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	51	None	replace
264	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
265	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getEndPointer()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  writeOut(ZipLong.getBytes(entry.getEndPointer()));  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getEndPointer()));	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
266	[BUG]  [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }  else  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }  else  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null)  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }  else  {  writeOut(ZipLong.getBytes(entry.getFilePointer()));  }	  writeOut(ZipLong.getBytes(entry.getFilePointer()));    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	22	None	replace
267	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasRemotePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasRemotePointer())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasRemotePointer())  {	  if(raf!=    null    ||    raf.isDirectory()    ||!raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	17	None	replace
268	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.canRead())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty      [CONTEXT]      }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }        [BUGGY]  if(raf!=  null  ||  raf.canRead())  {  [BUGGY]      long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.canRead())  {	  if(raf!=    null    ||    raf.hasCrc())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	73	None	replace
