bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getLocalFilePointer()  ==  null)  {	  if(raf!=    null    ||    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
2	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getCrc()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getCrc()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getCrc()  ==  null)  {	  if(raf!=    null    ||    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
3	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    ||    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
4	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
5	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  ==  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
6	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
7	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  &&  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
8	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||!raf.hasFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
9	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||!raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
10	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||!raf.hasFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.hasFilePointer())  {	  if(raf    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
11	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  >=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  >=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()  >=  null)  {	  if(raf    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
12	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.getFilePointer().equals(realCrc))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||!raf.getFilePointer().equals(realCrc))  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.getFilePointer().equals(realCrc))  {	  if(_raf!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
13	[BUG]  [BUGGY]  if(raf!=  null  ||!raf.getFilePointer().isEmpty())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||!raf.getFilePointer().isEmpty())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||!raf.getFilePointer().isEmpty())  {	  if(_raf!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
14	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  ||  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
15	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||!raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
16	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
17	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||!raf.hasFilePointer())  {	  if(raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
18	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
19	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
20	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getContentPointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
21	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
22	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getFilePointer()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(entry.getFilePointer()));  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getFilePointer()));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
23	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getCrc()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(entry.getCrc()));  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getCrc()));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
24	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getCompressedSize()));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
25	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getSize()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(entry.getSize()));  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getSize()));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
26	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getEntry()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(entry.getEntry()));  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getEntry()));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
27	[BUG]  [BUGGY]  Deflater  raf  =  entry.getDeflate();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  Deflater  raf  =  entry.getDeflate();  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getDeflate();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
28	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getName()));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(entry.getName()));  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getName()));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
29	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getLocalFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
30	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getCrc()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getCrc()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getCrc()!=  null)  {	  if(raf!=    null    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
31	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
32	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
33	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getContentPointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
34	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getLocalFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
35	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                    java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()!=  null  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
36	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                      java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFile()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
37	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getCrc()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()  ==  null)  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
38	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
39	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getContentPointer()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getContentPointer()  ==  null)  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
40	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.hasFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.hasFilePointer())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
41	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  ||  raf.hasFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.hasFilePointer())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
42	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  &&  raf.hasFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.hasFilePointer())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
43	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasLocalFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.hasLocalFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasLocalFilePointer())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
44	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer()  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer()  ||  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasFilePointer()  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
45	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getLocalFile()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getLocalFile()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getLocalFile()!=  null)  {	  if(raf!=    null    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
46	[BUG]  [BUGGY]  if(_raf!=  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(_raf!=  null  &&  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null  &&  raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
47	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
48	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getSize()  ==  0)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getSize()  ==  0)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getSize()  ==  0)  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
49	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getCrc()!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
50	[BUG]  [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
51	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
52	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
53	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(raf    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
54	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING))  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_ENCODING))  {	  if(raf    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	3	None	replace
55	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasRemoteFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.hasRemoteFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasRemoteFilePointer())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
56	[BUG]  [BUGGY]  Deflater  raf  =  entry.getDeflater();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  Deflater  raf  =  entry.getDeflater();  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Deflater  raf  =  entry.getDeflater();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
57	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(realCrc));  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(realCrc));  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(realCrc));	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
58	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(_raf!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
59	[BUG]  [BUGGY]  if(_raf!=  null  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(_raf!=  null  ||  raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null  ||  raf.isDirectory())  {	  if(raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
60	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getDirectory())  {	  if(raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
61	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getLocalFile()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getLocalFile()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
62	[BUG]  [BUGGY]  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	writeOut(ZipLong.getBytes(entry.getFilePointer()));  raf.seek(cdLength);	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
63	[BUG]  [BUGGY]  Integer  raf  =  entry.getValue();  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]                  java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  Integer  raf  =  entry.getValue();  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	Integer  raf  =  entry.getValue();	      	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	5	None	replace
64	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    ||    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	4	None	replace
65	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.isDirectory())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  &&!raf.isDirectory())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
66	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasFilePointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  &&!raf.hasFilePointer())  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
67	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory()  ||  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.isDirectory())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	9	None	replace
68	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDataPointer()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
69	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getName()!=  null  &&  raf.getFilePointer()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	10	None	replace
70	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getDirectory()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()  ==  null)  {	  if(raf!=    null    &&    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	11	None	replace
71	[BUG]  [BUGGY]  if(_raf!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(_raf!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null  &&  raf.getFilePointer()!=  null)  {	  if(_raf!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
72	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isEnabled(Feature.AUTO_CLOSE_SIG))  {	  if(_raf!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	6	None	replace
73	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasCrc())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.hasCrc())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasCrc())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
74	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasContentPointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.hasContentPointer())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasContentPointer())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
75	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasDeflater())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]              java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.hasDeflater())  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasDeflater())  {	  if(raf!=    null    ||    raf.hasFilePointer())    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	7	None	replace
76	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  &&  raf.getDirectory()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getDirectory()!=  null)  {	  if(raf!=    null    &&    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	8	None	replace
77	[BUG]  [BUGGY]  if(raf  ==  null  ||  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf  ==  null  ||  raf.getFilePointer()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null  ||  raf.getFilePointer()  ==  null)  {	  if(raf!=    null    ||    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
78	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()  ==  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getContentPointer()  ==  null)  {	  if(raf!=    null    ||    raf.getFilePointer()    ==    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	2	None	replace
79	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty    [CONTEXT]    }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }      [BUGGY]  if(raf!=  null  ||  raf.getContentPointer()!=  null)  {  [BUGGY]    long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getContentPointer()!=  null)  {	  if(raf!=    null    ||    raf.getFilePointer()!=    null)    {    	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	1	None	replace
