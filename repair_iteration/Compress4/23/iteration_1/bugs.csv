bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]    java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()!=  null)  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()!=  null)  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
2	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]      java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  ||  raf.getFilePointer()  ==  null)  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.getFilePointer()  ==  null)  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
3	[BUG]  [BUGGY]  if(raf  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf  ==  null)  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf  ==  null)  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
4	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  ||  raf.isDirectory())  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.isDirectory())  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
5	[BUG]  [BUGGY]    [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]            java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]    [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	  	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
6	[BUG]  [BUGGY]  if(_raf!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]    java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(_raf!=  null)  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(_raf!=  null)  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
7	[BUG]  [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]      java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  ||  raf.hasFilePointer())  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  ||  raf.hasFilePointer())  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
8	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]    java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null)  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
9	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.isDirectory())  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]      java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  &&  raf.isDirectory())  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.isDirectory())  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
10	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]        java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()!=  null  &&  raf.getFilePointer()!=  null)  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
11	[BUG]  [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  null)  {  [CE]  static  import  declarations  are  not  supported  in  -source  1.4  [FE]          java.io.IOException:  central  directory  is  empty  [CONTEXT]  }  else  {  /*  method  is  STORED  and  we  used  RandomAccessFile  */  long  size  =  written  -  dataStart;  entry.setSize(size);  entry.setCompressedSize(size);  entry.setCrc(realCrc);  }    [BUGGY]  if(raf!=  null  &&  raf.getFilePointer()  ==  null)  {  [BUGGY]  long  save  =  raf.getFilePointer();  raf.seek(localDataStart);  writeOut(ZipLong.getBytes(entry.getCrc()));  writeOut(ZipLong.getBytes(entry.getCompressedSize()));  writeOut(ZipLong.getBytes(entry.getSize()));  raf.seek(save);  }  writeDataDescriptor(entry);  [CLASS]  ZipArchiveOutputStream  UnicodeExtraFieldPolicy  [METHOD]  closeArchiveEntry  [RETURN_TYPE]  void  [VARIABLES]  ZipEncoding  zipEncoding  UnicodeExtraFieldPolicy  ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  CRC32  crc  OutputStream  o  out  String  DEFAULT_ENCODING  comment  encoding  n  name  int  BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  long  cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  byte[]  CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  boolean  b  fallbackToUTF8  hasCompressionLevelChanged  useEFS  Deflater  def  RandomAccessFile  _raf  raf  ZipArchiveEntry  entry  List  entries  Map  offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	if(raf!=  null  &&  raf.getFilePointer()  ==  null)  {	if  (raf  !=  null)  {  	non-compiled	[CE]  static  import  declarations  are  not  supported  in  -source  1.4	45	None	replace
