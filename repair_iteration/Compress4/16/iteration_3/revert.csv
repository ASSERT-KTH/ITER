projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalIn()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalIn()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate<=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalOut()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getTotalIn()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalOut()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&useEFS){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,comment)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){def.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getTotalIn()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalIn()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate<DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||deflate<=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc<=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod().isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled()||DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES)||def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_raf.closeEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Deflater.DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getCompressedSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflated){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Deflater.DEFAULT_ENCODING)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Deflater.DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES||DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){def.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalIn()>DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES,comment)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES,true)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc<DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||realCrc<=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363def.close();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc.isEnabled()||DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled()||DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled()&&DEFLATED.equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled()&&DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||DEFLATED.equals(realCrc)||DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled()||DEFLATED.equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&entry.getMethod()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!entry.finished()&&entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)||isEnabled(Feature.QUOTE_COMPRESSION,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!Deflater.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||!def.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged(realCrc,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged(realCrc,def)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged(realCrc,def.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged(realCrc,def.reset())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportUndeflate(entry.getMethod(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportError("Failedtocloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportUnsupportedOperation();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportError("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getDeflated();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getDeclaredMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.hasCompressionLevelChanged(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.hasMoreElements()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getTotalOut()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<K,V>entry=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getCompressedSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged&&def.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Deflater.DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Deflater.DEFLATER_BLOCK_SIZE,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate.isEnabled(Deflater.DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Entry.DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getTotalOut()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363def.finish();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Feature.QUOTE_FIELD_NAMES)||def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES)&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES)||def.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled()&&DEFLATED.equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled()&&DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled()&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!Deflater.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_raf.closeArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_raf.closeEntry(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_raf.close();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363def.closeEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363raf.closeEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||deflate<DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate>DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES||DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES||DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES||DEFLATED,realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES||DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getReal();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Deflater.DEFAULT_ENCODING)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Deflater.DEFAULT_ENCODING,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Deflater.DEFAULT_ENCODING,comment)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Deflater.DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Deflater.DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Entry.DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate.isEnabled(Deflater.DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_COMPRESSION)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_COMPRESSION)||isEnabled(Feature.QUOTE_MASK)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalOut()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalIn()<DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getDeflated();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getRealCrc();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,realCrc)||hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATER_BLOCK_SIZE+1)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED&&entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363DEFLATED||entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getCompressedSize()==DEFLATED||entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){def.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){def.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<T>entry=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){def.close();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getConstructor();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||deflated){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc!=deflated){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc!=deflate){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||useEFS){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc!=useEFS){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.enabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled(Feature.QUOTE_FIELD_NAMES,comment)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled(Feature.QUOTE_FIELD_NAMES)||DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!entry.finished()&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||deflate==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||deflate!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||deflate>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&entry.getCompressedSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getCompressedSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getCompressedSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getCompressedSize()>DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getCompressedSize()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED&&entry.getMethod()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363DEFLATED||entry.getMethod()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getCompressedSize()==DEFLATED||entry.getMethod()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getType()==DEFLATED||entry.getMethod()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled()||DEFLATED.equals(realCrc)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled()||DEFLATED.equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled()&&DEFLATED.equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getMethod().isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&entry.getMethod().isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod().isEnabled(this)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){def.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){def.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED){def.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalOut()>DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getTotalIn()>DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getTotalIn()>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED&&entry.getMethod()==DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363DEFLATED||entry.getMethod()==DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getCompressedSize()==DEFLATED||entry.getMethod()==DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED&&entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getCompressedSize()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getValue()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&DEFLATED!=realCrc){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getEnd()==DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&DEFLATED.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finish()&&def.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate!=EFS_FLAG){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)||hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES)||def.isEnabled(DefLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getIn();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod().isEnabled(Deflater.DEFAULT_ENCODING)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod().isEnabled(Deflater.DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.getMethod().isEnabled(Deflater.DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363While(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getCompressedSize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getDeprecated();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.hasCompressedSizeChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.hasDeflate()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.hasCompressionLevelChanged()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED&&entry.getMethod()==DEFLATED){def.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflate==EFS_FLAG){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED)||def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportError("Currententrynotfound:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportError("Currententry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportUndeflate(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled(Deflater.DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(_raf!=null){_raf.closeEntry();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(_raf!=null){_raf.closeEntry();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(_raf!=null){_raf.closeEntry();}else{def.closeEntry();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(_raf!=null){_raf.closeEntry();}else{thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(_raf!=null){_raf.closeEntry();}else{deflate();return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getDestination();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getMethod(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_SIG,DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAME,DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES||DEFLATED,DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasEnabled(Feature.QUOTE_FIELD_NAMES||DEFLATED)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED){def.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){def.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){def.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&hasCompressionLevelChanged(entry)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled(Deflater.DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&deflater.isEnabled(Deflater.DEFLATER_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getName()==DEFLATED||entry.getName()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){def.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc<def.getCompressedSize()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&realCrc!=def.getCompressedSize()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED&&entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363While(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finish()&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finish()&&def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){def.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES||DEFAULT_COMPRESSION)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<Object>entry=entries.get(def.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.enabled(Feature.QUOTE_FIELD_NAMES)||def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&entry.hasCompressionLevelChanged){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&def.hasDeflated){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&entry.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||isEnabled(Feature.QUOTE_FIELD_NAMES)&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()&&isEnabled(Feature.QUOTE_FIELD_NAMES,DEFLATED_BLOCK_SIZE)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged&&def.getTotalIn()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||hasCompressionLevelChanged&&def.getTotalOut()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){_raf.closeEntry();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED){_raf.closeEntry();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){_raf.closeEntry();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){_raf.closeEntry();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflaterdef=entry.getReal();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()==DEFLATED||entry.getEntryType()==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363if(entry.getMethod()!=DEFLATED){def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportError("Cannotclosedeflatedentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportError("Currententrynotfound:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363_reportUndeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363Deflater<String>def=entry.getDelimiter();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getTotalIn()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.isEnabled(Feature.QUOTE_FIELD_NAMES)&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363while(!def.finished()||def.getMethod()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java363entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){def.finish();}
