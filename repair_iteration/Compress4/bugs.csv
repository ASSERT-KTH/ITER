bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if(entry != null) { [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { [BUGGY] if(entry != null) { [BUGGY] throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	335	335	10	replace	
2	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { [BUGGY] [BUGGY] if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	335	335	10	add	
3	[BUG] [BUGGY] cdOffset = written; [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } [BUGGY] cdOffset = written; [BUGGY] for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	339	339	10	replace	
4	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } [BUGGY] [BUGGY] cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	339	339	10	add	
5	[BUG] [BUGGY] for (Iterator i = entries.iterator(); i.hasNext(); ) { [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; [BUGGY] for (Iterator i = entries.iterator(); i.hasNext(); ) { [BUGGY] writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	340	340	10	replace	
6	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; [BUGGY] [BUGGY] for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	340	340	10	add	
7	[BUG] [BUGGY] writeCentralFileHeader((ZipArchiveEntry) i.next()); [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { [BUGGY] writeCentralFileHeader((ZipArchiveEntry) i.next()); [BUGGY] } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	341	341	10	replace	
8	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { [BUGGY] [BUGGY] writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	341	341	10	add	
9	[BUG] [BUGGY] cdLength = written - cdOffset; [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } [BUGGY] cdLength = written - cdOffset; [BUGGY] writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	343	343	10	replace	
10	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } [BUGGY] [BUGGY] cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	343	343	10	add	
11	[BUG] [BUGGY] writeCentralDirectoryEnd(); [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; [BUGGY] writeCentralDirectoryEnd(); [BUGGY] offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	344	344	10	replace	
12	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void finish() throws IOException { if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; [BUGGY] [BUGGY] writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	344	344	10	add	
13	[BUG] [BUGGY] offsets.clear(); [FE] java.io.IOException: central directory is empty [CONTEXT] if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); [BUGGY] offsets.clear(); [BUGGY] entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	345	345	10	replace	
14	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] if(entry != null) { throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); [BUGGY] [BUGGY] offsets.clear(); entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	345	345	10	add	
15	[BUG] [BUGGY] entries.clear(); [FE] java.io.IOException: central directory is empty [CONTEXT] throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); [BUGGY] entries.clear(); [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	346	346	10	replace	
16	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] throw new IOException("This archives contains unclosed entries."); } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); [BUGGY] [BUGGY] entries.clear(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	346	346	10	add	
17	[BUG] [BUGGY] } [FE] java.io.IOException: central directory is empty [CONTEXT] } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	347	347	10	replace	
18	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] } cdOffset = written; for (Iterator i = entries.iterator(); i.hasNext(); ) { writeCentralFileHeader((ZipArchiveEntry) i.next()); } cdLength = written - cdOffset; writeCentralDirectoryEnd(); offsets.clear(); entries.clear(); [BUGGY] [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] finish [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf Iterator i ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	347	347	10	add	
19	[BUG] [BUGGY] if (entry == null) { [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { [BUGGY] if (entry == null) { [BUGGY] return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	354	354	10	replace	
20	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { [BUGGY] [BUGGY] if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	354	354	10	add	
21	[BUG] [BUGGY] return; [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { [BUGGY] return; [BUGGY] } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	355	355	10	replace	
22	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { [BUGGY] [BUGGY] return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	355	355	10	add	
23	[BUG] [BUGGY] long realCrc = crc.getValue(); [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } [BUGGY] long realCrc = crc.getValue(); [BUGGY] crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	358	358	10	replace	
24	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } [BUGGY] [BUGGY] long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	358	358	10	add	
25	[BUG] [BUGGY] crc.reset(); [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); [BUGGY] crc.reset(); [BUGGY]  if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	359	359	10	replace	
26	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); [BUGGY] [BUGGY] crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	359	359	10	add	
27	[BUG] [BUGGY] if (entry.getMethod() == DEFLATED) { [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); [BUGGY] if (entry.getMethod() == DEFLATED) { [BUGGY] def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	361	361	10	replace	
28	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); [BUGGY] [BUGGY] if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	361	361	10	add	
29	[BUG] [BUGGY] def.finish(); [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { [BUGGY] def.finish(); [BUGGY] while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset();  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	362	362	10	replace	
30	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { [BUGGY] [BUGGY] def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset();  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	362	362	10	add	
31	[BUG] [BUGGY] while (!def.finished()) { [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); [BUGGY] while (!def.finished()) { [BUGGY] deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	363	363	10	replace	
32	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void closeArchiveEntry() throws IOException { if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); [BUGGY] [BUGGY] while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	363	363	10	add	
33	[BUG] [BUGGY] deflate(); [FE] java.io.IOException: central directory is empty [CONTEXT] if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { [BUGGY] deflate(); [BUGGY] } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	364	364	10	replace	
34	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] if (entry == null) { return; } long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { [BUGGY] [BUGGY] deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	364	364	10	add	
35	[BUG] [BUGGY] entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); [FE] java.io.IOException: central directory is empty [CONTEXT] long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } [BUGGY] entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); [BUGGY] entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	367	367	10	replace	
36	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } [BUGGY] [BUGGY] entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	367	367	10	add	
37	[BUG] [BUGGY] entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); [FE] java.io.IOException: central directory is empty [CONTEXT] long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); [BUGGY] entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); [BUGGY] entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	368	368	10	replace	
38	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] long realCrc = crc.getValue(); crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); [BUGGY] [BUGGY] entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	368	368	10	add	
39	[BUG] [BUGGY] entry.setCrc(realCrc); [FE] java.io.IOException: central directory is empty [CONTEXT] crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); [BUGGY] entry.setCrc(realCrc); [BUGGY]  def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) + " instead of " [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	replace	
40	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] crc.reset(); if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); [BUGGY] [BUGGY] entry.setCrc(realCrc); def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) + " instead of " [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	369	369	10	add	
41	[BUG] [BUGGY] def.reset(); [FE] java.io.IOException: central directory is empty [CONTEXT] if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); [BUGGY] def.reset(); [BUGGY]  written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) + " instead of " + Long.toHexString(realCrc)); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	replace	
42	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] if (entry.getMethod() == DEFLATED) { def.finish(); while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); [BUGGY] [BUGGY] def.reset(); written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) + " instead of " + Long.toHexString(realCrc)); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	371	371	10	add	
43	[BUG] [BUGGY] written += entry.getCompressedSize(); [FE] java.io.IOException: central directory is empty [CONTEXT] while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); [BUGGY] written += entry.getCompressedSize(); [BUGGY] } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) + " instead of " + Long.toHexString(realCrc)); } if (entry.getSize() != written - dataStart) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	replace	
44	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] while (!def.finished()) { deflate(); } entry.setSize(ZipUtil.adjustToLong(def.getTotalIn())); entry.setCompressedSize(ZipUtil.adjustToLong(def.getTotalOut())); entry.setCrc(realCrc); def.reset(); [BUGGY] [BUGGY] written += entry.getCompressedSize(); } else if (raf == null) { if (entry.getCrc() != realCrc) { throw new ZipException("bad CRC checksum for entry " + entry.getName() + ": " + Long.toHexString(entry.getCrc()) + " instead of " + Long.toHexString(realCrc)); } if (entry.getSize() != written - dataStart) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	373	373	10	add	
45	[BUG] [BUGGY] if (raf != null) { [FE] java.io.IOException: central directory is empty [CONTEXT] } else { /* method is STORED and we used RandomAccessFile */ long size = written - dataStart; entry.setSize(size); entry.setCompressedSize(size); entry.setCrc(realCrc); }   [BUGGY] if (raf != null) { [BUGGY] long save = raf.getFilePointer(); raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } writeDataDescriptor(entry); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	replace	
46	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] } else { /* method is STORED and we used RandomAccessFile */ long size = written - dataStart; entry.setSize(size); entry.setCompressedSize(size); entry.setCrc(realCrc); }   [BUGGY] [BUGGY] if (raf != null) { long save = raf.getFilePointer(); raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } writeDataDescriptor(entry); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	400	400	10	add	
47	[BUG] [BUGGY] writeDataDescriptor(entry); [FE] java.io.IOException: central directory is empty [CONTEXT] if (raf != null) { long save = raf.getFilePointer(); raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } [BUGGY] writeDataDescriptor(entry); [BUGGY] entry = null; } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	410	410	10	replace	
48	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] if (raf != null) { long save = raf.getFilePointer(); raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } [BUGGY] [BUGGY] writeDataDescriptor(entry); entry = null; } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	410	410	10	add	
49	[BUG] [BUGGY] entry = null; [FE] java.io.IOException: central directory is empty [CONTEXT] long save = raf.getFilePointer(); raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } writeDataDescriptor(entry); [BUGGY] entry = null; [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	411	411	10	replace	
50	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] long save = raf.getFilePointer(); raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } writeDataDescriptor(entry); [BUGGY] [BUGGY] entry = null; } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	411	411	10	add	
51	[BUG] [BUGGY] } [FE] java.io.IOException: central directory is empty [CONTEXT] raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } writeDataDescriptor(entry); entry = null; [BUGGY] } [BUGGY]  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	412	412	10	replace	
52	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] raf.seek(localDataStart); writeOut(ZipLong.getBytes(entry.getCrc())); writeOut(ZipLong.getBytes(entry.getCompressedSize())); writeOut(ZipLong.getBytes(entry.getSize())); raf.seek(save); } writeDataDescriptor(entry); entry = null; [BUGGY] [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	412	412	10	add	
53	[BUG] [BUGGY] closeArchiveEntry(); [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { [BUGGY] closeArchiveEntry(); [BUGGY]  entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	417	417	10	replace	
54	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { [BUGGY] [BUGGY] closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	417	417	10	add	
55	[BUG] [BUGGY] entry = ((ZipArchiveEntry) archiveEntry); [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); [BUGGY] entry = ((ZipArchiveEntry) archiveEntry); [BUGGY] entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	419	419	10	replace	
56	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); [BUGGY] [BUGGY] entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	419	419	10	add	
57	[BUG] [BUGGY] entries.add(entry); [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); [BUGGY] entries.add(entry); [BUGGY]  if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }   [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	420	420	10	replace	
58	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); [BUGGY] [BUGGY] entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }   [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	420	420	10	add	
59	[BUG] [BUGGY] if (entry.getMethod() == -1) { // not specified entry.setMethod(method); [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); [BUGGY] if (entry.getMethod() == -1) { // not specified   entry.setMethod(method); [BUGGY] entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	422	423	10	replace	
60	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); [BUGGY] [BUGGY] if (entry.getMethod() == -1) { // not specified   entry.setMethod(method); entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	422	423	10	add	
61	[BUG] [BUGGY] entry.setMethod(method); [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified [BUGGY] entry.setMethod(method); [BUGGY] } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	423	423	10	replace	
62	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified [BUGGY] [BUGGY] entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	423	423	10	add	
63	[BUG] [BUGGY] if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } [BUGGY] if (entry.getTime() == -1) { // not specified   entry.setTime(System.currentTimeMillis()); [BUGGY] entry.setTime(System.currentTimeMillis()); }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" + " STORED method when not writing to a" + " file"); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	426	427	10	replace	
64	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } [BUGGY] [BUGGY] if (entry.getTime() == -1) { // not specified   entry.setTime(System.currentTimeMillis()); entry.setTime(System.currentTimeMillis()); }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" + " STORED method when not writing to a" + " file"); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	426	427	10	add	
65	[BUG] [BUGGY] entry.setTime(System.currentTimeMillis()); [FE] java.io.IOException: central directory is empty [CONTEXT] closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified [BUGGY] entry.setTime(System.currentTimeMillis()); [BUGGY] }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" + " STORED method when not writing to a" + " file"); } if (entry.getCrc() == -1) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	427	427	10	replace	
66	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] closeArchiveEntry(); entry = ((ZipArchiveEntry) archiveEntry); entries.add(entry); if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified [BUGGY] [BUGGY] entry.setTime(System.currentTimeMillis()); }  if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" + " STORED method when not writing to a" + " file"); } if (entry.getCrc() == -1) { [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	427	427	10	add	
67	[BUG] [BUGGY] if (entry.getMethod() == STORED && raf == null) { [FE] java.io.IOException: central directory is empty [CONTEXT] if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  [BUGGY] if (entry.getMethod() == STORED && raf == null) { [BUGGY] if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" + " STORED method when not writing to a" + " file"); } if (entry.getCrc() == -1) { throw new ZipException("crc checksum is required for STORED" + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	431	431	10	replace	
68	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] if (entry.getMethod() == -1) { // not specified entry.setMethod(method); } if (entry.getTime() == -1) { // not specified entry.setTime(System.currentTimeMillis()); }  [BUGGY] [BUGGY] if (entry.getMethod() == STORED && raf == null) { if (entry.getSize() == -1) { throw new ZipException("uncompressed size is required for" + " STORED method when not writing to a" + " file"); } if (entry.getCrc() == -1) { throw new ZipException("crc checksum is required for STORED" + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	431	431	10	add	
69	[BUG] [BUGGY] if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) { [FE] java.io.IOException: central directory is empty [CONTEXT] + " STORED method when not writing to a" + " file"); } if (entry.getCrc() == -1) { throw new ZipException("crc checksum is required for STORED" + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); } [BUGGY] if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) { [BUGGY] def.setLevel(level); hasCompressionLevelChanged = false; } writeLocalFileHeader(entry); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	444	444	10	replace	
70	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] + " STORED method when not writing to a" + " file"); } if (entry.getCrc() == -1) { throw new ZipException("crc checksum is required for STORED" + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); } [BUGGY] [BUGGY] if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) { def.setLevel(level); hasCompressionLevelChanged = false; } writeLocalFileHeader(entry); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	444	444	10	add	
71	[BUG] [BUGGY] writeLocalFileHeader(entry); [FE] java.io.IOException: central directory is empty [CONTEXT] throw new ZipException("crc checksum is required for STORED" + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); } if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) { def.setLevel(level); hasCompressionLevelChanged = false; } [BUGGY] writeLocalFileHeader(entry); [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	448	448	10	replace	
72	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] throw new ZipException("crc checksum is required for STORED" + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); } if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) { def.setLevel(level); hasCompressionLevelChanged = false; } [BUGGY] [BUGGY] writeLocalFileHeader(entry); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	448	448	10	add	
73	[BUG] [BUGGY] } [FE] java.io.IOException: central directory is empty [CONTEXT] + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); } if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) { def.setLevel(level); hasCompressionLevelChanged = false; } writeLocalFileHeader(entry); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	449	449	10	replace	
74	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] + " method when not writing to a file"); } entry.setCompressedSize(entry.getSize()); } if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) { def.setLevel(level); hasCompressionLevelChanged = false; } writeLocalFileHeader(entry); [BUGGY] [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out ArchiveEntry archiveEntry String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD level method long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	449	449	10	add	
75	[BUG] [BUGGY] finish(); [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { [BUGGY] finish(); [BUGGY] if (raf != null) { raf.close(); } if (out != null) { out.close(); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	530	530	10	replace	
76	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { [BUGGY] [BUGGY] finish(); if (raf != null) { raf.close(); } if (out != null) { out.close(); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	530	530	10	add	
77	[BUG] [BUGGY] if (raf != null) { [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { finish(); [BUGGY] if (raf != null) { [BUGGY] raf.close(); } if (out != null) { out.close(); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	531	531	10	replace	
78	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { finish(); [BUGGY] [BUGGY] if (raf != null) { raf.close(); } if (out != null) { out.close(); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	531	531	10	add	
79	[BUG] [BUGGY] if (out != null) { [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { finish(); if (raf != null) { raf.close(); } [BUGGY] if (out != null) { [BUGGY] out.close(); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	534	534	10	replace	
80	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { finish(); if (raf != null) { raf.close(); } [BUGGY] [BUGGY] if (out != null) { out.close(); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	534	534	10	add	
81	[BUG] [BUGGY] } [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { finish(); if (raf != null) { raf.close(); } if (out != null) { out.close(); } [BUGGY] } [BUGGY]  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	537	537	10	replace	
82	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] public void close() throws IOException { finish(); if (raf != null) { raf.close(); } if (out != null) { out.close(); } [BUGGY] [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] close [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	537	537	10	add	
83	[BUG] [BUGGY] int len = def.deflate(buf, 0, buf.length); [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { [BUGGY] int len = def.deflate(buf, 0, buf.length); [BUGGY] if (len > 0) { writeOut(buf, 0, len); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	576	576	10	replace	
84	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { [BUGGY] [BUGGY] int len = def.deflate(buf, 0, buf.length); if (len > 0) { writeOut(buf, 0, len); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	576	576	10	add	
85	[BUG] [BUGGY] if (len > 0) { [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { int len = def.deflate(buf, 0, buf.length); [BUGGY] if (len > 0) { [BUGGY] writeOut(buf, 0, len); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	577	577	10	replace	
86	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { int len = def.deflate(buf, 0, buf.length); [BUGGY] [BUGGY] if (len > 0) { writeOut(buf, 0, len); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	577	577	10	add	
87	[BUG] [BUGGY] writeOut(buf, 0, len); [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { int len = def.deflate(buf, 0, buf.length); if (len > 0) { [BUGGY] writeOut(buf, 0, len); [BUGGY] } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	578	578	10	replace	
88	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { int len = def.deflate(buf, 0, buf.length); if (len > 0) { [BUGGY] [BUGGY] writeOut(buf, 0, len); } } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	578	578	10	add	
89	[BUG] [BUGGY] } [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { int len = def.deflate(buf, 0, buf.length); if (len > 0) { writeOut(buf, 0, len); } [BUGGY] } [BUGGY]  [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	580	580	10	replace	
90	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] protected final void deflate() throws IOException { int len = def.deflate(buf, 0, buf.length); if (len > 0) { writeOut(buf, 0, len); } [BUGGY] [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] deflate [RETURN_TYPE] void  [VARIABLES] ZipEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comment encoding n name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf boolean b fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	580	580	10	add	
91	[BUG] [BUGGY] boolean encodable = zipEncoding.canEncode(ze.getName()); [FE] java.io.IOException: central directory is empty [CONTEXT] protected void writeLocalFileHeader(ZipArchiveEntry ze) throws IOException { [BUGGY] boolean encodable = zipEncoding.canEncode(ze.getName()); [BUGGY]  final ZipEncoding entryEncoding; if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } ByteBuffer name = entryEncoding.encode(ze.getName()); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	589	589	10	replace	
92	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] protected void writeLocalFileHeader(ZipArchiveEntry ze) throws IOException { [BUGGY] [BUGGY] boolean encodable = zipEncoding.canEncode(ze.getName()); final ZipEncoding entryEncoding; if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } ByteBuffer name = entryEncoding.encode(ze.getName()); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	589	589	10	add	
93	[BUG] [BUGGY] if (!encodable && fallbackToUTF8) { [FE] java.io.IOException: central directory is empty [CONTEXT] protected void writeLocalFileHeader(ZipArchiveEntry ze) throws IOException { boolean encodable = zipEncoding.canEncode(ze.getName()); final ZipEncoding entryEncoding; [BUGGY] if (!encodable && fallbackToUTF8) { [BUGGY] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } ByteBuffer name = entryEncoding.encode(ze.getName()); if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) { if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	593	593	10	replace	
94	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] protected void writeLocalFileHeader(ZipArchiveEntry ze) throws IOException { boolean encodable = zipEncoding.canEncode(ze.getName()); final ZipEncoding entryEncoding; [BUGGY] [BUGGY] if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } ByteBuffer name = entryEncoding.encode(ze.getName()); if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) { if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	593	593	10	add	
95	[BUG] [BUGGY] entryEncoding = zipEncoding; [FE] java.io.IOException: central directory is empty [CONTEXT] if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { [BUGGY] entryEncoding = zipEncoding; [BUGGY] } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	596	596	10	replace	
96	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { [BUGGY] [BUGGY] entryEncoding = zipEncoding; } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	596	596	10	add	
97	[BUG] [BUGGY] ByteBuffer name = entryEncoding.encode(ze.getName()); [FE] java.io.IOException: central directory is empty [CONTEXT] boolean encodable = zipEncoding.canEncode(ze.getName()); final ZipEncoding entryEncoding; if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } [BUGGY] ByteBuffer name = entryEncoding.encode(ze.getName()); [BUGGY]  if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) { if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable) { ze.addExtraField(new UnicodePathExtraField(ze.getName(), name.array(), name.arrayOffset(), name.limit())); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	599	599	10	replace	
98	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] boolean encodable = zipEncoding.canEncode(ze.getName()); final ZipEncoding entryEncoding; if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } [BUGGY] [BUGGY] ByteBuffer name = entryEncoding.encode(ze.getName()); if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) { if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable) { ze.addExtraField(new UnicodePathExtraField(ze.getName(), name.array(), name.arrayOffset(), name.limit())); } [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	599	599	10	add	
99	[BUG] [BUGGY] if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) { [FE] java.io.IOException: central directory is empty [CONTEXT] final ZipEncoding entryEncoding; if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } ByteBuffer name = entryEncoding.encode(ze.getName()); [BUGGY] if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) { [BUGGY]  if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable) { ze.addExtraField(new UnicodePathExtraField(ze.getName(), name.array(), name.arrayOffset(), name.limit())); } String comm = ze.getComment(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	601	601	10	replace	
100	[BUG] [BUGGY] [FE] java.io.IOException: central directory is empty [CONTEXT] final ZipEncoding entryEncoding; if (!encodable && fallbackToUTF8) { entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING; } else { entryEncoding = zipEncoding; } ByteBuffer name = entryEncoding.encode(ze.getName()); [BUGGY] [BUGGY] if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) { if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable) { ze.addExtraField(new UnicodePathExtraField(ze.getName(), name.array(), name.arrayOffset(), name.limit())); } String comm = ze.getComment(); [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy [METHOD] writeLocalFileHeader [RETURN_TYPE] void  ZipArchiveEntry ze [VARIABLES] ZipEncoding entryEncoding zipEncoding UnicodeExtraFieldPolicy ALWAYS NEVER NOT_ENCODEABLE b createUnicodeExtraFields CRC32 crc OutputStream o out String DEFAULT_ENCODING comm comment encoding n name ByteBuffer commentB name int BUFFER_SIZE BYTE_MASK DEFAULT_COMPRESSION DEFLATED DEFLATER_BLOCK_SIZE EFS_FLAG SHORT STORED WORD done fullblocks i len length level method offset zipMethod long cdLength cdOffset dataStart localDataStart realCrc save size written byte[] CFH_SIG DD_SIG EOCD_SIG LFH_SIG LZERO ZERO b buf extra boolean b commentEncodable encodable fallbackToUTF8 hasCompressionLevelChanged useEFS Deflater def RandomAccessFile _raf raf ZipArchiveEntry entry ze List entries Map offsets  	projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java	0.9534625892455924	601	601	10	add	
