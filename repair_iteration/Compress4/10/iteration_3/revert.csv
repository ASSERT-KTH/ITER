projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getKey()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getType()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Entry<K,V>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getKey()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getSource()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entries.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()!=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()>=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getClass()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getParent()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("/")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith(".zip")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getParent()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()==1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getValue()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==DEFLATED||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()!=DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.close()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<2){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("/.zip")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("zip")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("Archive.zip")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("ArchiveEntry.zip")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName().endsWith(".zip")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries!=null||entries.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entries.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.size()>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.size()!=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getType()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getType()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getClass()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()>=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getClass()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getValue()!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(currc==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cerc==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec!=null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED&&entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Entry<K,V>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Entry<K,V>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Entry<K,V>crc=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Entry<K,V>crc=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.isDirectory()||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getName()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getLineno()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length()!=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||def.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length()>=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length()<=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length()==2){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length()==1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||def!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator!=null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getSource()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED&&entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getName()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.isDirectory()||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getParent()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()<=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.size()>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getCompressedSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflate==null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getClass()!=DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getClass()==DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()==DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass()>=DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries!=null||entries.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.isDirectory()||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEnabled()||DEFLATED.equals(entry.getValue())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEnabled()||DEFLATED.equals(entry)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEnabled()||DEFLATED.equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEnabled()||DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEmpty()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getValue()==DEFAULT_COMPRESSION){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.size()!=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.size()<=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().length()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getClass().getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getValue().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getParent()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||def.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.getValue()+"n";
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.getAsString();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.getValue()!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName().endsWith("/")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().startsWith("/")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith(".java")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith(".js")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getMethod().endsWith("/")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getNext()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getKey()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATED&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getCompressedSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getSize()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()!=DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<4){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length>=2){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<3){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length!=2){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getParent()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getType()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getDelimiter()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getSource()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()>1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.size()==1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.size()==1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()==2){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()!=DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().length()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entry.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getKey()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED&&entry.getValue()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getValue()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getKey()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getValue()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getSize()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getValue()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled()&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def.isEnabled()||!def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled()||DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled()&&def.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled()||!def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entry.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(_raf==null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cerc==null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED&&entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getKey()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getCompressedSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED&&entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entries.size()>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED&&entry.getMethod()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED||entry.getMethod()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getMethod()>=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATED||entry.getMethod()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=_deflater.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=createDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater(null);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED&&entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getClass()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()==DEFLATED||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getClass()==DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getAssignedDefinitions();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(currc==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cerc==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.length()!=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getParent()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getName()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getDelimiter()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cerc==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflate==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.getKey()+"n";
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entries.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getNext()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getParent()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.getKey()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crec==null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(currc==null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cerc==null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc!=null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||def.close()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.finished()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||deflate()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.open()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.next()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getClass()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getSource()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater(DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=getDeflater(source);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getName()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry>=null||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getAttributeValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()!=DEFLATED||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()!=DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName().length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==null||entry.getName().length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()!=null||entry.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==null||entry.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entries.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Entry<K,V>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getParent()==DEFLATED||entry.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||entry.getClass()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=def.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("/zip")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("-")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getSource()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().length()!=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflate==null||def.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(creator==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(_raf==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||!def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||!def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.close()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled(this)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled()||DEFLATED<=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName().startsWith("/")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.getConfig();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getSource()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.getType()!=Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.getType()!=Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||entry.getClass()!=DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.enabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getType()==Token.GETPROP){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.size()>=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||entry.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.isDirectory()||DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.isDirectory()||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.isDirectory()||isEnabled(Feature.QUOTE_ENCODING)){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entries==null||entries.isDirectory()||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getEntryType()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()!=DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getParent()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(_raf==null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||entry.getClass()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length==2){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<2||def.length>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||crc.isDirectory()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.canClose()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getValue()!=DEFLATED||entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getCompressedSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getName()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getEntry()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getDelimiter()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getCompressedSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getEntry()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(_raf==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATER_BLOCK_SIZE||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getReturnType()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.open();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=def.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!entries.isEmpty()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()!=DEFLATED||entry.getMethod()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName()==DEFLATED||entry.getName()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATER_BLOCK_SIZE||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>def=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()>=DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def.isEnabled()||def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(!def.isEnabled()||def.isEnabled()){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getName()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getContent()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=_deflater.deserialize();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflaterdef=_deflater.deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflater==null||crc.length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entries.size()!=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEnabled()||DEFLATED.equals(entry.getKey())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.isEnabled()||DEFLATER_BLOCK_SIZE>DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Entry<K,V>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName()>=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>def=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<?>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==DEFLATER_BLOCK||entry.getClass()!=DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==DEFLATED||entry.getClass()!=DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getClass()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATED||entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>crc=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflater==null||crc.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entry.getClass()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entry.getClass()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entry.getName().length()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.getName().length()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getReal()==DEFLATED||entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getName()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||crc.isDirectory()||DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflater==null||crc.getValue()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<2||def.length>4){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<2||DEFLATED>DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<2||DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length<1||def.length>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflater==null||crc!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.deflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<K,V>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.isDirectory()||entry.getType()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getValue()==DEFLATER_BLOCK){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>def=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getCompressedSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getType()==DEFLATED||entry.getEntry().getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getEnd()==DEFLATED||entry.getMethod()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(cref==null||crc.getValue()!=null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflater==null||crc.getValue()==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<Object>def=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith(".jpg")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entry.getMethod()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entry.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.length()>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getEnd()==DEFLATED||entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getMethod()==DEFLATED||entry.getSize()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getCompressedSize()==DEFLATED||entry.getValue()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getEnd()==DEFLATED||entry.getValue()==DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entries.size()>=0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(crc==null||crc.getName().length()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entry.getValue()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<String>crc=entry.toString();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry.getEnd()==DEFLATED||entry.getMethod()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def==null||def.getSource()!=DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entry.getName().endsWith("Archive")){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==DEFLATER_BLOCK_SIZE||entry.getClass()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==DEFLATED||entry.getClass()!=DEFLATER_BLOCK_SIZE){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null||entries.size()==1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==null||entries.size()<=1){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354Deflater<T>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry==DEFLATED||entry.getClass()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(entry!=null&&entries.size()==0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null&&def.getMethod()==DEFLATED){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(deflater==null){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null&&def.length()>0){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java354if(def!=null||def.length==0){
