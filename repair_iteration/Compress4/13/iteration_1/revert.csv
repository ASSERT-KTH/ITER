projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359crc.reset();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359crc.close();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=realCrc){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.reset();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){crc.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){crc.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null||realCrc.length()==0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null||realCrc.length()==0){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.setValue(Long.parseLong(realCrc));}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<=0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0||realCrc>DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0||realCrc>0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359longrealCrc=crc.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359crc.closeEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null){crc.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359RectangleEdgecrc=createUnicodeExtraFields(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null||realCrc.length()>=0){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null||realCrc.length()<0){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.set();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.set();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Entry<K,V>entry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<?>entry=createUnicodeExtraFields(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<K,V>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<?>entry=createUnicodeExtraFields(realCrc,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<?>entry=createUnicodeExtraFields.get(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Entry<K,V>entry=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflaterdef=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){crc.set();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){crc.reset();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){crc.reset();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){def.reset();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflatercrc=createUnicodeExtraFields(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflatercrc=createUnicodeExtraField(entry.getMethod(),realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=0){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=0){crc.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=0){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==0){crc.close();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0){def.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.close();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.finish();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=0){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=0){crc.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){def.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){def.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){def.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){crc.finish();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>=DEFLATED){crc.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){crc.finish();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflaterdef=_raf.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflaterdef=_raf.deflate(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflaterdef=_raf.getDeflate(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflaterdef=getDeflater(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflaterdef=getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<String>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){crc.set();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=def.next()){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=0){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0||realCrc>DEFLATER_BLOCK_SIZE){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<0||realCrc>DEFLATER_BLOCK_SIG){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Entryentry=getEntry(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<T>entry=getEntry(realCrc);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<T>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<T>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflater<?>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359Deflaterdef=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED||realCrc==DEFLATED){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED||realCrc!=DEFLATED){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED){crc.delete();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=DEFLATED||realCrc==DEFLATED){crc.reset();}else{def.close();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null){deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<DEFLATED||realCrc>DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<DEFLATED||realCrc>DEFLATER_BLOCK_SIZE){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==DEFLATED||realCrc!=DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null||realCrc.length()==0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null||realCrc.length()<0){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==null||realCrc.length<2){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null||realCrc.length()>0){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=null||realCrc.length<2){crc.reset();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc==realCrc){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=def){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc!=def.getRealCrc()){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc>DEFLATED){crc.reset();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<DEFLATED){deflate();}else{deflate();}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java359if(realCrc<DEFLATED){crc.close();}
