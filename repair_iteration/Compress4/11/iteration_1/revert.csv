projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355return;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("".equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error,");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error?");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()mustnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry(),");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("".getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getSimpleName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logError("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+fileName);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("".equals(entry.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getMethod());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getLine());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIZE,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",DEFLATER_BLOCK_SIZE);
