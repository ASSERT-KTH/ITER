projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355return;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("".equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error,");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error?");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()mustnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry(),");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("".getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getSimpleName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logError("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+fileName);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("".equals(entry.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getMethod());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getLine());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIZE,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(def,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry.getMethod(),DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry.getName(),DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,DEFLATER_BLOCK_SIG,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicyclosed.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicyclosed",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicyclosed:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicyclosed:"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+this);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+DUPLICATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry,DEFLATER_BLOCK_SIG,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry.getMethod(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATED,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(def,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIZE,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(def,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+BUFFER_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+DEFLATER_BLOCK_SIZE,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentryentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.getShortValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.getRawClass();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getLine());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+this);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",BUFFER_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",BYTE_MASK);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException(""+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("Failedtocloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("Cannotcloseentryentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewRuntimeException("").equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewRuntimeException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewRuntimeException("").equals(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entries.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getCrc();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getRawClass();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.getSimpleName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalStateException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalStateException("").equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException(""+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalStateException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("Failedtocloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()mustnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()cannotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()doesnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()didnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull!");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getRawClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.Pleasetryagain.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.Pleasereportthiserror.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.Pleasereportthiserror:");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()mustnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()didnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull!");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Cannotcloseentry:"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Sourceentrynotfound:"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry(),error);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry(),def,");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getRawClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:n"+DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+name);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+DEFLATER_BLOCK_SIZE,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("Failedtocloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields(entry.getMethod(),DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("".equals(entry.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields(entry.getMethod(),entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("".equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("".getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("".equals(entry.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("".equals(entry.getClass()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+DEFAULT_ENCODING);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+name,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException(""+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("").equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException(""+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("").equals(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry.getMethod(),DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entry.getName(),DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error".getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error!");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getSimpleName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getName()+"n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getRawClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException(""+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("").equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("Failedtocloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed"+name,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getMethod();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getShortValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("Failedtocloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("Failedtocloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("Failedtocloseentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entries.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getAstRoot();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",null);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error,"+"n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("Failedtocloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("UnicodeExtraFieldPolicy.closeArchiveEntry()"));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("Failedtocloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("".equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_deflate("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()didnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()doesnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.getEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.getValue()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+fileName,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+fileName,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getRawParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+def.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED||entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getMethod());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getName());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getKey());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getSourceName());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getValue());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getClass());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException(""+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalStateException("").equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalStateException("".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("Failedtocloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicyclosed.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicyclosed",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicyclosed:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicyclosed:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicyclosed"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null,");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null!");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.getKey()-1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()mustnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()cannotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()doesnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()mustnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()didnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()doesnotexist.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull!");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException(""+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("").equals(entry.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("").equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException(""+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("").equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("").equals(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:n"+DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getKey()+"n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(false);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(true);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(null);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=null;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getCrc();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getRaw();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getRawParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()doesn'tbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getShortValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()didnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()doesnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()couldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()doesnotexist.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getSimpleName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("").equals(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("").equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+name,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+comment);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+name,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getShortValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error.",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Cannotcloseentry:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getKey()+"n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logWarning("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logError("UnicodeExtraFieldPolicyclosed.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logError("UnicodeExtraFieldPolicyclosed:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logError("UnicodeExtraFieldPolicyclosed:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logError("UnicodeExtraFieldPolicyclosed",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getRawName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getFullName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED:");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED:"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry(),shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():"+entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("".equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getPath());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getRawDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("Cannotcloseentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+input);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_logError("CurrententrynotimplementedbyDEFLATED");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("CurrententrynotimplementedbyDEFLATED");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getLine());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.TryclosingtheDEFLATEDfile.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error",encoding);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error,shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error,couldnotbedeflated");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull!");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getFullName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(null,DEFLATER_BLOCK_SIG,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getCrc();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getRawParent();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:n"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+source);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()!=DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getMethod());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED||entry.getMethod()!=DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getMethod());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException(""+entry.getMethod());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()!=DEFLATED){thrownewIOException("");}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATED,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entries.getKey();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException(""+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("'"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("Cannotcloseentry:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("'"+entry.getMethod()+"'hassideeffectsandcannotbedeflated.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("'"+entry.getMethod()+"'hassideeffectsandcannotberemoved");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+input);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report("UnicodeExtraFieldPolicy.closeArchiveEntry()error");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentryentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_verifyValueWrite("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_log("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355IOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIZE,def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(null,DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getDeflater();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getValue()+1;
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null",def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():DEFLATED");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("Cannotcloseentry:"+entry.getSourceName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentry:"+entry.getFullName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>def=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entry.getCrc();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("Cannotcloseentry:"+entry.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed","Noentriesfound.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed","Deflatedentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException(",UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".+"n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:n"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getDeprecated();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("".equals(entry.getMethod())?DEFLATED:DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("".equals(enabled)?DEFLATED:DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException(""));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException(""));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("".equals(entry.getValue()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("")
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("]");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("UnicodeExtraFieldPolicyclosed"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Cannotcloseentry:"+entry.getSourceName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_throwAsIOException("UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report(JSError.make("UnicodeExtraFieldPolicyclosed"));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_report(JSError.make(source,DEFLATED));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentryentry:"+entry.getMethod());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getReference();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("Cannotcloseentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("Cannotcloseentryentry:"+entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate(DEFLATED,"UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+source);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(null,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:n"+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("Cannotcloseentryentry:"+entry.getFullName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error?",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error?",def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error?",entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=_entry.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.next();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entry.getAnchor();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entries,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entries.getValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entries.get(entry.getValue());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355if(entry.getMethod()==DEFLATED){thrownewIOException("Cannotcloseentry:"+entry.getSource());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(entries,DEFLATER_BLOCK_SIG,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(def,DEFLATER_BLOCK_SIG,DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","DefLATER_BLOCK_SIZEisnotsupported.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","DefLATER_BLOCK_SIZEisnotsupported");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","DefLATER_BLOCK_SIZEshouldnotbedeflated.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("UnicodeExtraFieldPolicy.closeArchiveEntry():entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("UnicodeExtraFieldPolicy.closeArchiveEntry():entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("UnicodeExtraFieldPolicy.closeArchiveEntry():null");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error:"+"n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>crc=entry.getDeflate();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("").equals(entry.getMethod());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("").equals(entry.getMethod()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException(""+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("".equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getReferenceName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIZE,DEFLATER_COMPRESSION);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException("".equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewRuntimeException(""+entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("Crcentryhasbeenclosed.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("UnicodeExtraFieldPolicy.closeArchiveEntry():null");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entries.get(0);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>entry=entries.get(entry.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.Tryclosingtheentry.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.Tryagain.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed.TryclosingtheDEFLATEDmethod.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<T>def=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF(":UnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportInvalidEOF("nUnicodeExtraFieldPolicyclosed");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<?>crc=entries.get(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()needstobenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(DEFLATER_BLOCK_SIG,DEFLATER_COMPRESSION);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+def.toString());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<?>crc=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("Crcentryhasbeenclosed.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("Crcentryisnotimplementedbydefault");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("Crcentryisnotimplementedbydefault.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("Crcentrynotfound:'");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalStateException("")
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Cannotclosetheentryentry.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Deflatedentry:"+DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Deflatedentry:"+def);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getSimpleName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()n");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Entry<K,V>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("").equals(entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbedeflated.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIOException("UnicodeExtraFieldPolicy.closeEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("").equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("Cannotcloseentryentry:"+entry.getKey());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalStateException("Cannotcloseentryentry:"+entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+DEFAULT_ENCODING);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".equals(entry.getName()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull".);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<String>def=entry.getSimpleName();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_throwUndeflate("UnicodeExtraFieldPolicy.closeArchiveEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355ThrownewIOException("Cannotcloseentryentry:"+entry.getClass());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentryentry:"+entry.getPath());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed","Noentriesavailable.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.clone();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.remove();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=newArrayList<UnicodeExtraFieldPolicy>();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=newLinkedList<UnicodeExtraFieldPolicy>();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355createUnicodeExtraFields=getUnicodeExtraFields(DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportUnicodeExtraFields(deFLATER_BLOCK_SIG,DEFLATER_BLOCK_SIG);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<ZipArchiveEntry>crc=entry.getDataStart();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATEDORDERBYTE_MASK");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED",DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATED",DEFLATED);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbydeFLATED");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("CurrententrynotimplementedbyDEFLATEDorDEFLATED");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry():null",DEFLATER_BLOCK_SIZE);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("Currententrynotfound:"+def.getName());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry.getMessage());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Noentriesfound.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicy.closeArchiveEntry()error","Cannotcloseentry:{0}");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355_reportError("UnicodeExtraFieldPolicyclosed:"+entry);
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("")
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIllegalArgumentException("".equals(comment));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<K,V>crc=entry.getAssignedValue();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIOException("Cannotcloseentry:"+entry.getPath());
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355newIllegalArgumentException("").equals(entry.getKey()));
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeEntry()shouldnotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Throwables.thrownewIOException("UnicodeExtraFieldPolicy.closeArchiveEntry()cannotbenull.");
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.openArchiveEntry();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355Deflater<Object>crc=entry.getData();
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java355thrownewIllegalArgumentException("").equals(entry.getMethod()));
