projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=entries.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();writeCentralDirectoryEnd(entry.getValue());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347if(offsets!=null){for(Iteratori=offsets.iterator();i.hasNext();){writeCentralFileHeader(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=entries.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();writeCentralDirectoryEnd(entry.getKey());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratorit=offsets.iterator();it.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)it.next();if(entry.getName().equals(cdLength)){continue;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratorit=offsets.iterator();it.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)it.next();if(entry.getName().equals(comment)){continue;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getValue().equals(cdLength)&&
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getValue().equals(cdLength)){continue;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347if(entries!=null){for(Iteratori=entries.iterator();i.hasNext();){writeCentralFileHeader(i.next());}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getValue().equals(entry.getValue())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getMethod().equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=entries.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getMethod().equals(entry.getMethod())){
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getMethod().equals(entry.getMethod
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getMethod().equals(entry.getMethod())){return;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getMethod().equals(entry.getMethod())){continue;}
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getMethod().equals(entry.getMethod())
projects/Compress4/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java347for(Iteratori=offsets.iterator();i.hasNext();){ZipArchiveEntryentry=(ZipArchiveEntry)i.next();if(entry.getName().equals(entry.getName())){
