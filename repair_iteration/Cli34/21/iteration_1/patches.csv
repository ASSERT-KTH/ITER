bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasOptionalArg())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg())  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  if(hasArgs()  &&  getValueSeparator()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  &&  getValueSeparator()!=  null)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  getValueSeparator()!=  null)  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  if(hasArgs()  ||  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  ||  hasOptionalArg())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  hasOptionalArg())  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  if(hasArgs()  ||  hasNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  ||  hasNumberOfArgs())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  hasNumberOfArgs())  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
6	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  if(hasValueSeparator()  ||  hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasValueSeparator()  ||  hasOptionalArg)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  ||  hasOptionalArg)  {	  if(hasValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
8	[BUG]  [BUGGY]  if(hasOptionalArg()  ||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasOptionalArg()  ||  hasArg)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  ||  hasArg)  {	  if(hasValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
9	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().size()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().size()  -  1;  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs().size()  -  1;	      int    numberOfArgs    =    getNumberOfArgs().size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().size()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().size()  +  1;  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs().size()  +  1;	      int    numberOfArgs    =    getNumberOfArgs().size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  char  numberOfArgs  =  getNumberOfArgs().size();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    {      [BUGGY]  char  numberOfArgs  =  getNumberOfArgs().size();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  getNumberOfArgs().size();	      int    numberOfArgs    =    getNumberOfArgs().size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  String  argName  =  getDescription();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  argName  =  getDescription();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getDescription();	      String    argName    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  String  argName  =  getValueName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  argName  =  getValueName();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getValueName();	      String    argName    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  String  argName  =  getSimpleArgName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  argName  =  getSimpleArgName();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getSimpleArgName();	      String    argName    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(hasArg()  &&  hasArgValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  hasArgValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasArgValueSeparator())  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  if(hasArg()  ||  hasArgName())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  ||  hasArgName())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasArgName())  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  if(hasArg()  &&  hasArgName())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  hasArgName())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasArgName())  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  if(hasArg()  &&  isDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  isDescriptionVarArgs())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isDescriptionVarArgs())  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  String  value  =  getValue().trim();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getValue().trim();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().trim();	      String    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  String  value  =  getValue().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getValue().toLowerCase();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().toLowerCase();	      String    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  String  value  =  getValue().toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getValue().toString();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().toString();	      String    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  -  1;  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs()  -  1;	      int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  +  1;  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs()  +  1;	      int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  char  numberOfArgs  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  char  numberOfArgs  =  getNumberOfArgs();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  getNumberOfArgs();	      int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =(String)this.values.get(index  -  1);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index  -  1);	      String    value    =(String)this.values.get(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =(String)this.values.get(index  +  1);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index  +  1);	      String    value    =(String)this.values.get(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  String  value  =(String)this.values.get(0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =(String)this.values.get(0);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(0);	      String    value    =(String)this.values.get(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  String  value  =  getValueSeparator().toLowerCase();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getValueSeparator().toLowerCase();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueSeparator().toLowerCase();	      String    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  String  value  =  getValueSeparator().trim();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getValueSeparator().trim();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueSeparator().trim();	      String    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(getValueSeparator());  }	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
32	[BUG]  [BUGGY]  Iterator  <  String>  it  =  values.iterator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  Iterator  <  String>  it  =  values.iterator();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Iterator  <  String>  it  =  values.iterator();	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  length;  ++i)  {  values.add(getValueSeparator());  }	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  int  numberOfArgs  =  values.size();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  values.size();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  values.size();	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  this.values.add(value);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  this.values.add(value);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.add(value);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  if(getValueSeparator()  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(getValueSeparator()  >  0)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  >  0)  {	  if(getValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  if(getNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(getNumberOfArgs())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getNumberOfArgs())  {	  if(getValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  if(getArgName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(getArgName())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName())  {	  if(getValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  String  sep  =  getValueSeparator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  sep  =  getValueSeparator();  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  sep  =  getValueSeparator();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  numberOfArgs));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.make(numberOfArgs,  numberOfArgs));  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  numberOfArgs));	      if(values    ==    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs));  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs));	      if(values    ==    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.make(numberOfArgs,  0);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  if(hasArg()  &&  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  hasValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasValueSeparator())  {	  if(hasValueSeparator()    &&    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  if(hasArg()  &&  hasValueSeparator)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  hasValueSeparator)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasValueSeparator)  {	  if(hasValueSeparator()    &&    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  if(hasArg()  &&  isValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  isValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isValueSeparator())  {	  if(hasValueSeparator()    &&    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	      if(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	      if(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
48	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }	      if(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
49	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  value);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.make(numberOfArgs,  value);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  value);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  value,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.make(numberOfArgs,  value,  null);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  value,  null);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportError( "Missing  value: "  +  value);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  if(hasValueSeparator()  ||  hasArg())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasValueSeparator()  ||  hasArg())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  ||  hasArg())  {	  if(hasArg()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  if(hasArg()  ||  hasNullValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  ||  hasNullValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasNullValueSeparator())  {	  if(hasArg()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  if(hasArg()  &&  getValueSeparator()!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  getValueSeparator()!=  null)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  getValueSeparator()!=  null)  {	  if(hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  if(hasArg()  &&  getValueSeparator()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  getValueSeparator()  ==  null)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  getValueSeparator()  ==  null)  {	  if(hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  ==  null);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.checkArgument(values  ==  null);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  ==  null);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values!=  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.checkArgument(values!=  null);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values!=  null);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().length;  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs().length;	      int    numberOfArgs    =    getNumberOfArgs().size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  if(hasArg()  ||  hasArgValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  ||  hasArgValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasArgValueSeparator())  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
61	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
62	[BUG]  [BUGGY]  if(getValueSeparator()  ||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(getValueSeparator()  ||  hasArg)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  ||  hasArg)  {	  if(hasValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
63	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
64	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs!=  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs!=  UNLIMITED_VALUES);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs!=  UNLIMITED_VALUES);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  Integer  value  =  getValueSeparator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  Integer  value  =  getValueSeparator();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getValueSeparator();	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportUnsupportedOperation();	      if(values    ==    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  ValueUtils.checkArgument(values[i]  ==  null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  ValueUtils.checkArgument(values[i]  ==  null);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	ValueUtils.checkArgument(values[i]  ==  null);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  ValueUtils.checkArgument(values[i]!=  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  ValueUtils.checkArgument(values[i]!=  null);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	ValueUtils.checkArgument(values[i]!=  null);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  value.append( ", ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {      [BUGGY]  value.append( ", ");  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	value.append( ", ");	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
71	[BUG]  [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  if(hasArg()  ||  hasNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  ||  hasNumberOfArgs())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasNumberOfArgs())  {	  if(hasArg()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  String  argName  =  getArgName()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  argName  =  getArgName()  +  1;  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  +  1;	      String    argName    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  String  argName  =  getArgName()  + "n ";  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  argName  =  getArgName()  + "n ";  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + "n ";	      String    argName    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
77	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "+getArgName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  argName  =  getArgName()  + ": "+getArgName();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "+getArgName();	      String    argName    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  String  value  =  getArgName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getArgName();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getArgName();	      String    value    =    getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs);	      int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
80	[BUG]  [BUGGY]  Integer  value  =  getValue(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  Integer  value  =  getValue(numberOfArgs);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getValue(numberOfArgs);	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('n');  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  value.indexOf('n');  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('n');	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  String  value  =  getValueName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getValueName();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueName();	      String    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  String  value  =  getValue(null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getValue(null);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue(null);	      String    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  if(hasArg)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg)  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg)  {	  if(getValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
85	[BUG]  [BUGGY]  if(hasArg  &&  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg  &&  hasValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  hasValueSeparator())  {	  if(hasValueSeparator()    &&    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
86	[BUG]  [BUGGY]  if(hasArg  ||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg  ||  hasValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  ||  hasValueSeparator())  {	  if(hasValueSeparator()    &&    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  int  numberOfArgs  =  getValueSeparator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getValueSeparator();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getValueSeparator();	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
88	[BUG]  [BUGGY]  if(hasValue()  ||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasValue()  ||  hasValueSeparator())  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValue()  ||  hasValueSeparator())  {	  if(hasArg()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
89	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "  +  getMessage();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  argName  =  getArgName()  + ": "  +  getMessage();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "  +  getMessage();	      String    argName    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  if(hasArgs()  &&(values.size()  >  0)||(values.contains(argName)))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArgs()  &&(values.size()  >  0)||(values.contains(argName)))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&(values.size()  >  0)||(values.contains(argName)))  {	  if(hasArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('.');  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  value.indexOf('.');  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('.');	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
93	[BUG]  [BUGGY]  String  value  =  getDescription();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =  getDescription();  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getDescription();	      String    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
94	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
95	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  if(hasArg()  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
96	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('_');  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  value.indexOf('_');  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('_');	      if(values    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    String    value    =    getValueSeparator();    if(value!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
97	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index++);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {      [BUGGY]  String  value  =(String)this.values.get(index++);  [BUGGY]    if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index++);	      String    value    =(String)this.values.get(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]    {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
