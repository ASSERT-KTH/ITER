bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hasArg())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  {    [BUGGY]  if(hasArg())  {  [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg())  {	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
2	[BUG]  [BUGGY]  if(hasArg()  ||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  {    [BUGGY]  if(hasArg()  ||  hasValueSeparator())  {  [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasValueSeparator())  {	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
3	[BUG]  [BUGGY]  if(hasArgs())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  {    [BUGGY]  if(hasArgs())  {  [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs())  {	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
4	[BUG]  [BUGGY]  if(hasValueSeparator()  &&  hasArg)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  {    [BUGGY]  if(hasValueSeparator()  &&  hasArg)  {  [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  &&  hasArg)  {	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  {    [BUGGY]    [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	  	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
6	[BUG]  [BUGGY]    int  numberOfArgs  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  {    [BUGGY]    int  numberOfArgs  =  getNumberOfArgs();  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    int  numberOfArgs  =  getNumberOfArgs();		non-compiled	[CE]  illegal  start  of  expression	43	None	add
7	[BUG]  [BUGGY]    String  argName  =  getArgName();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  {    [BUGGY]    String  argName  =  getArgName();  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    String  argName  =  getArgName();		non-compiled	[CE]  illegal  start  of  expression	43	None	add
8	[BUG]  [BUGGY]    String  value  =  getValueSeparator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  {    [BUGGY]    String  value  =  getValueSeparator();  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    String  value  =  getValueSeparator();		non-compiled	[CE]  illegal  start  of  expression	43	None	add
9	[BUG]  [BUGGY]    String  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  {    [BUGGY]    String  value  =  getValue();  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    String  value  =  getValue();		non-compiled	[CE]  illegal  start  of  expression	43	None	add
10	[BUG]  [BUGGY]    int  numberOfArgs  =  getNumberOfArgs().size();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  {    [BUGGY]    int  numberOfArgs  =  getNumberOfArgs().size();  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    int  numberOfArgs  =  getNumberOfArgs().size();		non-compiled	[CE]  illegal  start  of  expression	43	None	add
11	[BUG]  [BUGGY]  if(hasArgName())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  {    [BUGGY]  if(hasArgName())  {  [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgName())  {	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
12	[BUG]  [BUGGY]  if(getValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  {    [BUGGY]  if(getValueSeparator())  {  [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator())  {	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
13	[BUG]  [BUGGY]    String  value  =(String)this.values.get(index);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  {    [BUGGY]    String  value  =(String)this.values.get(index);  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    String  value  =(String)this.values.get(index);		non-compiled	[CE]  illegal  start  of  expression	43	None	add
14	[BUG]  [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  String  value  =  getValueSeparator();  if(value!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  {    [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  String  value  =  getValueSeparator();  if(value!=  null)  {  return;  }  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  String  value  =  getValueSeparator();  if(value!=  null)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	43	None	add
15	[BUG]  [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  String  value  =  getValueSeparator();  if(value!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  {    [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  String  value  =  getValueSeparator();  if(value!=  null)  {  return;  }  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  String  value  =  getValueSeparator();  if(value!=  null)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	43	None	add
16	[BUG]  [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  {    [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }		non-compiled	[CE]  illegal  start  of  expression	43	None	add
17	[BUG]  [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  {    [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }		non-compiled	[CE]  illegal  start  of  expression	43	None	add
18	[BUG]  [BUGGY]    if(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  {    [BUGGY]    if(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    if(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }		non-compiled	[CE]  illegal  start  of  expression	43	None	add
19	[BUG]  [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  {    [BUGGY]    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }  [BUGGY]  if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	    if(values  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }		non-compiled	[CE]  illegal  start  of  expression	43	None	add
20	[BUG]  [BUGGY]  if(hasValueSeparator()  ||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  {    [BUGGY]  if(hasValueSeparator()  ||  hasArg)  {  [BUGGY]  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  ||  hasArg)  {	if  (hasValueSeparator())  {  	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
