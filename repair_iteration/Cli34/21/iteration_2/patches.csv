bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.values.add(getValueSeparator());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  this.values.add(getValueSeparator());  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.add(getValueSeparator());	  this.values.add(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2	[BUG]  [BUGGY]  this.values.add(value,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  this.values.add(value,  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.add(value,  null);	  this.values.add(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
3	[BUG]  [BUGGY]  this.values.add(this.value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  this.values.add(this.value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.add(this.value);	  this.values.add(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
4	[BUG]  [BUGGY]  String  argName  =  getDescription().toLowerCase();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getDescription().toLowerCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getDescription().toLowerCase();	  String    argName    =    getDescription();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  String  argName  =  getDescription().toString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getDescription().toString();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getDescription().toString();	  String    argName    =    getDescription();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  String  value  =  getValue().toString()  + "n ";  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().toString()  + "n ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().toString()  + "n ";	  String    value    =    getValue().toString();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
7	[BUG]  [BUGGY]  if(hasArg  ||  hasNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  ||  hasNumberOfArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  ||  hasNumberOfArgs())  {	  if(hasArg    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
8	[BUG]  [BUGGY]  if(hasArg  ||  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  ||  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  ||  hasOptionalArg())  {	  if(hasArg    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
9	[BUG]  [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
10	[BUG]  [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
11	[BUG]  [BUGGY]  if(hasArg  ||  hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  ||  hasOptionalArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  ||  hasOptionalArg)  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
12	[BUG]  [BUGGY]  if(hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg)  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
13	[BUG]  [BUGGY]  if(hasArg  &&  hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  hasOptionalArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  hasOptionalArg)  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
14	[BUG]  [BUGGY]  if(hasMoreArgs)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasMoreArgs)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasMoreArgs)  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
15	[BUG]  [BUGGY]  if(hasArg()  ||  getValueSeparator()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  getValueSeparator()!=  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  getValueSeparator()!=  null)  {	  if(hasArg()    &&    getValueSeparator()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
16	[BUG]  [BUGGY]  if(hasArg()  ||  getValueSeparator()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  getValueSeparator()  ==  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  getValueSeparator()  ==  null)  {	  if(hasArg()    &&    getValueSeparator()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
17	[BUG]  [BUGGY]  if(getValueSeparator()  ||  hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getValueSeparator()  ||  hasOptionalArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  ||  hasOptionalArg)  {	  if(getValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
18	[BUG]  [BUGGY]  if(hasArg  ||  getValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  ||  getValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  ||  getValueSeparator())  {	  if(getValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
19	[BUG]  [BUGGY]  if(getNumberOfArgs()  ||  getValueSeparator()  ||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getNumberOfArgs()  ||  getValueSeparator()  ||  hasArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getNumberOfArgs()  ||  getValueSeparator()  ||  hasArg)  {	  if(getValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
20	[BUG]  [BUGGY]  if(hasArg()  ||  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasOptionalArg())  {	  if(hasArgs()    ||    hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  if(hasArg()  &&  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasOptionalArg())  {	  if(hasArgs()    ||    hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  if(hasArgs()  &&  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  &&  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  hasOptionalArg())  {	  if(hasArgs()    ||    hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
24	[BUG]  [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
25	[BUG]  [BUGGY]  Integer  value  =  getValue(numberOfArgs,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  value  =  getValue(numberOfArgs,  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getValue(numberOfArgs,  1);	  Integer    value    =    getValue(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
26	[BUG]  [BUGGY]  Integer  value  =  getValue(numberOfArgs  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  value  =  getValue(numberOfArgs  -  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getValue(numberOfArgs  -  1);	  Integer    value    =    getValue(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
27	[BUG]  [BUGGY]  Integer  value  =  getValue(numberOfArgs,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  value  =  getValue(numberOfArgs,  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getValue(numberOfArgs,  0);	  Integer    value    =    getValue(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
28	[BUG]  [BUGGY]  Integer  value  =  getValue(values);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  value  =  getValue(values);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getValue(values);	  Integer    value    =    getValue(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
29	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  0));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0));	  AssertionFailedError.make(numberOfArgs,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
30	[BUG]  [BUGGY]  AssertionFailedError.make(this,  numberOfArgs));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(this,  numberOfArgs));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(this,  numberOfArgs));	  AssertionFailedError.make(numberOfArgs,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
31	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  1);	  AssertionFailedError.make(numberOfArgs,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
32	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  1));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  1));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  1));	  AssertionFailedError.make(numberOfArgs,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
33	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  /  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs()  /  1;	  int    numberOfArgs    =    getNumberOfArgs()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
34	[BUG]  [BUGGY]  if(hasArg()  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(hasArg()    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
35	[BUG]  [BUGGY]  if(hasArg()  &&  hasNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  hasNumberOfArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasNumberOfArgs())  {	  if(hasArgs()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  if(hasArgs()  &&  hasNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  &&  hasNumberOfArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  hasNumberOfArgs())  {	  if(hasArgs()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index  -  1  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(index  -  1  +  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index  -  1  +  1);	  String    value    =(String)this.values.get(index    -    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
38	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs();  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  numberOfArgs  =  getNumberOfArgs();	  int    numberOfArgs    =    getNumberOfArgs();    if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
39	[BUG]  [BUGGY]  Number  numberOfArgs  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Number  numberOfArgs  =  getNumberOfArgs();  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Number  numberOfArgs  =  getNumberOfArgs();	  int    numberOfArgs    =    getNumberOfArgs();    if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
40	[BUG]  [BUGGY]  String  value  =  getValueSeparator().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValueSeparator().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueSeparator().toLowerCase(Locale.ENGLISH);	  String    value    =    getValueSeparator().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
41	[BUG]  [BUGGY]  String  value  =  getValueSeparator().toUpperCase();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValueSeparator().toUpperCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueSeparator().toUpperCase();	  String    value    =    getValueSeparator().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
42	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  length;  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  length;  ++i)  {  value.append(',');  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  length;  ++i)  {  value.append(',');  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  String  argName  =  getSimpleName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getSimpleName();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getSimpleName();	  String    argName    =    getValueName();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  >=  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values  >=  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  >=  null);	  AssertionFailedError.checkArgument(values!=    null);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
47	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  >>  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values  >>  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  >>  null);	  AssertionFailedError.checkArgument(values!=    null);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
48	[BUG]  [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
49	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
50	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasValueSeparator())  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
51	[BUG]  [BUGGY]  if(hasArg()  ||  isValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  isValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  isValueSeparator())  {	  if(hasArg()    &&    isValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
52	[BUG]  [BUGGY]  if(hasValueSeparator()  &&  isValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValueSeparator()  &&  isValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  &&  isValueSeparator())  {	  if(hasArg()    &&    isValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
53	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
54	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasValueSeparator())  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
55	[BUG]  [BUGGY]  String  numberOfArgs  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  numberOfArgs  =  getNumberOfArgs();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  numberOfArgs  =  getNumberOfArgs();	  char    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
56	[BUG]  [BUGGY]  string  numberOfArgs  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  string  numberOfArgs  =  getNumberOfArgs();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	string  numberOfArgs  =  getNumberOfArgs();	  char    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  AssertionFailedError.make(value,  numberOfArgs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(value,  numberOfArgs);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(value,  numberOfArgs);	  AssertionFailedError.make(numberOfArgs,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
58	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  lengthOpt,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  lengthOpt,  value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  lengthOpt,  value);	  AssertionFailedError.make(numberOfArgs,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
59	[BUG]  [BUGGY]  AssertionFailedError.make(this,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(this,  value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(this,  value);	  AssertionFailedError.make(numberOfArgs,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
60	[BUG]  [BUGGY]  AssertionFailedError.make(this.values,  value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(this.values,  value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(this.values,  value);	  AssertionFailedError.make(numberOfArgs,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
61	[BUG]  [BUGGY]  if(getValueSeparator()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getValueSeparator()  ==  0)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  ==  0)  {	  if(getValueSeparator()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
62	[BUG]  [BUGGY]  if(getValueSeparator()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getValueSeparator()!=  0)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()!=  0)  {	  if(getValueSeparator()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
63	[BUG]  [BUGGY]  if(getValueSeparator()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getValueSeparator()  >=  0)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  >=  0)  {	  if(getValueSeparator()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
64	[BUG]  [BUGGY]  if(hasArg()  &&  hasDescription())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  hasDescription())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasDescription())  {	  if(hasArg()    &&    hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  if(hasArg()  &&  hasErrors())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  hasErrors())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasErrors())  {	  if(hasArg()    &&    hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  while(values!=  null  &&  countOfArgs  >  0)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  countOfArgs  >  0)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  countOfArgs  >  0)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    countOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
67	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    countOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
69	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.remove(value);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.remove(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.remove(value);  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
70	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(longOpt);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(longOpt);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(longOpt);  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
71	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  length;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  length;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  length;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
72	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
73	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  +  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  +  1);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
74	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  -  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  -  1);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
75	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  1);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
76	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  valueType);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  valueType);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  valueType);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
77	[BUG]  [BUGGY]  if(hasOptionalArg()  &&  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  &&  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  &&  hasValueSeparator())  {	  if(hasArg()    &&    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
78	[BUG]  [BUGGY]  if(hasValueSeparator()  &&  hasArg())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValueSeparator()  &&  hasArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  &&  hasArg())  {	  if(hasArg()    &&    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
79	[BUG]  [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
80	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
81	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
82	[BUG]  [BUGGY]  int  numberOfArgs  =  values.indexOf('n');  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  values.indexOf('n');  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  values.indexOf('n');	  int    numberOfArgs    =    value.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
83	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('n',  0);	  int    numberOfArgs    =    value.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
84	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  -1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('n',  -1);	  int    numberOfArgs    =    value.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
85	[BUG]  [BUGGY]  char  numberOfArgs  =  value.indexOf('n');  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  value.indexOf('n');  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  value.indexOf('n');	  int    numberOfArgs    =    value.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
86	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
87	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES)||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
88	[BUG]  [BUGGY]  if(hasOptionalArg()  ||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  ||  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  ||  hasValueSeparator())  {	  if(hasValueSeparator()    ||    hasOptionalArg)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  if(hasArg()  ||  hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasOptionalArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasOptionalArg)  {	  if(hasValueSeparator()    ||    hasOptionalArg)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  if(hasValueSeparator()  &&  hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValueSeparator()  &&  hasOptionalArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  &&  hasOptionalArg)  {	  if(hasValueSeparator()    ||    hasOptionalArg)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  String  value  =  getDescription().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getDescription().toLowerCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getDescription().toLowerCase();	  String    value    =    getDescription();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
92	[BUG]  [BUGGY]  String  value  =  getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getName();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getName();	  String    value    =    getDescription();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
93	[BUG]  [BUGGY]  String  argName  =  getArgName().toLowerCase();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName().toLowerCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName().toLowerCase();	  String    argName    =    getArgName()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
94	[BUG]  [BUGGY]  String  argName  =  getArgName().trim();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName().trim();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName().trim();	  String    argName    =    getArgName()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
95	[BUG]  [BUGGY]  String  numberOfArgs  =  getNumberOfArgs().size();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  numberOfArgs  =  getNumberOfArgs().size();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  numberOfArgs  =  getNumberOfArgs().size();	  char    numberOfArgs    =    getNumberOfArgs().size();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
96	[BUG]  [BUGGY]  Number  numberOfArgs  =  getNumberOfArgs().size();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      {        [BUGGY]  Number  numberOfArgs  =  getNumberOfArgs().size();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Number  numberOfArgs  =  getNumberOfArgs().size();	  char    numberOfArgs    =    getNumberOfArgs().size();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  int  numberOfArgs  =  this.values.size();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  this.values.size();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  this.values.size();	  int    numberOfArgs    =    values.size();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
98	[BUG]  [BUGGY]  int  numberOfArgs  =  values.size()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  values.size()  -  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  values.size()  -  1;	  int    numberOfArgs    =    values.size();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
99	[BUG]  [BUGGY]  char  numberOfArgs  =  values.size();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  values.size();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  values.size();	  int    numberOfArgs    =    values.size();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
100	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  >  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  >  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs  >  UNLIMITED_VALUES);	  AssertionFailedError.checkArgument(numberOfArgs    ==    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
101	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  numberOfArgs);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  numberOfArgs);	  AssertionFailedError.checkArgument(numberOfArgs    ==    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
102	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  1);	  AssertionFailedError.checkArgument(numberOfArgs    ==    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
103	[BUG]  [BUGGY]  char  sep  =  getValueSeparator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  sep  =  getValueSeparator();  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  sep  =  getValueSeparator();	  String    sep    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
104	[BUG]  [BUGGY]  String  sep  =  getSeparator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  sep  =  getSeparator();  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  sep  =  getSeparator();	  String    sep    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
105	[BUG]  [BUGGY]  String  sep  =  getRequiredValueSeparator();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  sep  =  getRequiredValueSeparator();  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  sep  =  getRequiredValueSeparator();	  String    sep    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
106	[BUG]  [BUGGY]  if(getValueSeparator()  ||  hasValue())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getValueSeparator()  ||  hasValue())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  ||  hasValue())  {	  if(hasValue()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
107	[BUG]  [BUGGY]  if(hasValue()  &&  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValue()  &&  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValue()  &&  hasValueSeparator())  {	  if(hasValue()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
108	[BUG]  [BUGGY]  if(hasValue()  ||  hasArg())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValue()  ||  hasArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValue()  ||  hasArg())  {	  if(hasValue()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
109	[BUG]  [BUGGY]  String  value  =  getValue().toUpperCase();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().toUpperCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().toUpperCase();	  String    value    =    getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
110	[BUG]  [BUGGY]  String  value  =  getValue().toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().toLowerCase()  +  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().toLowerCase()  +  1;	  String    value    =    getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
111	[BUG]  [BUGGY]  String  value  =  getValue().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().toLowerCase(Locale.ENGLISH);	  String    value    =    getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
112	[BUG]  [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
113	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  >=  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  >=  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs  >=  UNLIMITED_VALUES);	  AssertionFailedError.checkArgument(numberOfArgs!=    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
117	[BUG]  [BUGGY]  char  numberOfArgs  =  getValueSeparator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  getValueSeparator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  getValueSeparator();	  int    numberOfArgs    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
118	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArguments();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArguments();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArguments();	  int    numberOfArgs    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
119	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberValueSeparator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberValueSeparator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberValueSeparator();	  int    numberOfArgs    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
120	[BUG]  [BUGGY]  int  numberOfArgs  =  values.indexOf('_');  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  values.indexOf('_');  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  values.indexOf('_');	  int    numberOfArgs    =    value.indexOf('_');    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
121	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('_',  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('_',  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('_',  0);	  int    numberOfArgs    =    value.indexOf('_');    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
122	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('_',  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('_',  -1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('_',  -1);	  int    numberOfArgs    =    value.indexOf('_');    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
123	[BUG]  [BUGGY]  char  numberOfArgs  =  value.indexOf('_');  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  value.indexOf('_');  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  value.indexOf('_');	  int    numberOfArgs    =    value.indexOf('_');    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
124	[BUG]  [BUGGY]  ValueUtils.checkArgument(values[0]!=  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ValueUtils.checkArgument(values[0]!=  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	ValueUtils.checkArgument(values[0]!=  null);	  ValueUtils.checkArgument(values[i]!=    null);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
125	[BUG]  [BUGGY]  ValueUtils.checkArgument(values[0]  ==  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  ValueUtils.checkArgument(values[0]  ==  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	ValueUtils.checkArgument(values[0]  ==  null);	  ValueUtils.checkArgument(values[i]!=    null);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
126	[BUG]  [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
127	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ".null ";  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ".null ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ".null ";	  String    argName    =    getArgName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
128	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ": ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": ";	  String    argName    =    getArgName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
129	[BUG]  [BUGGY]  String  argName  =  getArgName()  + "_ ";  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + "_ ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + "_ ";	  String    argName    =    getArgName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
130	[BUG]  [BUGGY]  if(hasArg()  &&  hasNullValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  hasNullValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  hasNullValueSeparator())  {	  if(hasArg()    ||    hasNullValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
131	[BUG]  [BUGGY]  if(hasNullValue()  ||  hasNullValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasNullValue()  ||  hasNullValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasNullValue()  ||  hasNullValueSeparator())  {	  if(hasArg()    ||    hasNullValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
132	[BUG]  [BUGGY]  if(hasNullValueSeparator()  ||  hasNullValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasNullValueSeparator()  ||  hasNullValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasNullValueSeparator()  ||  hasNullValueSeparator())  {	  if(hasArg()    ||    hasNullValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
133	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  argName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  argName);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportError( "Missing  value: "  +  value,  argName);	  AssertionFailedError.this.reportError(   "Missing    value:   "    +    value);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
134	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  description);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  description);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportError( "Missing  value: "  +  value,  description);	  AssertionFailedError.this.reportError(   "Missing    value:   "    +    value);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
135	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  name);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  name);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportError( "Missing  value: "  +  value,  name);	  AssertionFailedError.this.reportError(   "Missing    value:   "    +    value);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
136	[BUG]  [BUGGY]  String  value  =  getValueName().trim();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValueName().trim();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueName().trim();	  String    value    =    getValueName();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length();  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  length();  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  length();  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    length;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length  &&  values.size()  >  0;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  length  &&  values.size()  >  0;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  length  &&  values.size()  >  0;  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    length;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
139	[BUG]  [BUGGY]  if(hasArg()  ||  hasOptionalArgValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasOptionalArgValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasOptionalArgValueSeparator())  {	  if(hasArg()    ||    hasArgValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
140	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "+getValueSeparator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ": "+getValueSeparator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "+getValueSeparator();	  String    argName    =    getArgName()    +   ":   "+getArgName();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
141	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "+getDescription();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ": "+getDescription();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "+getDescription();	  String    argName    =    getArgName()    +   ":   "+getArgName();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
142	[BUG]  [BUGGY]  if(hasOptionalArg()  &&  hasArg)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  &&  hasArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  &&  hasArg)  {	  if(hasOptionalArg()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
143	[BUG]  [BUGGY]  if(hasOptionalArg()  ||  hasOptionalArg)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  ||  hasOptionalArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  ||  hasOptionalArg)  {	  if(hasOptionalArg()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
144	[BUG]  [BUGGY]  if(hasOptionalArg()  ||  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  ||  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  ||  hasOptionalArg())  {	  if(hasOptionalArg()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
145	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    countOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
146	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  -  1));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  -  1));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  -  1));	  AssertionFailedError.make(numberOfArgs,    0,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
147	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  +  1));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  +  1));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  +  1));	  AssertionFailedError.make(numberOfArgs,    0,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
148	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs,  0));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs,  0));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs,  0));	  AssertionFailedError.make(numberOfArgs,    0,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
149	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  +  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs  +  1);	  AssertionFailedError.make(numberOfArgs,    0,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
150	[BUG]  [BUGGY]  ValueUtils.checkArgument(values[index]  ==  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  ValueUtils.checkArgument(values[index]  ==  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	ValueUtils.checkArgument(values[index]  ==  null);	  ValueUtils.checkArgument(values[i]    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
151	[BUG]  [BUGGY]  if(getArgName().equals( "null "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName().equals( "null "))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName().equals( "null "))  {	  if(getArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
152	[BUG]  [BUGGY]  if(getArgName().equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName().equals( " "))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName().equals( " "))  {	  if(getArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
153	[BUG]  [BUGGY]  if(getArgName().equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName().equals( "- "))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName().equals( "- "))  {	  if(getArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
154	[BUG]  [BUGGY]  if(getNumberOfArgs()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getNumberOfArgs()  >  0)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getNumberOfArgs()  >  0)  {	  if(getNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
155	[BUG]  [BUGGY]  if(getNumberOfArgs()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getNumberOfArgs()  >  1)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getNumberOfArgs()  >  1)  {	  if(getNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
156	[BUG]  [BUGGY]  if(getNullValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getNullValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getNullValueSeparator())  {	  if(getNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  String  value  =  getValue().trim()  + "n ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().trim()  + "n ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().trim()  + "n ";	  String    value    =    getValue().trim();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
158	[BUG]  [BUGGY]  AssertionFailedError.make(value,  numberOfArgs,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(value,  numberOfArgs,  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(value,  numberOfArgs,  null);	  AssertionFailedError.make(numberOfArgs,    value,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
159	[BUG]  [BUGGY]  AssertionFailedError.make(this,  value,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(this,  value,  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(this,  value,  null);	  AssertionFailedError.make(numberOfArgs,    value,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
160	[BUG]  [BUGGY]  AssertionFailedError.make(value,  value,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(value,  value,  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(value,  value,  null);	  AssertionFailedError.make(numberOfArgs,    value,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
161	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  value,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  value,  this);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  value,  this);	  AssertionFailedError.make(numberOfArgs,    value,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
162	[BUG]  [BUGGY]  int  numberOfArgs  =  values.indexOf('.');  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  values.indexOf('.');  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  values.indexOf('.');	  int    numberOfArgs    =    value.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
163	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('.',  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('.',  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('.',  0);	  int    numberOfArgs    =    value.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
164	[BUG]  [BUGGY]  char  numberOfArgs  =  value.indexOf('.');  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  value.indexOf('.');  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  value.indexOf('.');	  int    numberOfArgs    =    value.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
165	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('.',  -1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('.',  -1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('.',  -1);	  int    numberOfArgs    =    value.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
166	[BUG]  [BUGGY]  String  value  =(String)this.values.get(1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(1);	  String    value    =(String)this.values.get(0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
167	[BUG]  [BUGGY]  String  value  =(String)this.values.get(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(i);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(i);	  String    value    =(String)this.values.get(0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
168	[BUG]  [BUGGY]  if(hasArg()  ||  hasMoreOfArgs())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasMoreOfArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasMoreOfArgs())  {	  if(hasArg()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
169	[BUG]  [BUGGY]  if(hasArg()  ||  hasNumberOfArgs()  ||  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasNumberOfArgs()  ||  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasNumberOfArgs()  ||  hasOptionalArg())  {	  if(hasArg()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
170	[BUG]  [BUGGY]  if(hasValueSeparator()  ||  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValueSeparator()  ||  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  ||  hasOptionalArg())  {	  if(hasValueSeparator()    ||    hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
171	[BUG]  [BUGGY]  if(hasValueSeparator()  ||  hasNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValueSeparator()  ||  hasNumberOfArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  ||  hasNumberOfArgs())  {	  if(hasValueSeparator()    ||    hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
172	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  ==  null  ||  values.size()  ==  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values  ==  null  ||  values.size()  ==  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  ==  null  ||  values.size()  ==  0);	  AssertionFailedError.checkArgument(values    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
173	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  ==  null,  values.size());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values  ==  null,  values.size());  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  ==  null,  values.size());	  AssertionFailedError.checkArgument(values    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
174	[BUG]  [BUGGY]  if(hasArg()  ||(values.size()  >  0)||(values.contains(argName)))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||(values.size()  >  0)||(values.contains(argName)))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||(values.size()  >  0)||(values.contains(argName)))  {	  if(hasArgs()    &&(values.size()    >    0)||(values.contains(argName)))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
175	[BUG]  [BUGGY]  if(hasArgs()  ||(values.size()  >  0)||(values.contains(argName)))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||(values.size()  >  0)||(values.contains(argName)))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||(values.size()  >  0)||(values.contains(argName)))  {	  if(hasArgs()    &&(values.size()    >    0)||(values.contains(argName)))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
176	[BUG]  [BUGGY]  if(hasArg()  ||(values.size()  >  0)&&(values.contains(argName)))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||(values.size()  >  0)&&(values.contains(argName)))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||(values.size()  >  0)&&(values.contains(argName)))  {	  if(hasArgs()    &&(values.size()    >    0)||(values.contains(argName)))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
177	[BUG]  [BUGGY]  if(values.size()  >  0  ||(values.contains(argName)))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(values.size()  >  0  ||(values.contains(argName)))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(values.size()  >  0  ||(values.contains(argName)))  {	  if(hasArgs()    &&(values.size()    >    0)||(values.contains(argName)))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
178	[BUG]  [BUGGY]  Integer  value  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  value  =  getNumberOfArgs();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getNumberOfArgs();	  Integer    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
179	[BUG]  [BUGGY]  Integer  value  =  getIntValueSeparator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  value  =  getIntValueSeparator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getIntValueSeparator();	  Integer    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
180	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append( ", ");  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
181	[BUG]  [BUGGY]  char  numberOfArgs  =  getNumberOfArgs()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  getNumberOfArgs()  -  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  getNumberOfArgs()  -  1;	  int    numberOfArgs    =    getNumberOfArgs()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
182	[BUG]  [BUGGY]  String  value  =  getValueSeparator().toString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValueSeparator().toString();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueSeparator().toString();	  String    value    =    getValueSeparator().trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
183	[BUG]  [BUGGY]  if(hasArg()  ||  isDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  isDescriptionVarArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  isDescriptionVarArgs())  {	  if(hasArg()    &&    isDescriptionVarArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
184	[BUG]  [BUGGY]  if(numberOfArgs  >  0  &&  hasArg()  &&  isDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(numberOfArgs  >  0  &&  hasArg()  &&  isDescriptionVarArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(numberOfArgs  >  0  &&  hasArg()  &&  isDescriptionVarArgs())  {	  if(hasArg()    &&    isDescriptionVarArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
185	[BUG]  [BUGGY]  if(isDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(isDescriptionVarArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(isDescriptionVarArgs())  {	  if(hasArg()    &&    isDescriptionVarArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(this);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportUnsupportedOperation(this);	  AssertionFailedError.this.reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
187	[BUG]  [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportUnsupportedOperation(null);	  AssertionFailedError.this.reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
188	[BUG]  [BUGGY]  AssertionFailedError.this.reportInvalidOperation();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportInvalidOperation();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportInvalidOperation();	  AssertionFailedError.this.reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
189	[BUG]  [BUGGY]  Iterator  <  String>  it  =  this.values.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  String>  it  =  this.values.iterator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Iterator  <  String>  it  =  this.values.iterator();	  Iterator    <    String>    it    =    values.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
190	[BUG]  [BUGGY]  Iterator  <  String>  it  =  argNames.iterator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  String>  it  =  argNames.iterator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Iterator  <  String>  it  =  argNames.iterator();	  Iterator    <    String>    it    =    values.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
191	[BUG]  [BUGGY]  List  <  String>  it  =  values.iterator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  List  <  String>  it  =  values.iterator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	List  <  String>  it  =  values.iterator();	  Iterator    <    String>    it    =    values.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
192	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "  +  getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ": "  +  getValue();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "  +  getValue();	  String    argName    =    getArgName()    +   ":   "    +    getMessage();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
193	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "  +  getClass();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ": "  +  getClass();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "  +  getClass();	  String    argName    =    getArgName()    +   ":   "    +    getMessage();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
194	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ",: "  +  getMessage();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ",: "  +  getMessage();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ",: "  +  getMessage();	  String    argName    =    getArgName()    +   ":   "    +    getMessage();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
195	[BUG]  [BUGGY]  if(hasArgs()  ||  getValueSeparator()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||  getValueSeparator()!=  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  getValueSeparator()!=  null)  {	  if(hasArgs()    &&    getValueSeparator()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
196	[BUG]  [BUGGY]  String  argName  =  getFunctionName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getFunctionName();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getFunctionName();	  String    argName    =    getSimpleArgName();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
197	[BUG]  [BUGGY]  if(hasOptionalArg()  &&  getValueSeparator()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  &&  getValueSeparator()!=  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  &&  getValueSeparator()!=  null)  {	  if(hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
198	[BUG]  [BUGGY]  if(hasOptionalArg()  &&  getValueSeparator()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  &&  getValueSeparator()  ==  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  &&  getValueSeparator()  ==  null)  {	  if(hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
199	[BUG]  [BUGGY]  String  value  =  getValue(null,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue(null,  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue(null,  null);	  String    value    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
200	[BUG]  [BUGGY]  String  value  =  getValue(values);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue(values);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue(values);	  String    value    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
201	[BUG]  [BUGGY]  String  value  =  getValue(this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue(this);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue(this);	  String    value    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
202	[BUG]  [BUGGY]  AssertionFailedError.make(this.numberOfArgs,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(this.numberOfArgs,  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(this.numberOfArgs,  0);	  AssertionFailedError.make(numberOfArgs,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
203	[BUG]  [BUGGY]  AssertionFailedError.make(values,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(values,  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(values,  0);	  AssertionFailedError.make(numberOfArgs,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
204	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(index  +  2);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index  +  2);	  String    value    =(String)this.values.get(index    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
205	[BUG]  [BUGGY]  if(hasArg()  ||  hasValueSeparator)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasValueSeparator)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasValueSeparator)  {	  if(hasArg()    &&    hasValueSeparator)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
206	[BUG]  [BUGGY]  if(hasArg()  ||  hasDescription())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasDescription())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasDescription())  {	  if(hasArg()    ||    hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
207	[BUG]  [BUGGY]  if(hasArg()  ||  hasDefinedValues())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasDefinedValues())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasDefinedValues())  {	  if(hasArg()    ||    hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
208	[BUG]  [BUGGY]  value.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  value.append( ",n ");  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	value.append( ",n ");	  value.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
209	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().length  -  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs().length  -  1;	  int    numberOfArgs    =    getNumberOfArgs().length;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
210	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().length  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().length  +  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs().length  +  1;	  int    numberOfArgs    =    getNumberOfArgs().length;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
211	[BUG]  [BUGGY]  char  numberOfArgs  =  getNumberOfArgs().length;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  getNumberOfArgs().length;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  getNumberOfArgs().length;	  int    numberOfArgs    =    getNumberOfArgs().length;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
212	[BUG]  [BUGGY]  long  numberOfArgs  =  getNumberOfArgs().size()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  long  numberOfArgs  =  getNumberOfArgs().size()  -  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	long  numberOfArgs  =  getNumberOfArgs().size()  -  1;	  int    numberOfArgs    =    getNumberOfArgs().size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
213	[BUG]  [BUGGY]  char  numberOfArgs  =  getNumberOfArgs().size()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  char  numberOfArgs  =  getNumberOfArgs().size()  -  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	char  numberOfArgs  =  getNumberOfArgs().size()  -  1;	  int    numberOfArgs    =    getNumberOfArgs().size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
214	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index++).toLowerCase();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(index++).toLowerCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index++).toLowerCase();	  String    value    =(String)this.values.get(index++);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
215	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs().size();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs().size();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  numberOfArgs  =  getNumberOfArgs().size();	  int    numberOfArgs    =    getNumberOfArgs().size()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
216	[BUG]  [BUGGY]  if(hasOptionalArg  &&  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg  &&  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg  &&  hasValueSeparator())  {	  if(hasArg    &&    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
217	[BUG]  [BUGGY]  if(hasArg  &&  hasNullValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  hasNullValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  hasNullValueSeparator())  {	  if(hasArg    &&    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
218	[BUG]  [BUGGY]  if(values  ==  null  ||  hasValue())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(values  ==  null  ||  hasValue())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(values  ==  null  ||  hasValue())  {	  if(hasValue()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
219	[BUG]  [BUGGY]  if(values  ==  null  ||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(values  ==  null  ||  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(values  ==  null  ||  hasValueSeparator())  {	  if(hasValue()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
220	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index  *  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(index  *  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index  *  1);	  String    value    =(String)this.values.get(index    -    1);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
221	[BUG]  [BUGGY]  if(getArgName().equals(argName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName().equals(argName))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName().equals(argName))  {	  if(getArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
222	[BUG]  [BUGGY]  if(getArgName()  ||  getValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName()  ||  getValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName()  ||  getValueSeparator())  {	  if(getArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
223	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
224	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
225	[BUG]  [BUGGY]  if(getArgName()  ||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName()  ||  hasArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName()  ||  hasArg)  {	  if(getValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
226	[BUG]  [BUGGY]  if(getArgName()  ||  getValueSeparator()  ||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName()  ||  getValueSeparator()  ||  hasArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName()  ||  getValueSeparator()  ||  hasArg)  {	  if(getValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
227	[BUG]  [BUGGY]  if(hasArg  ||  hasNullValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  ||  hasNullValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  ||  hasNullValueSeparator())  {	  if(hasArg    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
228	[BUG]  [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
229	[BUG]  [BUGGY]  String  value  =  getValue().substring(0,  getValue().length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().substring(0,  getValue().length()  -  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().substring(0,  getValue().length()  -  1);	  String    value    =    getValue().trim();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
230	[BUG]  [BUGGY]  if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  int    numberOfArgs    =    getNumberOfArgs();    if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
231	[BUG]  [BUGGY]  if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  }  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  }	  int    numberOfArgs    =    getNumberOfArgs();    if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
232	[BUG]  [BUGGY]  String  value  =  getArgValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getArgValue();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getArgValue();	  String    value    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
233	[BUG]  [BUGGY]  String  value  =  getArg1();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getArg1();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getArg1();	  String    value    =    getArgName();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
234	[BUG]  [BUGGY]  AssertionFailedError.make(values,  0,  numberOfArgs));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(values,  0,  numberOfArgs));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(values,  0,  numberOfArgs));	  AssertionFailedError.make(numberOfArgs,    0,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
235	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  UNLIMITED_VALUES));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  UNLIMITED_VALUES));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0,  UNLIMITED_VALUES));	  AssertionFailedError.make(numberOfArgs,    0,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
236	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values!=  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values!=  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values!=  UNLIMITED_VALUES);	  AssertionFailedError.checkArgument(numberOfArgs!=    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
237	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs!=  UNLIMITED_VALUES,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs!=  UNLIMITED_VALUES,  value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs!=  UNLIMITED_VALUES,  value);	  AssertionFailedError.checkArgument(numberOfArgs!=    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
238	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  longOpt;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  longOpt;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  longOpt;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
239	[BUG]  [BUGGY]  if(hasOptionalArg()  ||  hasArgs())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  ||  hasArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  ||  hasArgs())  {	  if(hasArgs()    ||    hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
240	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  value.append(',');  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  value.append(',');  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
241	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  longOpt;  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  longOpt;  ++i)  {  value.append(',');  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  longOpt;  ++i)  {  value.append(',');  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
242	[BUG]  [BUGGY]  String  value  =  getValueSeparator().toLowerCase(LongOpt.class);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValueSeparator().toLowerCase(LongOpt.class);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValueSeparator().toLowerCase(LongOpt.class);	  String    value    =    getValueSeparator().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
243	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().indexOf('  ')-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs().indexOf('  ')-  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs().indexOf('  ')-  1;	  int    numberOfArgs    =    getNumberOfArgs().size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
244	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('.',  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('.',  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('.',  1);	  int    numberOfArgs    =    value.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
245	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('n',  UNLIMITED_VALUES);	  int    numberOfArgs    =    value.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
246	[BUG]  [BUGGY]  String  value  =  getValue(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue(numberOfArgs);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue(numberOfArgs);	  String    value    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
247	[BUG]  [BUGGY]  String  value  =  getValue(null,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue(null,  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue(null,  0);	  String    value    =    getValue(null);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
248	[BUG]  [BUGGY]  if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg)  {  int  numberOfArgs  =  getNumberOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  int    numberOfArgs    =    getNumberOfArgs();    if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
249	[BUG]  [BUGGY]  if(getArgName()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName()  >  0)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName()  >  0)  {	  if(getValueSeparator()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
250	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('_')+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('_')+  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('_')+  1;	  int    numberOfArgs    =    value.indexOf('_');    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
251	[BUG]  [BUGGY]  String  value  =  getValue().toLowerCase(LongOpt.class);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().toLowerCase(LongOpt.class);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().toLowerCase(LongOpt.class);	  String    value    =    getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
252	[BUG]  [BUGGY]  String  argName  =  getSimpleArgName()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getSimpleArgName()  +  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getSimpleArgName()  +  1;	  String    argName    =    getSimpleArgName();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
253	[BUG]  [BUGGY]  if(hasArg()  ||  hasNullOfArgs())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasNullOfArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasNullOfArgs())  {	  if(hasArg()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
254	[BUG]  [BUGGY]  if(hasArg()  ||  hasNumericValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasNumericValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasNumericValueSeparator())  {	  if(hasArg()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
255	[BUG]  [BUGGY]  if(!hasArg()  &&  hasArgName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(!hasArg()  &&  hasArgName())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(!hasArg()  &&  hasArgName())  {	  if(hasArg()    &&    hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
256	[BUG]  [BUGGY]  int  numberOfArgs  =  getNullValueSeparator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNullValueSeparator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNullValueSeparator();	  int    numberOfArgs    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
257	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasArgValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasArgValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasArgValueSeparator())  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
258	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  value,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  value,  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  value,  UNLIMITED_VALUES);	  AssertionFailedError.make(numberOfArgs,    value,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
259	[BUG]  [BUGGY]  AssertionFailedError.make(value,  value,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(value,  value,  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(value,  value,  UNLIMITED_VALUES);	  AssertionFailedError.make(numberOfArgs,    value,    null);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
260	[BUG]  [BUGGY]  if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
261	[BUG]  [BUGGY]  if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
262	[BUG]  [BUGGY]  if(hasArg  &&  getValueSeparator()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  getValueSeparator()!=  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  getValueSeparator()!=  null)  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
263	[BUG]  [BUGGY]  if(hasArg  &&  getValueSeparator()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  getValueSeparator()  ==  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  getValueSeparator()  ==  null)  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
264	[BUG]  [BUGGY]  String  sep  =  getArgName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  sep  =  getArgName();  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  sep  =  getArgName();	  String    sep    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
265	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(values);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(values);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs(values);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
266	[BUG]  [BUGGY]  AssertionFailedError.make(UNLIMITED_VALUES,  value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(UNLIMITED_VALUES,  value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(UNLIMITED_VALUES,  value);	  AssertionFailedError.make(numberOfArgs,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
267	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasArgs())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  hasArgs())  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
268	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  NUMBER_OF_VALUES;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  NUMBER_OF_VALUES;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  NUMBER_OF_VALUES;  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    countOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
269	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArgs())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArgs())  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
270	[BUG]  [BUGGY]  String  argName  =  getArgName()  + "null ";  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + "null ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + "null ";	  String    argName    =    getArgName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
271	[BUG]  [BUGGY]  String  argName  =  getArgName()  + "  value ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + "  value ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + "  value ";	  String    argName    =    getArgName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
272	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values!=  null,  values.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values!=  null,  values.length);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values!=  null,  values.length);	  AssertionFailedError.checkArgument(values!=    null);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
273	[BUG]  [BUGGY]  if(getValueSeparator()  ||  hasArg())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getValueSeparator()  ||  hasArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  ||  hasArg())  {	  if(hasValueSeparator()    ||    hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
274	[BUG]  [BUGGY]  if(getValueSeparator()  ||  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getValueSeparator()  ||  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getValueSeparator()  ||  hasOptionalArg())  {	  if(hasValueSeparator()    ||    hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
275	[BUG]  [BUGGY]  if(hasArg()  ||  hasDefined())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasDefined())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasDefined())  {	  if(hasArg()    ||    hasArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
276	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
277	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(getValueSeparator());  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
278	[BUG]  [BUGGY]  if(getArgName().equals(argName)||  hasArg()  &&  isDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName().equals(argName)||  hasArg()  &&  isDescriptionVarArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName().equals(argName)||  hasArg()  &&  isDescriptionVarArgs())  {	  if(hasArg()    &&    isDescriptionVarArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
279	[BUG]  [BUGGY]  if(hasArg()  ||  hasDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasDescriptionVarArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasDescriptionVarArgs())  {	  if(hasArg()    &&    isDescriptionVarArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
280	[BUG]  [BUGGY]  if(hasOptionalArg()  ||  hasNumberOfArgs)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  ||  hasNumberOfArgs)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  ||  hasNumberOfArgs)  {	  if(hasOptionalArg()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
281	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  UNLIMITED_VALUES));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  UNLIMITED_VALUES));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  UNLIMITED_VALUES));	  AssertionFailedError.make(numberOfArgs,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
282	[BUG]  [BUGGY]  AssertionFailedError.make(values,  numberOfArgs));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(values,  numberOfArgs));  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(values,  numberOfArgs));	  AssertionFailedError.make(numberOfArgs,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
283	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  ==  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values  ==  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  ==  UNLIMITED_VALUES);	  AssertionFailedError.checkArgument(numberOfArgs    ==    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
284	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs  ==  0);	  AssertionFailedError.checkArgument(numberOfArgs    ==    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
285	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(numberOfArgs  ==  UNLIMITED_VALUES,  value);	  AssertionFailedError.checkArgument(numberOfArgs    ==    UNLIMITED_VALUES);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
286	[BUG]  [BUGGY]  Ilerator  <  String>  it  =  this.values.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Ilerator  <  String>  it  =  this.values.iterator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Ilerator  <  String>  it  =  this.values.iterator();	  Iterator    <    String>    it    =    values.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
287	[BUG]  [BUGGY]  if(hasArg  &&  hasOptionalArg())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  hasOptionalArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  hasOptionalArg())  {	  if(hasArg    &&    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
288	[BUG]  [BUGGY]  if(hasOptionalArg()  &&  isValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  &&  isValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  &&  isValueSeparator())  {	  if(hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
289	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  *  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs()  *  1;	  int    numberOfArgs    =    getNumberOfArgs()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
290	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES)||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES)||  hasArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES)||  hasArg)  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
291	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
292	[BUG]  [BUGGY]  if(hasArg()  &&(values.size()  >  0)||(values.contains(argName)))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&(values.size()  >  0)||(values.contains(argName)))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&(values.size()  >  0)||(values.contains(argName)))  {	  if(hasArgs()    &&(values.size()    >    0)||(values.contains(argName)))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
293	[BUG]  [BUGGY]  if(hasArg()  &&  isDescription())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isDescription())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isDescription())  {	  if(hasArg()    &&    isValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
294	[BUG]  [BUGGY]  if(hasArg()  &&  isValueDescription())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isValueDescription())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isValueDescription())  {	  if(hasArg()    &&    isValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
295	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  value.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  value.append( ", ");  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  value.append( ", ");  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
296	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "+getArgValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ": "+getArgValue();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "+getArgValue();	  String    argName    =    getArgName()    +   ":   "+getArgName();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
297	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ": "+getArg1();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ": "+getArg1();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ": "+getArg1();	  String    argName    =    getArgName()    +   ":   "+getArgName();    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
298	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  ==  null,  values.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values  ==  null,  values.length);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  ==  null,  values.length);	  AssertionFailedError.checkArgument(values    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
299	[BUG]  [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(this,  UNINITIALIZED_VALUES);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(this,  UNINITIALIZED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportUnsupportedOperation(this,  UNINITIALIZED_VALUES);	  AssertionFailedError.this.reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
300	[BUG]  [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(this,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportUnsupportedOperation(this,  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportUnsupportedOperation(this,  UNLIMITED_VALUES);	  AssertionFailedError.this.reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
301	[BUG]  [BUGGY]  AssertionFailedError.make(UNLIMITED_VALUES,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(UNLIMITED_VALUES,  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(UNLIMITED_VALUES,  0);	  AssertionFailedError.make(numberOfArgs,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
302	[BUG]  [BUGGY]  AssertionFailedError.make(this,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(this,  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(this,  0);	  AssertionFailedError.make(numberOfArgs,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
303	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  UNLIMITED_VALUES);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportError( "Missing  value: "  +  value,  UNLIMITED_VALUES);	  AssertionFailedError.this.reportError(   "Missing    value:   "    +    value);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
304	[BUG]  [BUGGY]  int  i  =  0;  i  <  length;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  i  =  0;  i  <  length;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  i  =  0;  i  <  length;  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    length;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
305	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ".: "  +  getMessage();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ".: "  +  getMessage();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ".: "  +  getMessage();	  String    argName    =    getArgName()    +   ":   "    +    getMessage();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
306	[BUG]  [BUGGY]  String  argName  =  getValueName()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getValueName()  +  1;  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getValueName()  +  1;	  String    argName    =    getValueName();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
307	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArgValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArgValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArgValueSeparator())  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
308	[BUG]  [BUGGY]  this.values.remove(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  this.values.remove(value);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.remove(value);	  this.values.add(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
309	[BUG]  [BUGGY]  this.values.add(getValue());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  this.values.add(getValue());  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.add(getValue());	  this.values.add(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
310	[BUG]  [BUGGY]  value.append(',');  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  value.append(',');  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	value.append(',');	  value.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
311	[BUG]  [BUGGY]  String  value  =  getValue().substring(0,  getValue().length());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getValue().substring(0,  getValue().length());  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getValue().substring(0,  getValue().length());	  String    value    =    getValue().trim();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
312	[BUG]  [BUGGY]  if(hasOptionalArg()  ||  hasArg())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasOptionalArg()  ||  hasArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasOptionalArg()  ||  hasArg())  {	  if(hasArgs()    ||    hasOptionalArg())    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
313	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasValueSeparator())  {	  if(hasArgs()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
314	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    countOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
315	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  NUMBER_VALUES;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  NUMBER_VALUES;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  NUMBER_VALUES;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    countOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
316	[BUG]  [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  value.indexOf('n',  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  value.indexOf('n',  1);	  int    numberOfArgs    =    value.indexOf('n');    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
317	[BUG]  [BUGGY]  String  value  =  getDescription().trim();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getDescription().trim();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getDescription().trim();	  String    value    =    getDescription();    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
318	[BUG]  [BUGGY]  AssertionFailedError.this.reportInvalidEOFInValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportInvalidEOFInValue();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportInvalidEOFInValue();	  AssertionFailedError.this.reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
319	[BUG]  [BUGGY]  AssertionFailedError.this.validate();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.validate();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.validate();	  AssertionFailedError.this.reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
320	[BUG]  [BUGGY]  if(getDescription()  ||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getDescription()  ||  hasArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getDescription()  ||  hasArg)  {	  if(getValueSeparator()    ||    hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
321	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  value.length());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  value.length());  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  value.length());	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
322	[BUG]  [BUGGY]  Iterator  <  String>  it  =  types.iterator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  String>  it  =  types.iterator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Iterator  <  String>  it  =  types.iterator();	  Iterator    <    String>    it    =    values.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
323	[BUG]  [BUGGY]  Iterator  <  String>  it  =  valueNames.iterator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  Iterator  <  String>  it  =  valueNames.iterator();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Iterator  <  String>  it  =  valueNames.iterator();	  Iterator    <    String>    it    =    values.iterator();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
324	[BUG]  [BUGGY]  AssertionFailedError.make(argName,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(argName,  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(argName,  0);	  AssertionFailedError.make(numberOfArgs,    0);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
325	[BUG]  [BUGGY]  if(hasValue()  ||  hasArgName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValue()  ||  hasArgName())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValue()  ||  hasArgName())  {	  if(hasValue()    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
326	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasArg())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  hasArg())  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
327	[BUG]  [BUGGY]  Char  numberOfArgs  =  getNumberOfArgs().size();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      {        [BUGGY]  Char  numberOfArgs  =  getNumberOfArgs().size();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Char  numberOfArgs  =  getNumberOfArgs().size();	  char    numberOfArgs    =    getNumberOfArgs().size();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
328	[BUG]  [BUGGY]  this.values.add(argName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  this.values.add(argName);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.add(argName);	  this.values.add(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
329	[BUG]  [BUGGY]  this.values.add(value,  argName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  this.values.add(value,  argName);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	this.values.add(value,  argName);	  this.values.add(value);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
330	[BUG]  [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  expected);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.this.reportError( "Missing  value: "  +  value,  expected);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.this.reportError( "Missing  value: "  +  value,  expected);	  AssertionFailedError.this.reportError(   "Missing    value:   "    +    value);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
331	[BUG]  [BUGGY]  ValueUtils.checkArgument(values[index]!=  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  ValueUtils.checkArgument(values[index]!=  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	ValueUtils.checkArgument(values[index]!=  null);	  ValueUtils.checkArgument(values[i]!=    null);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
332	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
333	[BUG]  [BUGGY]  String  value  =(String)this.values.get(index++).toUpperCase();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(index++).toUpperCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(index++).toUpperCase();	  String    value    =(String)this.values.get(index++);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
334	[BUG]  [BUGGY]  String  argName  =  getArgName()  + "  in ";  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + "  in ";  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + "  in ";	  String    argName    =    getArgName()    +   "n   ";    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
335	[BUG]  [BUGGY]  int  numberOfArgs  =  getValueOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  int  numberOfArgs  =  getValueOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	int  numberOfArgs  =  getValueOfArgs();  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  int    numberOfArgs    =    getNumberOfArgs();    if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
336	[BUG]  [BUGGY]  if(hasArg  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
337	[BUG]  [BUGGY]  if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_VALUES))  {	  if(hasArg)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
338	[BUG]  [BUGGY]  if(isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(hasArg()    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
339	[BUG]  [BUGGY]  if(hasArgs()  ||(values.size()  >  0)&&(values.contains(argName)))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||(values.size()  >  0)&&(values.contains(argName)))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||(values.size()  >  0)&&(values.contains(argName)))  {	  if(hasArgs()    &&(values.size()    >    0)||(values.contains(argName)))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
340	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  value.append(',');  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
341	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  value.append(',');  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  value.append(',');  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  value.append(',');  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    value.append(',');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
342	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
343	[BUG]  [BUGGY]  long  numberOfArgs  =  getNumberOfArgs().size();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  long  numberOfArgs  =  getNumberOfArgs().size();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	long  numberOfArgs  =  getNumberOfArgs().size();	  int    numberOfArgs    =    getNumberOfArgs().size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
344	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values  ==  null,  values.size()  >  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values  ==  null,  values.size()  >  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values  ==  null,  values.size()  >  0);	  AssertionFailedError.checkArgument(values    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
345	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values!=  null  &&  values.size()  >  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values!=  null  &&  values.size()  >  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values!=  null  &&  values.size()  >  0);	  AssertionFailedError.checkArgument(values!=    null);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
346	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(values!=  null  ||  values.size()  ==  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.checkArgument(values!=  null  ||  values.size()  ==  0);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.checkArgument(values!=  null  ||  values.size()  ==  0);	  AssertionFailedError.checkArgument(values!=    null);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
347	[BUG]  [BUGGY]  if(hasArgs()  ||  isDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||  isDescriptionVarArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  isDescriptionVarArgs())  {	  if(hasArg()    &&    isDescriptionVarArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
348	[BUG]  [BUGGY]  if(getArgName().equals(argName)&&  isDescriptionVarArgs())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName().equals(argName)&&  isDescriptionVarArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName().equals(argName)&&  isDescriptionVarArgs())  {	  if(hasArg()    &&    isDescriptionVarArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
349	[BUG]  [BUGGY]  Integer  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  Integer  value  =  getValue();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	Integer  value  =  getValue();	  Integer    value    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
350	[BUG]  [BUGGY]  String  argName  =  getString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getString();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getString();	  String    argName    =    getValueName();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
351	[BUG]  [BUGGY]  String  value  =(String)this.values.get(0,  this.values.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =(String)this.values.get(0,  this.values.size()  -  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =(String)this.values.get(0,  this.values.size()  -  1);	  String    value    =(String)this.values.get(0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
352	[BUG]  [BUGGY]  if(getArgName().length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(getArgName().length()  ==  0)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(getArgName().length()  ==  0)  {	  if(getArgName())    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
353	[BUG]  [BUGGY]  String  value  =  getKey().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  value  =  getKey().toLowerCase();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  value  =  getKey().toLowerCase();	  String    value    =    getValue().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
354	[BUG]  [BUGGY]  if(hasNumberOfArgs()  ||  hasArg())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasNumberOfArgs()  ||  hasArg())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasNumberOfArgs()  ||  hasArg())  {	  if(hasArg()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
355	[BUG]  [BUGGY]  String  sep  =  getDescription();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  sep  =  getDescription();  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  sep  =  getDescription();	  String    sep    =    getValueSeparator();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
356	[BUG]  [BUGGY]  if(hasValue()  ||  hasValueSeparator)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValue()  ||  hasValueSeparator)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValue()  ||  hasValueSeparator)  {	  if(hasArg()    &&    hasValueSeparator)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
357	[BUG]  [BUGGY]  if(hasArgs()  ||  getValueSeparator()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgs()  ||  getValueSeparator()  ==  null)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgs()  ||  getValueSeparator()  ==  null)  {	  if(hasArg()    &&    getValueSeparator()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
358	[BUG]  [BUGGY]  while(value!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(value!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(value!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
359	[BUG]  [BUGGY]  while(value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(value.isEmpty())  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
360	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }	  while(values!=    null    &&    value.isEmpty())    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
361	[BUG]  [BUGGY]  if(hasValueSeparator()  ||  hasValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasValueSeparator()  ||  hasValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasValueSeparator()  ||  hasValueSeparator())  {	  if(hasArg    ||    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
362	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  NUMBER_VALUES;  ++i)  {  values.add(getValueSeparator());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  for(int  i  =  0;  i  <  NUMBER_VALUES;  ++i)  {  values.add(getValueSeparator());  }  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	for(int  i  =  0;  i  <  NUMBER_VALUES;  ++i)  {  values.add(getValueSeparator());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(getValueSeparator());    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
363	[BUG]  [BUGGY]  if(hasArg()  ||  hasNextValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  ||  hasNextValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  ||  hasNextValueSeparator())  {	  if(hasArg()    ||    hasArgValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
364	[BUG]  [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs,  1);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(numberOfArgs,  0,  numberOfArgs,  1);	  AssertionFailedError.make(numberOfArgs,    0,    numberOfArgs));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
365	[BUG]  [BUGGY]  if(hasArgValue()  ||  hasArgValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArgValue()  ||  hasArgValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArgValue()  ||  hasArgValueSeparator())  {	  if(hasArg()    &&    hasArgValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
366	[BUG]  [BUGGY]  if(hasNumberOfArgs()  ||  hasNumberOfArgs())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasNumberOfArgs()  ||  hasNumberOfArgs())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasNumberOfArgs()  ||  hasNumberOfArgs())  {	  if(hasArgs()    ||    hasNumberOfArgs())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
367	[BUG]  [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArg)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArg)  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasArg)  {	  if(hasArg()    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
368	[BUG]  [BUGGY]  String  argName  =  getMessage()  + ": "  +  getArgName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getMessage()  + ": "  +  getArgName();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getMessage()  + ": "  +  getArgName();	  String    argName    =    getArgName()    +   ":   "    +    getMessage();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
369	[BUG]  [BUGGY]  String  argName  =  getArgName()  + ",  expected  value: "  +  getMessage();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {        [BUGGY]  String  argName  =  getArgName()  + ",  expected  value: "  +  getMessage();  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	String  argName  =  getArgName()  + ",  expected  value: "  +  getMessage();	  String    argName    =    getArgName()    +   ":   "    +    getMessage();    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
370	[BUG]  [BUGGY]  AssertionFailedError.make(value,  null);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {        [BUGGY]  AssertionFailedError.make(value,  null);  [BUGGY]      if  (hasValueSeparator())  {  {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	AssertionFailedError.make(value,  null);	  AssertionFailedError.make(numberOfArgs,    value);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
371	[BUG]  [BUGGY]  if(hasArg  &&  isValueSeparator())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      {        [BUGGY]  if(hasArg  &&  isValueSeparator())  {  [BUGGY]      {  char  sep  =  getValueSeparator();  int  index  =  value.indexOf(sep);  while  (index  !=  -1)  {  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	424	425	2	replace	if(hasArg  &&  isValueSeparator())  {	  if(hasArg    &&    hasValueSeparator())    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
