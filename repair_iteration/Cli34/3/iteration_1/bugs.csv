bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Object  type  =  getNumberOfArgs();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    Object  type  =  getNumberOfArgs();  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    Object  type  =  getNumberOfArgs();		non-compiled	[CE]  <identifier>  expected	6	None	add
2	[BUG]  [BUGGY]    if(type!=  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type!=  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type!=  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	add
3	[BUG]  [BUGGY]    if(type  ==  null)  {  type  =  getNumberOfArgs();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type  ==  null)  {  type  =  getNumberOfArgs();  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type  ==  null)  {  type  =  getNumberOfArgs();  }		non-compiled	[CE]  <identifier>  expected	6	None	add
4	[BUG]  [BUGGY]    type  =  getNumberOfArgs();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    type  =  getNumberOfArgs();  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    type  =  getNumberOfArgs();		non-compiled	[CE]  <identifier>  expected	6	None	add
5	[BUG]  [BUGGY]    if(type!=  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type!=  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type!=  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	add
6	[BUG]  [BUGGY]  return  this.type;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  return  this.type;  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  this.type;	return  type;  	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  return(type  ==  null)?  null  :  type;  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type;	return  type;  	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  return  getNumberOfArgs();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  return  getNumberOfArgs();  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs();	return  type;  	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  return(type  ==  null?  null  :  type.toString());  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  return(type  ==  null?  null  :  type.toString());  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null?  null  :  type.toString());	return  type;  	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]    if(type!=  null)  {  type  =  getNumberOfArgs();  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type!=  null)  {  type  =  getNumberOfArgs();  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type!=  null)  {  type  =  getNumberOfArgs();  }		non-compiled	[CE]  <identifier>  expected	6	None	add
11	[BUG]  [BUGGY]    if(type!=  null)  {  type  =  getType();  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type!=  null)  {  type  =  getType();  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type!=  null)  {  type  =  getType();  }		non-compiled	[CE]  <identifier>  expected	6	None	add
12	[BUG]  [BUGGY]    if(type  ==  null)  {  type  =  getType();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type  ==  null)  {  type  =  getType();  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type  ==  null)  {  type  =  getType();  }		non-compiled	[CE]  <identifier>  expected	6	None	add
13	[BUG]  [BUGGY]    if(type!=  null)  {  type  =  getNumberOfArgs().get(0);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type!=  null)  {  type  =  getNumberOfArgs().get(0);  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type!=  null)  {  type  =  getNumberOfArgs().get(0);  }		non-compiled	[CE]  <identifier>  expected	6	None	add
14	[BUG]  [BUGGY]  if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	return  type;  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
15	[BUG]  [BUGGY]  if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }	return  type;  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
16	[BUG]  [BUGGY]  if(type!=  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  if(type!=  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	return  type;  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
17	[BUG]  [BUGGY]    if(type!=  null)  {  type  =  getClass().getName();  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type!=  null)  {  type  =  getClass().getName();  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type!=  null)  {  type  =  getClass().getName();  }		non-compiled	[CE]  <identifier>  expected	6	None	add
18	[BUG]  [BUGGY]    if(type!=  null)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]      AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    if(type!=  null)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    if(type!=  null)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	add
19	[BUG]  [BUGGY]    char  type  =  getClass().getName();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]    char  type  =  getClass().getName();  [BUGGY]  return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	    char  type  =  getClass().getName();		non-compiled	[CE]  <identifier>  expected	6	None	add
20	[BUG]  [BUGGY]  return(type  ==  null?  null  :  type.getName());  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  Object  getType()  {  [BUGGY]  return(type  ==  null?  null  :  type.getName());  [BUGGY]  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null?  null  :  type.getName());	return  type;  	non-compiled	[CE]  <identifier>  expected	5	None	replace
