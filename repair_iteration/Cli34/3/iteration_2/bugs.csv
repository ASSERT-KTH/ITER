bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	      if(type!=    null)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
2	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	      if(type!=    null)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
3	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	      if(type!=    null)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
4	[BUG]  [BUGGY]  Class  <?>  type  =  getNumberOfArgs();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Class  <?>  type  =  getNumberOfArgs();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getNumberOfArgs();	      if(type!=    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
5	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }	      if(type!=    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
6	[BUG]  [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }	      if(type!=    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
7	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
8	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
9	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
10	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
11	[BUG]  [BUGGY]  return(type  ==  null?  null  :  type.getQualifiedName());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null?  null  :  type.getQualifiedName());  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null?  null  :  type.getQualifiedName());	  return(type    ==    null?    null    :    type.getName());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
12	[BUG]  [BUGGY]  if(type  ==  null)  {  type  =  getNumberOfType();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  type  =  getNumberOfType();  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  type  =  getNumberOfType();  }	      if(type!=    null)    {    type    =    getNumberOfArgs();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  return  getNumberOfTypeArgs();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return  getNumberOfTypeArgs();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypeArgs();	  return    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  return  getNumberOfTypes();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return  getNumberOfTypes();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypes();	  return    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  return  getNumberOfArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return  getNumberOfArgs(numberOfArgs);  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs(numberOfArgs);	  return    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  return  getNumberOfArgs()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return  getNumberOfArgs()  +  1;  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs()  +  1;	  return    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  type  =  getType();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getType();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getType();	      if(type!=    null)    {    type    =    getType();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  return(type  ==  null? "null "  :  type.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null? "null "  :  type.toString());  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null? "null "  :  type.toString());	  return(type    ==    null?    null    :    type.toString());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  return(type!=  null?  null  :  type.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type!=  null?  null  :  type.toString());  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null?  null  :  type.toString());	  return(type    ==    null?    null    :    type.toString());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	      if(type!=    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
21	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	      if(type!=    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
22	[BUG]  [BUGGY]  type  =  getNumberOfType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getNumberOfType();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfType();	      type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  type  =  getNumberOfTypeArgs();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getNumberOfTypeArgs();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypeArgs();	      type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
25	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(this.type!=  null)  {  if(type!=  null)  {  return  this.type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(type!=  null)  {  return  this.type;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
27	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
28	[BUG]  [BUGGY]  String  type  =  getClass().getName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  String  type  =  getClass().getName();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	String  type  =  getClass().getName();	      char    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
29	[BUG]  [BUGGY]  Character  type  =  getClass().getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Character  type  =  getClass().getName();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Character  type  =  getClass().getName();	      char    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
30	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
31	[BUG]  [BUGGY]  type  =  getNumberOfArgs().get(0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getNumberOfArgs().get(0);  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfArgs().get(0);	      if(type!=    null)    {    type    =    getNumberOfArgs().get(0);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  type  =  getNumberOfArgs().get(1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getNumberOfArgs().get(1);  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfArgs().get(1);	      if(type!=    null)    {    type    =    getNumberOfArgs().get(0);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
33	[BUG]  [BUGGY]  Type  type  =  getNumberOfArgs().get(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Type  type  =  getNumberOfArgs().get(0);  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getNumberOfArgs().get(0);	      if(type!=    null)    {    type    =    getNumberOfArgs().get(0);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
34	[BUG]  [BUGGY]  type  =  getClass().getName();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getClass().getName();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getClass().getName();	      if(type!=    null)    {    type    =    getClass().getName();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  if(type  ==  null)  {  type  =  getClass().getName();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  type  =  getClass().getName();  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  type  =  getClass().getName();  }	      if(type!=    null)    {    type    =    getClass().getName();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
36	[BUG]  [BUGGY]  Object  type  =  getType();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Object  type  =  getType();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getType();	      Object    type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  Object  type  =  getNumberOfTypeArgs();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Object  type  =  getNumberOfTypeArgs();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNumberOfTypeArgs();	      Object    type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
38	[BUG]  [BUGGY]  Object  type  =  getNumberOfType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Object  type  =  getNumberOfType();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNumberOfType();	      Object    type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  return(this.type  ==  null)?  null  :  this.type;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(this.type  ==  null)?  null  :  this.type;  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type  ==  null)?  null  :  this.type;	  return    this.type;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  return(this.type!=  null)?  null  :  this.type;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(this.type!=  null)?  null  :  this.type;  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type!=  null)?  null  :  this.type;	  return    this.type;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  return(this.type  ==  null?  null  :  this.type);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(this.type  ==  null?  null  :  this.type);  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type  ==  null?  null  :  this.type);	  return    this.type;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.toString();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null)?  null  :  type.toString();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.toString();	  return(type    ==    null)?    null    :    type;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.getQualifiedName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null)?  null  :  type.getQualifiedName();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.getQualifiedName();	  return(type    ==    null)?    null    :    type;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null)?  null  :  type.getName();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.getName();	  return(type    ==    null)?    null    :    type;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  return  getType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return  getType();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getType();	  return    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  return  type.getNumberOfArgs();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return  type.getNumberOfArgs();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type.getNumberOfArgs();	  return    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  if(opt  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(opt  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  if(type!=  null)  {  return  this.type;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
48	[BUG]  [BUGGY]  Class  <?>  opt  =  getLongOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Class  <?>  opt  =  getLongOpt();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getLongOpt();	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
49	[BUG]  [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES);  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(UNLIMITED_VALUES);	      type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  Class  <?>  type  =  getClass().getName();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Class  <?>  type  =  getClass().getName();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getClass().getName();	      if(type!=    null)    {    type    =    getClass().getName();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
51	[BUG]  [BUGGY]  return(type  ==  null?  null  :  type.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null?  null  :  type.toCharArray());  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null?  null  :  type.toCharArray());	  return(type    ==    null?    null    :    type.toString());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  if(opt  ==  null)  {  if(type!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(opt  ==  null)  {  if(type!=  null)  {  return  type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  if(type!=  null)  {  return  type;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
54	[BUG]  [BUGGY]  Char  type  =  getClass().getName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Char  type  =  getClass().getName();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Char  type  =  getClass().getName();	      char    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
55	[BUG]  [BUGGY]  if(type  ==  null)  {  type  =  getNumberOfArgs().get(0);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  type  =  getNumberOfArgs().get(0);  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  type  =  getNumberOfArgs().get(0);  }	      if(type!=    null)    {    type    =    getNumberOfArgs().get(0);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
56	[BUG]  [BUGGY]  if(type  ==  null)  {  type  =  getNumberOfArgs().get(1);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  type  =  getNumberOfArgs().get(1);  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  type  =  getNumberOfArgs().get(1);  }	      if(type!=    null)    {    type    =    getNumberOfArgs().get(0);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
57	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }	      if(type!=    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
58	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.values();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null)?  null  :  type.values();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.values();	  return(type    ==    null)?    null    :    type;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  return(type  ==  null?  null  :  type.getValue());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null?  null  :  type.getValue());  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null?  null  :  type.getValue());	  return(type    ==    null?    null    :    type.getName());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
60	[BUG]  [BUGGY]  if(type!=  null)  {  type  =  getClass();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type!=  null)  {  type  =  getClass();  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  type  =  getClass();  }	      if(type!=    null)    {    type    =    getType();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
62	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt  ==  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
63	[BUG]  [BUGGY]  return  getNumberOfValues();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return  getNumberOfValues();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfValues();	  return    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  return  type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  type;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  if(type!=  null)  {  return  type;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
66	[BUG]  [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  instanceof  Option)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	      if(type!=    null)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
67	[BUG]  [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	      if(type!=    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
68	[BUG]  [BUGGY]  if(this.type!=  type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(this.type!=  type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
69	[BUG]  [BUGGY]  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
70	[BUG]  [BUGGY]  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
71	[BUG]  [BUGGY]  Object  type  =  getNumberOfTypes();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  Object  type  =  getNumberOfTypes();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNumberOfTypes();	      Object    type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
72	[BUG]  [BUGGY]  if(type  ==  null)  {  type  =  getClass();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  type  =  getClass();  }  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  type  =  getClass();  }	      if(type    ==    null)    {    type    =    getType();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
73	[BUG]  [BUGGY]  type  =  getNumberOfTypes();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  type  =  getNumberOfTypes();  [BUGGY]    return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypes();	      type    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
74	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
75	[BUG]  [BUGGY]  if(type!=  null)  {  return  type;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type!=  null)  {  return  type;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  return  type;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type!=    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
77	[BUG]  [BUGGY]  return(this.type!=  null?  this.type  :  type);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(this.type!=  null?  this.type  :  type);  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type!=  null?  this.type  :  type);	  return    this.type;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
78	[BUG]  [BUGGY]  return(this.type  ==  null?  this.type  :  type);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(this.type  ==  null?  this.type  :  type);  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type  ==  null?  this.type  :  type);	  return    this.type;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
79	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.name();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Object  getType()  {    [BUGGY]  return(type  ==  null)?  null  :  type.name();  [BUGGY]    }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.name();	  return(type    ==    null)?    null    :    type;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
