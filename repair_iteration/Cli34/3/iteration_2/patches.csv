bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Class  <?>  type  =  getType();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getType();	  if(type!=    null)    {    Class    <?>    type    =    getType();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
2	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }	  if(type!=    null)    {    Class    <?>    type    =    getType();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
3	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getType();  if(type.isPrimitive())  {  type  =  getType();  }	  if(type!=    null)    {    Class    <?>    type    =    getType();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
4	[BUG]  [BUGGY]  return(type!=  null)?  null  :  type.getQualifiedName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null)?  null  :  type.getQualifiedName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null)?  null  :  type.getQualifiedName();	  return(type    ==    null)?    null    :    type.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
5	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type  ==  null?  null  :  type.getQualifiedName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type  ==  null?  null  :  type.getQualifiedName();	  return(type    ==    null)?    null    :    type.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
6	[BUG]  [BUGGY]  return  getDescription();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getDescription();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getDescription();	  return    getType();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
7	[BUG]  [BUGGY]  return  getValueType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getValueType();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getValueType();	  return    getType();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
8	[BUG]  [BUGGY]  return  getType().toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getType().toString();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getType().toString();	  return    getType();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
9	[BUG]  [BUGGY]  return(type  ==  null?  null  :  type.getKey());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null?  null  :  type.getKey());  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null?  null  :  type.getKey());	  return(type    ==    null?    null    :    type.getValue());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
10	[BUG]  [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  this.type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  this.type;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	70	None	replace
11	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
12	[BUG]  [BUGGY]  if(this.type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	70	None	replace
13	[BUG]  [BUGGY]  if(hasArg)  {  if(type  ==  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  if(type  ==  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  if(type  ==  null)  {  return  this.type;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
14	[BUG]  [BUGGY]  type  =  getNumberOfTypeArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfTypeArgs(numberOfArgs);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypeArgs(numberOfArgs);	  type    =    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
15	[BUG]  [BUGGY]  type  =  getNumberOfTypeArgs()  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfTypeArgs()  -  1;  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypeArgs()  -  1;	  type    =    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
16	[BUG]  [BUGGY]  Object  type  =  getNumberOfArguments();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getNumberOfArguments();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNumberOfArguments();	  Object    type    =    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
17	[BUG]  [BUGGY]  Object  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getType();  if(type!=  null)  {  return  type;  }	  Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  Class  <?>  type  =  getNumberOfArgs();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getNumberOfArgs();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getNumberOfArgs();  if(type!=  null)  {  return  type;  }	  Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
19	[BUG]  [BUGGY]  Class  <?>  type  =  getTypeRegistry();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getTypeRegistry();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getTypeRegistry();  if(type!=  null)  {  return  type;  }	  Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
20	[BUG]  [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }	  if(type    ==    null)    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	30	None	replace
21	[BUG]  [BUGGY]  if(type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }	  if(type    ==    null)    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	30	None	replace
22	[BUG]  [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  type;  }	  if(type    ==    null)    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	30	None	replace
23	[BUG]  [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getNumberOfArgs();  if(opt  ==  null)  {  return  opt;  }	  Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
24	[BUG]  [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getLongOpt();  if(opt  ==  null)  {  return  opt;  }	  Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
25	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
26	[BUG]  [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt  ==  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt  ==  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getNumberOfArgs();  if(opt  ==  null)  {  return  type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
27	[BUG]  [BUGGY]  return  type.getNumberOfValues();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type.getNumberOfValues();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type.getNumberOfValues();	  return    getNumberOfValues();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
28	[BUG]  [BUGGY]  Object  type  =  getRequiredType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getRequiredType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getRequiredType();	  Object    type    =    getType();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
29	[BUG]  [BUGGY]  Object  type  =  getType(null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getType(null);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getType(null);	  Object    type    =    getType();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
30	[BUG]  [BUGGY]  Object  type  =  getNumberOfType(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getNumberOfType(numberOfArgs);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNumberOfType(numberOfArgs);	  Object    type    =    getNumberOfType();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
31	[BUG]  [BUGGY]  Object  type  =  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNativeType(UNKNOWN_TYPE);	  Object    type    =    getNumberOfType();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
32	[BUG]  [BUGGY]  return(type  ==  null?  this.type  :  type);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null?  this.type  :  type);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null?  this.type  :  type);	  return(this.type    ==    null?    this.type    :    type);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
33	[BUG]  [BUGGY]  return(this.type  ==  null?  this.type  :  this.values);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(this.type  ==  null?  this.type  :  this.values);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type  ==  null?  this.type  :  this.values);	  return(this.type    ==    null?    this.type    :    type);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
34	[BUG]  [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
35	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this;  }	  if(type    ==    null)    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
36	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.getValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.getValue();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.getValue();	  return(type    ==    null)?    null    :    type.getName();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
37	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.getSimpleName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.getSimpleName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.getSimpleName();	  return(type    ==    null)?    null    :    type.getName();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
38	[BUG]  [BUGGY]  Class  <?>  type  =  getNumberOfTypes();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getNumberOfTypes();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getNumberOfTypes();	  Class    <?>    type    =    getNumberOfArgs();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
39	[BUG]  [BUGGY]  Class  <?>  type  =  getNumberOfArgs(numberOfArgs);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getNumberOfArgs(numberOfArgs);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getNumberOfArgs(numberOfArgs);	  Class    <?>    type    =    getNumberOfArgs();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
40	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isArray())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isArray())  {  type  =  getType();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isArray())  {  type  =  getType();  }	  if(hasArg)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
41	[BUG]  [BUGGY]  type  =  getClass();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getClass();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getClass();	  if(type!=    null)    {    type    =    getClass();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
42	[BUG]  [BUGGY]  return  getNumberOfTypeArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypeArgs(numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypeArgs(numberOfArgs);	  return    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  return  getType(numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getType(numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getType(numberOfArgs);	  return    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  return  getNumberOfTypes(numberOfArgs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypes(numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypes(numberOfArgs);	  return    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  return  getValues(numberOfArgs);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getValues(numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getValues(numberOfArgs);	  return    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
46	[BUG]  [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  instanceof  Class  <?>)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  instanceof  Class  <?>)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	  if(type    instanceof    Option)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	66	None	replace
47	[BUG]  [BUGGY]  return  this.type.getNumberOfArgs();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  this.type.getNumberOfArgs();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  this.type.getNumberOfArgs();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
48	[BUG]  [BUGGY]  return  type.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type.getName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type.getName();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
49	[BUG]  [BUGGY]  return  type.getQualifiedName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type.getQualifiedName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type.getQualifiedName();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
50	[BUG]  [BUGGY]  return  type.getSimpleName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type.getSimpleName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type.getSimpleName();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
51	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type  ==  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type  ==  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getType();  if(type  ==  null)  {  return  type;  }	  if(hasArg)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
52	[BUG]  [BUGGY]  Constructor  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Constructor  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Constructor  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	  if(hasArg)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
53	[BUG]  [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES,  argName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES,  argName);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(UNLIMITED_VALUES,  argName);	  type    =    getNativeType(UNLIMITED_VALUES);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
54	[BUG]  [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES,  valuesep);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES,  valuesep);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(UNLIMITED_VALUES,  valuesep);	  type    =    getNativeType(UNLIMITED_VALUES);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
55	[BUG]  [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES,  DEFAULT_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES,  DEFAULT_TYPE);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(UNLIMITED_VALUES,  DEFAULT_TYPE);	  type    =    getNativeType(UNLIMITED_VALUES);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
56	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getLongOpt();  if(opt!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  type  =  getLongOpt();  if(opt!=  null)  {  return  type;  }	  if(type    ==    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	76	None	replace
57	[BUG]  [BUGGY]  type  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getClass().getSimpleName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getClass().getSimpleName();	  type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
58	[BUG]  [BUGGY]  type  =  getType().getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getType().getName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getType().getName();	  type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
59	[BUG]  [BUGGY]  type  =  getClass().getRequiredType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getClass().getRequiredType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getClass().getRequiredType();	  type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
60	[BUG]  [BUGGY]  if(this.type!=  null)return  null;  if(this.type!=  null)return  null;  if(this.type.isPrimitive())  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)return  null;  if(this.type!=  null)return  null;  if(this.type.isPrimitive())  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)return  null;  if(this.type!=  null)return  null;  if(this.type.isPrimitive())  {  return  this.type;  }	  return(this.type!=    null)?    null    :    this.type;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
61	[BUG]  [BUGGY]  if(this.type!=  null)return  null;  if(this.type!=  null)return  null;  if(this.type  ==  type)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)return  null;  if(this.type!=  null)return  null;  if(this.type  ==  type)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)return  null;  if(this.type!=  null)return  null;  if(this.type  ==  type)  {  return  this.type;  }	  return(this.type!=    null)?    null    :    this.type;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
62	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(this.type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  if(this.type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(this.type!=  null)  {  return  this.type;  }	  if(this.type!=    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
63	[BUG]  [BUGGY]  if(type  ==  null)  {  if(this.type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  if(this.type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  if(this.type!=  null)  {  return  this.type;  }	  if(this.type!=    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
64	[BUG]  [BUGGY]  if(type!=  null)  {  if(this.type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  if(this.type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  if(this.type!=  null)  {  return  this.type;  }	  if(this.type!=    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
65	[BUG]  [BUGGY]  if(this.type  ==  null)  {  if(this.type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type  ==  null)  {  if(this.type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type  ==  null)  {  if(this.type!=  null)  {  return  this.type;  }	  if(this.type!=    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
66	[BUG]  [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getNumberOfArgs();  if(opt!=  null)  {  return  opt;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	27	None	replace
67	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	27	None	replace
68	[BUG]  [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  if(opt!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getNumberOfArgs();  if(opt!=  null)  {  return  type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	27	None	replace
69	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  this.type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();  if(opt  ==  null)  {  return  this.type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    this.type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
70	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalOpt();  if(opt!=  null)  {  return  this.type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalOpt();  if(opt!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalOpt();  if(opt!=  null)  {  return  this.type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    this.type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
71	[BUG]  [BUGGY]  if(type!=  this.type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  this.type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  this.type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(this.type!=    type)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	68	None	replace
72	[BUG]  [BUGGY]  if(this.type!=  type)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  type)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  type)  {  return  this.type;  }	  if(this.type!=    type)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
73	[BUG]  [BUGGY]  if(hasArg)  {  if(type!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  if(type!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  if(type!=  null)  {  return  type;  }	  if(type    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
74	[BUG]  [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  if(type!=  null)  {  return  type;  }	  if(type    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
75	[BUG]  [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  if(type!=  null)  {  return  null;  }	  if(type    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
76	[BUG]  [BUGGY]  return  getNumberOfArgs()  /  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfArgs()  /  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs()  /  1;	  return    getNumberOfArgs()    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
77	[BUG]  [BUGGY]  return  getNumberOfArgs()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfArgs()  -  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs()  -  1;	  return    getNumberOfArgs()    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
78	[BUG]  [BUGGY]  String  type  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  String  type  =  getClass().getSimpleName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	String  type  =  getClass().getSimpleName();	  String    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
79	[BUG]  [BUGGY]  String  type  =  getType().getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  String  type  =  getType().getName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	String  type  =  getType().getName();	  String    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
80	[BUG]  [BUGGY]  String  type  =  getClass().getName()  + "; ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  String  type  =  getClass().getName()  + "; ";  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	String  type  =  getClass().getName()  + "; ";	  String    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
81	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type  ==  null?  null  :  type.toString();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type  ==  null?  null  :  type.toString();	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
82	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.toLowerCase();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.toLowerCase();	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
83	[BUG]  [BUGGY]  return(type!=  null)?  null  :  type.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null)?  null  :  type.toString();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null)?  null  :  type.toString();	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
84	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(type!=    null)    {    Class    <?>    type    =    getType();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	67	None	replace
85	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getType();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(type!=    null)    {    Class    <?>    type    =    getType();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	67	None	replace
86	[BUG]  [BUGGY]  Type  type  =  getType().get(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Type  type  =  getType().get(0);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getType().get(0);	  Type    type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
87	[BUG]  [BUGGY]  Type  type  =  getNumberOfTypes().get(0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Type  type  =  getNumberOfTypes().get(0);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getNumberOfTypes().get(0);	  Type    type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
88	[BUG]  [BUGGY]  Type  type  =  getNumberOfArgs().get(numberOfArgs);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Type  type  =  getNumberOfArgs().get(numberOfArgs);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getNumberOfArgs().get(numberOfArgs);	  Type    type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
89	[BUG]  [BUGGY]  return  getNumberOfArguments();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfArguments();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArguments();	  return    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
90	[BUG]  [BUGGY]  return  getNumberOfTypes().toArray(new  String[size()  ]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypes().toArray(new  String[size()  ]);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypes().toArray(new  String[size()  ]);	  return    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
91	[BUG]  [BUGGY]  if(type  ==  null)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  this.type;  }	  if(type    ==    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
92	[BUG]  [BUGGY]  if(type  ==  null)  {  return  getNumberOfArgs();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  return  getNumberOfArgs();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  getNumberOfArgs();  }	  if(type    ==    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
93	[BUG]  [BUGGY]  if(type!=  null)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  return  this.type;  }	  if(type    ==    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
94	[BUG]  [BUGGY]  if(type  ==  null)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  null;  }	  if(type    ==    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
95	[BUG]  [BUGGY]  return(type!=  null?  null  :  type.getQualifiedName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null?  null  :  type.getQualifiedName());  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null?  null  :  type.getQualifiedName());	  return(type    ==    null?    null    :    type.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  return(type  ==  null? "null "  :  type.getQualifiedName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null? "null "  :  type.getQualifiedName());  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null? "null "  :  type.getQualifiedName());	  return(type    ==    null?    null    :    type.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
97	[BUG]  [BUGGY]  type  =  getRequiredType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getRequiredType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getRequiredType();	  type    =    getType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  type  =  getType(null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getType(null);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getType(null);	  type    =    getType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
99	[BUG]  [BUGGY]  type  =  getDescription();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getDescription();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getDescription();	  type    =    getType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
100	[BUG]  [BUGGY]  return(type!=  null)?  null  :  type.values();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null)?  null  :  type.values();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null)?  null  :  type.values();	  return(type    ==    null)?    null    :    type.values();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
101	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.values();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type  ==  null?  null  :  type.values();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type  ==  null?  null  :  type.values();	  return(type    ==    null)?    null    :    type.values();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
102	[BUG]  [BUGGY]  Char  type  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Char  type  =  getClass().getSimpleName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Char  type  =  getClass().getSimpleName();	  Char    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
103	[BUG]  [BUGGY]  if(type!=  null)  {  if(opt  ==  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  if(opt  ==  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  if(opt  ==  null)  {  return  type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
104	[BUG]  [BUGGY]  if(longOpt  ==  null)  {  if(type!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(longOpt  ==  null)  {  if(type!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(longOpt  ==  null)  {  if(type!=  null)  {  return  type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
105	[BUG]  [BUGGY]  if(type  ==  null)  {  if(opt  ==  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  if(opt  ==  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  if(opt  ==  null)  {  return  type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
106	[BUG]  [BUGGY]  return(type!=  null?  this.type  :  type);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null?  this.type  :  type);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null?  this.type  :  type);	  return(this.type!=    null?    this.type    :    type);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
107	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(opt  ==  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  if(opt  ==  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(opt  ==  null)  {  return  this.type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
108	[BUG]  [BUGGY]  if(longOpt  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(longOpt  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(longOpt  ==  null)  {  if(type!=  null)  {  return  this.type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
109	[BUG]  [BUGGY]  if(hasArg)  {  if(type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  if(type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  if(type!=  null)  {  return  this.type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  if(hasArg)  {  if(opt  ==  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  if(opt  ==  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  if(opt  ==  null)  {  return  this.type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
111	[BUG]  [BUGGY]  type  =  getNumberOfArgs().get(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfArgs().get(numberOfArgs);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfArgs().get(numberOfArgs);	  type    =    getNumberOfArgs().get(1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
112	[BUG]  [BUGGY]  type  =  getType().get(1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getType().get(1);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getType().get(1);	  type    =    getNumberOfArgs().get(1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
113	[BUG]  [BUGGY]  type  =  getNumberOfTypes().get(1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfTypes().get(1);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypes().get(1);	  type    =    getNumberOfArgs().get(1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
114	[BUG]  [BUGGY]  return(this.type!=  null?  null  :  this.type);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(this.type!=  null?  null  :  this.type);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type!=  null?  null  :  this.type);	  return(this.type    ==    null?    null    :    this.type);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
115	[BUG]  [BUGGY]  return  type  ==  null?  null  :  type.name();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type  ==  null?  null  :  type.name();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type  ==  null?  null  :  type.name();	  return(type    ==    null)?    null    :    type.name();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
116	[BUG]  [BUGGY]  return(type!=  null)?  null  :  type.name();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null)?  null  :  type.name();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null)?  null  :  type.name();	  return(type    ==    null)?    null    :    type.name();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
117	[BUG]  [BUGGY]  if(type  ==  null)return  null;  if(type.isPrimitive())  {  return  type.name();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)return  null;  if(type.isPrimitive())  {  return  type.name();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)return  null;  if(type.isPrimitive())  {  return  type.name();  }	  return(type    ==    null)?    null    :    type.name();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
118	[BUG]  [BUGGY]  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }	  if(type    ==    null)    {    Class    <?>    longOpt    =    getLongOpt();    if(longOpt!=    null)    {    return    longOpt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	74	None	replace
119	[BUG]  [BUGGY]  Class  <?>  longOpt  =  getLongOpt();  if(longOpt  ==  null)  {  return  longOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  longOpt  =  getLongOpt();  if(longOpt  ==  null)  {  return  longOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  longOpt  =  getLongOpt();  if(longOpt  ==  null)  {  return  longOpt;  }	  if(type    ==    null)    {    Class    <?>    longOpt    =    getLongOpt();    if(longOpt!=    null)    {    return    longOpt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	74	None	replace
120	[BUG]  [BUGGY]  if(type!=  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }	  if(type    ==    null)    {    Class    <?>    longOpt    =    getLongOpt();    if(longOpt!=    null)    {    return    longOpt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	74	None	replace
121	[BUG]  [BUGGY]  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(hasArg)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
122	[BUG]  [BUGGY]  Annotation  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Annotation  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Annotation  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(hasArg)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	21	None	replace
123	[BUG]  [BUGGY]  Character  type  =  getClass().getSimpleName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Character  type  =  getClass().getSimpleName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Character  type  =  getClass().getSimpleName();	  Character    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
124	[BUG]  [BUGGY]  Character  type  =  getType().getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Character  type  =  getType().getName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Character  type  =  getType().getName();	  Character    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
125	[BUG]  [BUGGY]  Character  type  =  getClass().getRequiredType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Character  type  =  getClass().getRequiredType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Character  type  =  getClass().getRequiredType();	  Character    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
126	[BUG]  [BUGGY]  return  getNumberOfTypeArgs()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypeArgs()  +  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypeArgs()  +  1;	  return    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
127	[BUG]  [BUGGY]  type  =  getNumberOfArguments();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfArguments();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfArguments();	  type    =    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
128	[BUG]  [BUGGY]  type  =  getType().get(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getType().get(0);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getType().get(0);	  type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
129	[BUG]  [BUGGY]  type  =  getNumberOfTypeArgs().get(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfTypeArgs().get(0);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypeArgs().get(0);	  type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
130	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalType();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalType();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalType();	  if(opt    ==    null)    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
131	[BUG]  [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(UNKNOWN_TYPE);	  type    =    getNumberOfType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
132	[BUG]  [BUGGY]  type  =  getNativeType(NO_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNativeType(NO_TYPE);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(NO_TYPE);	  type    =    getNumberOfType();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
133	[BUG]  [BUGGY]  if(this.type  ==  null)return  null;  if(this.type!=  null)return  null;  if(this.type.isPrimitive())  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type  ==  null)return  null;  if(this.type!=  null)return  null;  if(this.type.isPrimitive())  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type  ==  null)return  null;  if(this.type!=  null)return  null;  if(this.type.isPrimitive())  {  return  this.type;  }	  return(this.type    ==    null)?    null    :    this.type;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
134	[BUG]  [BUGGY]  Class  <?>  type  =  getClass().getSimpleName();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getClass().getSimpleName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getClass().getSimpleName();	  Class    <?>    type    =    getClass().getName();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	50	None	replace
135	[BUG]  [BUGGY]  Class  <?>  type  =  getType().getName();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getType().getName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getType().getName();	  Class    <?>    type    =    getClass().getName();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	50	None	replace
136	[BUG]  [BUGGY]  Class  <?>  type  =  getClass().getRawClass();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getClass().getRawClass();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getClass().getRawClass();	  Class    <?>    type    =    getClass().getName();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	50	None	replace
137	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalOpt();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalOpt();	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	48	None	replace
138	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalArg();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalArg();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalArg();	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	48	None	replace
139	[BUG]  [BUGGY]  Class  <?>  opt  =  type.getLongOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  type.getLongOpt();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  type.getLongOpt();	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	48	None	replace
140	[BUG]  [BUGGY]  Object  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    this.type;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
141	[BUG]  [BUGGY]  type  =  getClass().getReturnType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getClass().getReturnType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getClass().getReturnType();	  type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
142	[BUG]  [BUGGY]  type  =  getClass().getDescription();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getClass().getDescription();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getClass().getDescription();	  type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
143	[BUG]  [BUGGY]  Class  <?>  opt  =  getType();  if(opt  ==  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getType();  if(opt  ==  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getType();  if(opt  ==  null)  {  return  opt;  }	  Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
144	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalLongOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOptionalLongOpt();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOptionalLongOpt();	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	48	None	replace
145	[BUG]  [BUGGY]  Type  type  =  getTypeOfArgs().get(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Type  type  =  getTypeOfArgs().get(0);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getTypeOfArgs().get(0);	  Type    type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
146	[BUG]  [BUGGY]  Type  type  =  getTypes().get(0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Type  type  =  getTypes().get(0);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getTypes().get(0);	  Type    type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
147	[BUG]  [BUGGY]  if(type!=  null)  {  if(opt!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  if(opt!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  if(opt!=  null)  {  return  type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
148	[BUG]  [BUGGY]  if(longOpt!=  null)  {  if(type!=  null)  {  return  type;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(longOpt!=  null)  {  if(type!=  null)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(longOpt!=  null)  {  if(type!=  null)  {  return  type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
149	[BUG]  [BUGGY]  return  type.getValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type.getValue();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type.getValue();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
150	[BUG]  [BUGGY]  return  type.getValues();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  type.getValues();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  type.getValues();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
151	[BUG]  [BUGGY]  return  getNumberOfTypes().values();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypes().values();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypes().values();	  return    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
152	[BUG]  [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getOptionalType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getOptionalType();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  instanceof  Option)  {  Class  <?>  type  =  getOptionalType();  if(type!=  null)  {  return  type;  }	  if(type    instanceof    Option)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	66	None	replace
153	[BUG]  [BUGGY]  if(!(type  instanceof  Option))  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(!(type  instanceof  Option))  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(!(type  instanceof  Option))  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	  if(type    instanceof    Option)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	66	None	replace
154	[BUG]  [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getValue();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getValue();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  instanceof  Option)  {  Class  <?>  type  =  getValue();  if(type!=  null)  {  return  type;  }	  if(type    instanceof    Option)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	66	None	replace
155	[BUG]  [BUGGY]  type  =  getNumberOfTypes(numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfTypes(numberOfArgs);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypes(numberOfArgs);	  type    =    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
156	[BUG]  [BUGGY]  type  =  getTypeOfArgs().get(1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getTypeOfArgs().get(1);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getTypeOfArgs().get(1);	  type    =    getNumberOfArgs().get(1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
157	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.names();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.names();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.names();	  return(type    ==    null)?    null    :    type.values();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
158	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.getValues();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.getValues();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.getValues();	  return(type    ==    null)?    null    :    type.values();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
159	[BUG]  [BUGGY]  if(opt  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }	  if(type    ==    null)    {    Class    <?>    longOpt    =    getLongOpt();    if(longOpt!=    null)    {    return    longOpt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	74	None	replace
160	[BUG]  [BUGGY]  if(type  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  LongOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  LongOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  LongOpt;  }	  if(type    ==    null)    {    Class    <?>    longOpt    =    getLongOpt();    if(longOpt!=    null)    {    return    longOpt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	74	None	replace
161	[BUG]  [BUGGY]  if(opt!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(opt    ==    null)    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
162	[BUG]  [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(opt    ==    null)    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
163	[BUG]  [BUGGY]  Character  type  =  getClass().getAstRoot(String.class);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Character  type  =  getClass().getAstRoot(String.class);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Character  type  =  getClass().getAstRoot(String.class);	  Character    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
164	[BUG]  [BUGGY]  if(this.type  ==  null)return  null;  if(this.type!=  null)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type  ==  null)return  null;  if(this.type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type  ==  null)return  null;  if(this.type!=  null)  {  return  this.type;  }	  return(this.type!=    null)?    null    :    this.type;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
165	[BUG]  [BUGGY]  if(this.type!=  null)return  null;  if(this.type!=  null)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)return  null;  if(this.type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)return  null;  if(this.type!=  null)  {  return  this.type;  }	  return(this.type!=    null)?    null    :    this.type;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
166	[BUG]  [BUGGY]  return  getNumberOfTypeArguments();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypeArguments();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypeArguments();	  return    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
167	[BUG]  [BUGGY]  return(type!=  null?   "null "  :  type.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null?   "null "  :  type.toString());  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null?   "null "  :  type.toString());	  return(type    ==    null?   "null   "    :    type.toString());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
168	[BUG]  [BUGGY]  return(this.type  ==  null)?  null  :  this.values;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(this.type  ==  null)?  null  :  this.values;  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type  ==  null)?  null  :  this.values;	  return(this.type    ==    null)?    null    :    this.type;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
169	[BUG]  [BUGGY]  Class  <?>  opt  =  getType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getType();  if(opt!=  null)  {  return  opt;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	27	None	replace
170	[BUG]  [BUGGY]  if(hasArg)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	70	None	replace
171	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	70	None	replace
172	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	70	None	replace
173	[BUG]  [BUGGY]  if(type!=  null)  {  return  getType();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  return  getType();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  return  getType();  }	  if(type    ==    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
174	[BUG]  [BUGGY]  if(optionalArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(optionalArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(optionalArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive())  {  type  =  getType();  }	  if(hasArg)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
175	[BUG]  [BUGGY]  if(optionalArg)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(optionalArg)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(optionalArg)  {  Class  <?>  type  =  getType();  if(type!=  null)  {  return  type;  }	  if(hasArg)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
176	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  if(type!=  null)  {  return  type;  }	  if(hasArg)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
177	[BUG]  [BUGGY]  Object  type  =  getTypes();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getTypes();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getTypes();	  Object    type    =    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
178	[BUG]  [BUGGY]  Object  type  =  getNativeType(UNLIMITED_VALUES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getNativeType(UNLIMITED_VALUES);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNativeType(UNLIMITED_VALUES);	  Object    type    =    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
179	[BUG]  [BUGGY]  String  type  =  getClass().getName()  + "_ "+getArgName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  String  type  =  getClass().getName()  + "_ "+getArgName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	String  type  =  getClass().getName()  + "_ "+getArgName();	  String    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
180	[BUG]  [BUGGY]  if(this.type  ==  type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type  ==  type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type  ==  type)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(this.type!=    type)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	68	None	replace
181	[BUG]  [BUGGY]  if(this.type!=  longOpt)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  longOpt)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  longOpt)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(this.type!=    type)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	68	None	replace
182	[BUG]  [BUGGY]  if(hasArg)  {  if(opt!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  if(opt!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  if(opt!=  null)  {  return  this.type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
183	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(opt!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  if(opt!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(opt!=  null)  {  return  this.type;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
184	[BUG]  [BUGGY]  return  getNumberOfArgs(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfArgs(numberOfArgs  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs(numberOfArgs  -  1);	  return    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
185	[BUG]  [BUGGY]  return  getNumberOfArgs(values);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfArgs(values);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs(values);	  return    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
186	[BUG]  [BUGGY]  Class  <?>  type  =  getClass().getReturnType();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getClass().getReturnType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getClass().getReturnType();	  Class    <?>    type    =    getClass().getName();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	50	None	replace
187	[BUG]  [BUGGY]  Object  type  =  getTypeArgs();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getTypeArgs();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getTypeArgs();	  Object    type    =    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
188	[BUG]  [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  if(type!=  null)  {  return  this.type;  }	  if(this.type!=    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
189	[BUG]  [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  if(type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  if(type!=  null)  {  return  this.type;  }	  if(this.type!=    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
190	[BUG]  [BUGGY]  if(this.type  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type  ==  null)  {  if(type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type  ==  null)  {  if(type!=  null)  {  return  this.type;  }	  if(this.type!=    null)    {    if(type!=    null)    {    return    this.type;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
191	[BUG]  [BUGGY]  type  =  getNumberOfTypeArgs()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfTypeArgs()  +  1;  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfTypeArgs()  +  1;	  type    =    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
192	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.toCharArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.toCharArray();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.toCharArray();	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
193	[BUG]  [BUGGY]  Type  type  =  getType();  if(type!=  null)  {  return  type;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Type  type  =  getType();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getType();  if(type!=  null)  {  return  type;  }	  Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
194	[BUG]  [BUGGY]  type  =  getNumberOfArgs().get(null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfArgs().get(null);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfArgs().get(null);	  type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
195	[BUG]  [BUGGY]  type  =  getTypeRegistry().getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getTypeRegistry().getNativeType(UNKNOWN_TYPE);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getTypeRegistry().getNativeType(UNKNOWN_TYPE);	  type    =    getType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
196	[BUG]  [BUGGY]  type  =  getOptionalType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getOptionalType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getOptionalType();	  type    =    getType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
197	[BUG]  [BUGGY]  return(type!=  null?  null  :  type.toCharArray());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type!=  null?  null  :  type.toCharArray());  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type!=  null?  null  :  type.toCharArray());	  return(type    ==    null?    null    :    type.toCharArray());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
198	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	69	None	replace
199	[BUG]  [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  null)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	69	None	replace
200	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  longOpt  =  getLongOpt();  if(longOpt!=  null)  {  return  longOpt;  }	  if(type    ==    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	53	None	replace
201	[BUG]  [BUGGY]  if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  return  type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	76	None	replace
202	[BUG]  [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  longOpt  =  getLongOpt();  if(opt!=  null)  {  return  longOpt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  longOpt  =  getLongOpt();  if(opt!=  null)  {  return  longOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  type;  }  else  {  Class  <?>  longOpt  =  getLongOpt();  if(opt!=  null)  {  return  longOpt;  }	  if(type    ==    null)    {    return    type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	76	None	replace
203	[BUG]  [BUGGY]  Object  type  =  getTypeRegistry();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getTypeRegistry();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getTypeRegistry();	  Object    type    =    getType();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
204	[BUG]  [BUGGY]  Object  type  =  getBaseType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getBaseType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getBaseType();	  Object    type    =    getType();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
205	[BUG]  [BUGGY]  Class  <?>  type  =  getTypeOfArgs();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  type  =  getTypeOfArgs();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  type  =  getTypeOfArgs();	  Class    <?>    type    =    getNumberOfArgs();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
206	[BUG]  [BUGGY]  if(type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
207	[BUG]  [BUGGY]  return(this.type  ==  null?  this.type  :  getNumberOfArgs());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(this.type  ==  null?  this.type  :  getNumberOfArgs());  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type  ==  null?  this.type  :  getNumberOfArgs());	  return(this.type    ==    null?    this.type    :    type);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
208	[BUG]  [BUGGY]  type  =  getNativeType(UNLIMITED_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNativeType(UNLIMITED_TYPE);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(UNLIMITED_TYPE);	  type    =    getNativeType(UNLIMITED_VALUES);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
209	[BUG]  [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNativeType(UNLIMITED_VALUES  +  1);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNativeType(UNLIMITED_VALUES  +  1);	  type    =    getNativeType(UNLIMITED_VALUES);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
210	[BUG]  [BUGGY]  return  getType(null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getType(null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getType(null);	  return    getType();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
211	[BUG]  [BUGGY]  return  getValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getValue();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getValue();	  return    getType();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
212	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.getClass();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.getClass();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.getClass();	  return(type    ==    null)?    null    :    type.getName();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
213	[BUG]  [BUGGY]  if(type!=  null)  {  type  =  getNumberOfType();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  type  =  getNumberOfType();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  type  =  getNumberOfType();  }	  if(type    ==    null)    {    type    =    getNumberOfType();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
214	[BUG]  [BUGGY]  type  =  getNumberType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberType();	  type    =    getType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
215	[BUG]  [BUGGY]  if(opt  ==  getOptionalType())  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt  ==  getOptionalType())  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  getOptionalType())  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    this.type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
216	[BUG]  [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt  ==  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  this.type;  }	  Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    this.type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	24	None	replace
217	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  type.isPrimitive())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  type.isPrimitive())  {  type  =  getType();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getNumberOfArgs();  type.isPrimitive())  {  type  =  getType();  }	  if(hasArg)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	57	None	replace
218	[BUG]  [BUGGY]  if(opt!=  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(opt!=  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(opt!=  null)  {  Class  <?>  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  if(opt    ==    null)    {    Class    <?>    opt    =    getOptionalType();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	26	None	replace
219	[BUG]  [BUGGY]  return  getNumberOfArgs()  [0];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfArgs()  [0];  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfArgs()  [0];	  return    getNumberOfArgs()    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
220	[BUG]  [BUGGY]  Type  type  =  getNumberOfArgs().get(null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Type  type  =  getNumberOfArgs().get(null);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Type  type  =  getNumberOfArgs().get(null);	  Type    type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
221	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  Class  <?>  type  =  getNumberOfArgs();  if(type.isPrimitive()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(type    ==    null)    {    Class    <?>    type    =    getNumberOfArgs();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	20	None	replace
222	[BUG]  [BUGGY]  if(type  ==  null  ||  hasArg)  {  return  type;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null  ||  hasArg)  {  return  type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null  ||  hasArg)  {  return  type;  }	  if(type    ==    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
223	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  return  this;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  return  this;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  return  this;  }	  if(type    ==    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
224	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  type  =  getClass();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  type  =  getClass();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  type  =  getClass();  }	  if(type    ==    null)    {    type    =    getClass();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
225	[BUG]  [BUGGY]  type  =  getClass().getComponentType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getClass().getComponentType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getClass().getComponentType();	  type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
226	[BUG]  [BUGGY]  type  =  getNumberOfArgs().get(0,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  type  =  getNumberOfArgs().get(0,  1);  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	type  =  getNumberOfArgs().get(0,  1);	  type    =    getNumberOfArgs().get(0);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
227	[BUG]  [BUGGY]  return  this.type.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  this.type.getName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  this.type.getName();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
228	[BUG]  [BUGGY]  return  this.type.getLongOpt();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  this.type.getLongOpt();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  this.type.getLongOpt();	  return    type.getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
229	[BUG]  [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isArray()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isArray()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isArray()  ||  type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(type!=    null)    {    Class    <?>    type    =    getType();    if(type.isPrimitive()    ||    type.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	67	None	replace
230	[BUG]  [BUGGY]  Character  type  =  getClass().getDeclaringClass().getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Character  type  =  getClass().getDeclaringClass().getName();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Character  type  =  getClass().getDeclaringClass().getName();	  Character    type    =    getClass().getName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
231	[BUG]  [BUGGY]  return(this.type  ==  null? "null "  :  this.type);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(this.type  ==  null? "null "  :  this.type);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(this.type  ==  null? "null "  :  this.type);	  return(this.type    ==    null?    null    :    this.type);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
232	[BUG]  [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isArray())  {  type  =  getType();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isArray())  {  type  =  getType();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type!=  null)  {  Class  <?>  type  =  getType();  if(type.isArray())  {  type  =  getType();  }	  if(type!=    null)    {    Class    <?>    type    =    getType();    if(type.isPrimitive())    {    type    =    getType();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
233	[BUG]  [BUGGY]  Object  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  opt  =  getOptionalType();  if(opt!=  null)  {  return  opt;  }	  Class    <?>    opt    =    getOptionalType();    if(opt    ==    null)    {    return    opt;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
234	[BUG]  [BUGGY]  if(longOpt  ==  null)  {  if(type!=  null)  {  return  longOpt;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(longOpt  ==  null)  {  if(type!=  null)  {  return  longOpt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(longOpt  ==  null)  {  if(type!=  null)  {  return  longOpt;  }	  if(opt    ==    null)    {    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
235	[BUG]  [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getClass();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(hasArg)  {  Class  <?>  type  =  getClass();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(hasArg)  {  Class  <?>  type  =  getClass();  if(type!=  null)  {  return  type;  }	  if(hasArg)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	replace
236	[BUG]  [BUGGY]  return  getNumberOfTypes().toArray(new  char[size()  ]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypes().toArray(new  char[size()  ]);  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypes().toArray(new  char[size()  ]);	  return    getNumberOfTypes();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
237	[BUG]  [BUGGY]  if(type  ==  null)?  null  :  type.toString();  if(hasArg)  {  return(type  ==  null)?  null  :  type.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)?  null  :  type.toString();  if(hasArg)  {  return(type  ==  null)?  null  :  type.toLowerCase();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)?  null  :  type.toString();  if(hasArg)  {  return(type  ==  null)?  null  :  type.toLowerCase();  }	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
238	[BUG]  [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getClass();  if(type!=  null)  {  return  type;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  instanceof  Option)  {  Class  <?>  type  =  getClass();  if(type!=  null)  {  return  type;  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  instanceof  Option)  {  Class  <?>  type  =  getClass();  if(type!=  null)  {  return  type;  }	  if(type    instanceof    Option)    {    Class    <?>    type    =    getType();    if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	66	None	replace
239	[BUG]  [BUGGY]  if(this.type  ==  null)return  null;  if(this.type!=  null)return  this.type;  if(this.type!=  null)  {  return  this.type;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type  ==  null)return  null;  if(this.type!=  null)return  this.type;  if(this.type!=  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type  ==  null)return  null;  if(this.type!=  null)return  this.type;  if(this.type!=  null)  {  return  this.type;  }	  return(this.type!=    null)?    null    :    this.type;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
240	[BUG]  [BUGGY]  Class  <?>  opt  =  getOpt();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Class  <?>  opt  =  getOpt();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Class  <?>  opt  =  getOpt();	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	48	None	replace
241	[BUG]  [BUGGY]  return  getValues();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getValues();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getValues();	  return    getNumberOfValues();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
242	[BUG]  [BUGGY]  Object  type  =  getNumberType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  Object  type  =  getNumberType();  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	Object  type  =  getNumberType();	  Object    type    =    getType();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
243	[BUG]  [BUGGY]  return  getNumberOfTypeArgs()!=  UNLIMITED_VALUES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypeArgs()!=  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypeArgs()!=  UNLIMITED_VALUES;	  return    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
244	[BUG]  [BUGGY]  return  getNumberOfTypeArgs()  ==  UNLIMITED_VALUES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypeArgs()  ==  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypeArgs()  ==  UNLIMITED_VALUES;	  return    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
245	[BUG]  [BUGGY]  return  getNumberOfTypeArgs().toCharArray();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return  getNumberOfTypeArgs().toCharArray();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return  getNumberOfTypeArgs().toCharArray();	  return    getNumberOfTypeArgs();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
246	[BUG]  [BUGGY]  if(this.type!=  type)  {  if(type  ==  null)  {  return  this.type;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  type)  {  if(type  ==  null)  {  return  this.type;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  type)  {  if(type  ==  null)  {  return  this.type;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
247	[BUG]  [BUGGY]  if(this.type!=  type)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(this.type!=  type)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(this.type!=  type)  {  if(type  ==  null)  {  return  this.type;  }  else  {  Class  <?>  opt  =  getLongOpt();  if(opt!=  null)  {  return  opt;  }	  if(type    ==    null)    {    return    this.type;    }    else    {    Class    <?>    opt    =    getLongOpt();    if(opt!=    null)    {    return    opt;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	70	None	replace
248	[BUG]  [BUGGY]  return(type  ==  null)?  null  :  type.argName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  return(type  ==  null)?  null  :  type.argName();  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	return(type  ==  null)?  null  :  type.argName();	  return(type    ==    null)?    null    :    type.name();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
249	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  type  =  getClass().getName();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  type  =  getClass().getName();  }  [BUGGY]      return  type;  }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  type  =  getClass().getName();  }	  if(type    ==    null)    {    type    =    getClass().getName();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
250	[BUG]  [BUGGY]  if(type  ==  null)  {  return  getType();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  return  getType();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  getType();  }	  if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
251	[BUG]  [BUGGY]  if(type  ==  null)  {  return  this;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Object  getType()  {      [BUGGY]  if(type  ==  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  getType  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.8164965809277261	188	188	2	replace	if(type  ==  null)  {  return  this;  }	  if(type!=    null)    {    return    type;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
