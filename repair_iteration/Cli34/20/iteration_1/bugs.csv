bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
2	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
3	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
4	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
5	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
6	[BUG]  [BUGGY]  if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
7	[BUG]  [BUGGY]  if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
8	[BUG]  [BUGGY]  if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
10	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
11	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
12	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
13	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
14	[BUG]  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
15	[BUG]  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
16	[BUG]  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
17	[BUG]  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(numberOfArgs  ==  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
18	[BUG]  [BUGGY]    if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
19	[BUG]  [BUGGY]    this.values.add(value);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    this.values.add(value);  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    this.values.add(value);		non-compiled	[CE]  illegal  start  of  expression	41	None	add
20	[BUG]  [BUGGY]    if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]    if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	    if(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	41	None	add
21	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
22	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException( "NO_ARGS_ALLOWED ");  default:  processValue(value);  }  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]    [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	}  	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
