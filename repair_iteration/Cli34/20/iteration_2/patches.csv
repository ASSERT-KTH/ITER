bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
2	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  length;  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
7	[BUG]  [BUGGY]  this.values.put(argName,  value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.put(argName,  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.put(argName,  value);	  this.values.put(value,    value);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
8	[BUG]  [BUGGY]  this.values.put(numberOfArgs,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.put(numberOfArgs,  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.put(numberOfArgs,  value);	  this.values.put(value,    value);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
9	[BUG]  [BUGGY]  this.values.put(value,  new  Integer(numberOfArgs));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.put(value,  new  Integer(numberOfArgs));  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.put(value,  new  Integer(numberOfArgs));	  this.values.put(value,    value);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].getName());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].getName());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].getName());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].getName());    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i].getName());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i].getName());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i].getName());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].getName());    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
12	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].getName());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].getName());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].getName());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].getName());    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
13	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  -  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getNumberOfArgs()  -  1;	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  +  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getNumberOfArgs()  +  1;	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfValues();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getNumberOfValues();  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getNumberOfValues();	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    lengthOfArgs;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
17	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  null);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  null);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  null);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
18	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(value);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
19	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  this.optionalArg);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  this.optionalArg);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  this.optionalArg);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i].toLowerCase());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i].toLowerCase());  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
25	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
26	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  this.addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  this.addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  this.addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
27	[BUG]  [BUGGY]  Integer  numberOfArgs  =  this.values.get(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  this.values.get(numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  this.values.get(numberOfArgs);	  Integer    numberOfArgs    =    values.get(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.get(numberOfArgs  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.get(numberOfArgs  +  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.get(numberOfArgs  +  1);	  Integer    numberOfArgs    =    values.get(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.get(numberOfArgs  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.get(numberOfArgs  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.get(numberOfArgs  -  1);	  Integer    numberOfArgs    =    values.get(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.get(values.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.get(values.size()  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.get(values.size()  -  1);	  Integer    numberOfArgs    =    values.get(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  this.values.add(numberOfArgs  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(numberOfArgs  +  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(numberOfArgs  +  1);	  this.values.add(value    +    1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
32	[BUG]  [BUGGY]  this.values.add(value  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value  -  1);	  this.values.add(value    +    1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
33	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
34	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
35	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i].toLowerCase());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i].toLowerCase());  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
36	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  i++)  {  processValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
37	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  this.addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  i++)  {  this.addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  i++)  {  this.addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  length;  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  value.length;  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  value.length;  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  value.length;  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
43	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForRecessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForRecessing(values[i]);  }	  if(numberOfArgs    ==    1)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  processValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  processValueForProcessing(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  processValueForProcessing(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
49	[BUG]  [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
50	[BUG]  [BUGGY]  while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
51	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
52	[BUG]  [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
53	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i].toCharArray());  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
56	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(value);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
58	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(numberOfArgs);  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(numberOfArgs);	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
59	[BUG]  [BUGGY]  this.values.add(value,  opt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value,  opt);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value,  opt);	  this.values.add(value,    longOpt);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
60	[BUG]  [BUGGY]  this.values.add(value,  value.longOpt);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value,  value.longOpt);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value,  value.longOpt);	  this.values.add(value,    longOpt);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
61	[BUG]  [BUGGY]  this.values.add(value,  argName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value,  argName);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value,  argName);	  this.values.add(value,    value);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
62	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values,  0);	  Integer    numberOfArgs    =    getValueForProcessing(values);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  true);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values,  true);	  Integer    numberOfArgs    =    getValueForProcessing(values);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  type);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  type);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values,  type);	  Integer    numberOfArgs    =    getValueForProcessing(values);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValueForRecessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  addValueForRecessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
66	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
68	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
69	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }	  for(int    i    =    0;    i    <    value.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
71	[BUG]  [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  >  0?  this.numberOfArgs  :  UNLIMITED_VALUES;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  >  0?  this.numberOfArgs  :  UNLIMITED_VALUES;  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  this.numberOfArgs  >  0?  this.numberOfArgs  :  UNLIMITED_VALUES;	  if(values!=    null)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
72	[BUG]  [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  >  0?  this.numberOfArgs  :  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  >  0?  this.numberOfArgs  :  0;  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  this.numberOfArgs  >  0?  this.numberOfArgs  :  0;	  if(values!=    null)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
73	[BUG]  [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values[0]);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValueForProcessing(values[0]);	  int    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
74	[BUG]  [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values[i]  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values[i]  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValueForProcessing(values[i]  -  1);	  int    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
75	[BUG]  [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values[i],  value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values[i],  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValueForProcessing(values[i],  value);	  int    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
76	[BUG]  [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
77	[BUG]  [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(value);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs  -  1;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs  -  1;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs  -  1;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numberOfArgs;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  1;  i  <  this.numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  1;  i  <  this.numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numberOfArgs;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
81	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }	  int    numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
82	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  int    numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
83	[BUG]  [BUGGY]  int  numberOfArgs  =  1)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  1)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  1)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }	  int    numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
84	[BUG]  [BUGGY]  int  numberOfArgs  =  this.values.size();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  this.values.size();  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  this.values.size();	  int    numberOfArgs    =    values.size();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  int  numberOfArgs  =  values.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  values.size()  -  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  values.size()  -  1;	  int    numberOfArgs    =    values.size();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
86	[BUG]  [BUGGY]  int  numberOfArgs  =  values.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  values.size()  +  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  values.size()  +  1;	  int    numberOfArgs    =    values.size();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
87	[BUG]  [BUGGY]  int  numberOfArgs  =  values.length();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  values.length();  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  values.length();	  int    numberOfArgs    =    value.length();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
88	[BUG]  [BUGGY]  int  numberOfArgs  =  value.length()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  value.length()  -  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  value.length()  -  1;	  int    numberOfArgs    =    value.length();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
89	[BUG]  [BUGGY]  int  numberOfArgs  =  value.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  value.length()  +  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  value.length()  +  1;	  int    numberOfArgs    =    value.length();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
90	[BUG]  [BUGGY]  char  numberOfArgs  =  value.length();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  char  numberOfArgs  =  value.length();  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	char  numberOfArgs  =  value.length();	  int    numberOfArgs    =    value.length();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
93	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  length;  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
95	[BUG]  [BUGGY]  while(values!=  null  ||  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  ||  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  ||  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values!=    null    &&    values.size()    >    0)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
96	[BUG]  [BUGGY]  while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values!=    null    &&    values.size()    >    0)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }	  for(int    i    =    0;    i    <    numberOfArgs.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }	  for(int    i    =    0;    i    <    numberOfArgs.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
99	[BUG]  [BUGGY]  while(values!=  null  &&  values.size()  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  values.size()  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  values.size()  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null    &&    values.size()    >    0)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
100	[BUG]  [BUGGY]  while(values!=  null  ||  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  ||  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  ||  values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null    &&    values.size()    >    0)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(value);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(value);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
103	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(values);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValue(values);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValue(values);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
104	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValue(numberOfArgs);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
107	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
109	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[0]);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values[0]);	  Integer    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
110	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[i]  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[i]  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values[i]  -  1);	  Integer    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
111	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[i]  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[i]  +  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values[i]  +  1);	  Integer    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
114	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
115	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  null);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  null);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value,  null);  }	  if(numberOfArgs    ==    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
117	[BUG]  [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.isEmpty())  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
118	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(value);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(value);	  Integer    numberOfArgs    =    getValue(value);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
119	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValue(value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValue(value);	  Integer    numberOfArgs    =    getValue(value);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
120	[BUG]  [BUGGY]  this.values.add(value,  list);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value,  list);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value,  list);	  this.values.add(value,    null);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.values.length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.length  -  1;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.length  -  1;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.length  -  1;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.values.length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
123	[BUG]  [BUGGY]  this.values.addValueForProcessing(value,  true);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addValueForProcessing(value,  true);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addValueForProcessing(value,  true);	  this.values.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
124	[BUG]  [BUGGY]  this.values.addValueForProcessing(value,  argName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addValueForProcessing(value,  argName);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addValueForProcessing(value,  argName);	  this.values.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
125	[BUG]  [BUGGY]  this.values.addValueForProcessing(value,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addValueForProcessing(value,  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addValueForProcessing(value,  value);	  this.values.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
126	[BUG]  [BUGGY]  int  numberOfArgs  =  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  int    numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
127	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
128	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.size();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.size();  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.size();	  if(numberOfArgs    ==    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  addValueForRecessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  addValueForRecessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
131	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValueForRecessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValueForRecessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  length;  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
133	[BUG]  [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
134	[BUG]  [BUGGY]  while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
135	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i].toLowerCase());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  ++i)  {  addValue(values[i].toLowerCase());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
136	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  value.length;  ++i)  {  addValue(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  value.length;  ++i)  {  addValue(values[i].toLowerCase());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  value.length;  ++i)  {  addValue(values[i].toLowerCase());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
139	[BUG]  [BUGGY]  int  numberOfArgs  =  getValues()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValues()  -  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValues()  -  1;	  int    numberOfArgs    =    getValues();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
140	[BUG]  [BUGGY]  int  numberOfArgs  =  getValues().length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValues().length;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValues().length;	  int    numberOfArgs    =    getValues();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
141	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    values.length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
144	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
145	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  count;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  count;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
147	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
148	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
149	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
150	[BUG]  [BUGGY]  int  numberOfArgs  =  values.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  values.length  -  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  values.length  -  1;	  int    numberOfArgs    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
151	[BUG]  [BUGGY]  int  numberOfArgs  =  this.values.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  this.values.length;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  this.values.length;	  int    numberOfArgs    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
152	[BUG]  [BUGGY]  int  numberOfArgs  =  value.length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  value.length  -  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  value.length  -  1;	  int    numberOfArgs    =    values.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
153	[BUG]  [BUGGY]  this.values.addValue(value,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addValue(value,  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addValue(value,  null);	  this.values.addValue(value);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
156	[BUG]  [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
157	[BUG]  [BUGGY]  while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  <  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
160	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  i++)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
161	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(values[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(values[0]);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(values[0]);	  Integer    numberOfArgs    =    getValue(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
162	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(values[i]  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(values[i]  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(values[i]  -  1);	  Integer    numberOfArgs    =    getValue(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
163	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(values[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValue(values[i]);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValue(values[i]);	  Integer    numberOfArgs    =    getValue(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
164	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(values,  value.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(values,  value.length);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(values,  value.length);	  Integer    numberOfArgs    =    getValue(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
165	[BUG]  [BUGGY]  this.values.add(numberOfArgs  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(numberOfArgs  -  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(numberOfArgs  -  1);	  this.values.add(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
166	[BUG]  [BUGGY]  this.values.add(numberOfArgs,  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(numberOfArgs,  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(numberOfArgs,  value);	  this.values.add(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
169	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
170	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(values,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(values,  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(values,  0);	  Integer    numberOfArgs    =    getValue(values);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
171	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(null);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(null);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  ++i)  {  values.add(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(null);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(null);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.size();  ++i)  {  values.add(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(null);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(null);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(null);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(null);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  values.add(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    value.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
177	[BUG]  [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
179	[BUG]  [BUGGY]  while(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
182	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
183	[BUG]  [BUGGY]  while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
184	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  value.length();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  value.length();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  value.length();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
186	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(values);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(values);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getNumberOfArgs(values);	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
187	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs);	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
188	[BUG]  [BUGGY]  while(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
189	[BUG]  [BUGGY]  while(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values.size()  ==  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
190	[BUG]  [BUGGY]  int  numberOfArgs  =  getValues()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValues()  +  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValues()  +  1;	  int    numberOfArgs    =    getValues();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
191	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	For(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
192	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
193	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
194	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
195	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
196	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(value);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
197	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
199	[BUG]  [BUGGY]  Integer  hasArg  =  values.get(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  hasArg  =  values.get(numberOfArgs);  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  hasArg  =  values.get(numberOfArgs);	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
200	[BUG]  [BUGGY]  Integer  hasArg  =  values.size()  >  0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  hasArg  =  values.size()  >  0;  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  hasArg  =  values.size()  >  0;	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
201	[BUG]  [BUGGY]  int  hasArg  =  values.size()  >  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  hasArg  =  values.size()  >  0;  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  hasArg  =  values.size()  >  0;	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
202	[BUG]  [BUGGY]  while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.size()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null    &&    values.size()    >    0)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
203	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    countOfArgs;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
205	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.get(values.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.get(values.length);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.get(values.length);	  Integer    numberOfArgs    =    values.get(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
206	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
207	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
208	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
209	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
210	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.values.length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
211	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(value,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(value,  UNLIMITED_VALUES);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(value,  UNLIMITED_VALUES);	  Integer    numberOfArgs    =    getValue(value);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
212	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
213	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
214	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i].toLowerCase());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toLowerCase());    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
216	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
217	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    values.length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    values.length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  values.add(value);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
220	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
221	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
222	[BUG]  [BUGGY]  this.values.put(value,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.put(value,  UNLIMITED_VALUES);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.put(value,  UNLIMITED_VALUES);	  this.values.put(value,    value);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
223	[BUG]  [BUGGY]  this.values.put(value,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.put(value,  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.put(value,  null);	  this.values.put(value,    value);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValueForRecessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  ++i)  {  addValueForRecessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValueForRecessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValueForRecessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
226	[BUG]  [BUGGY]  Integer  numberOfArgs  =  value.getValue(numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  value.getValue(numberOfArgs);  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  value.getValue(numberOfArgs);	  if(numberOfArgs    ==    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
227	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
228	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
229	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  ++i)  {  addValue(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
230	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[i],  value);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values[i],  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values[i],  value);	  Integer    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
231	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values,  value);	  Integer    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
232	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  UNLIMITED_VALUES);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values,  UNLIMITED_VALUES);	  Integer    numberOfArgs    =    getValueForProcessing(values);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
233	[BUG]  [BUGGY]  while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValueForRecessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValueForRecessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValueForRecessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValueForRecessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValueForRecessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForRecessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
236	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(value);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
237	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
238	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].getName());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].getName());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValue(values[i].getName());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i].getName());    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
239	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
241	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs  &&  i  <  values.length;  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
242	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  values.add(null);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  values.add(null);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  values.add(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(null);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
243	[BUG]  [BUGGY]  this.values.add(value,  numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value,  numberOfArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value,  numberOfArgs);	  this.values.add(value,    longOpt);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
244	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
245	[BUG]  [BUGGY]  this.values.addValueForProcessing(value,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addValueForProcessing(value,  UNLIMITED_VALUES);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addValueForProcessing(value,  UNLIMITED_VALUES);	  this.values.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
246	[BUG]  [BUGGY]  this.values.addValueForProcessing(value,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addValueForProcessing(value,  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addValueForProcessing(value,  null);	  this.values.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
247	[BUG]  [BUGGY]  this.values.add(value,  UNLIMITED_VALUES);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value,  UNLIMITED_VALUES);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value,  UNLIMITED_VALUES);	  this.values.add(value,    value);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
248	[BUG]  [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values,  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValueForProcessing(values,  value);	  int    numberOfArgs    =    getValueForProcessing(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
249	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(values[i],  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(values[i],  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(values[i],  value);	  Integer    numberOfArgs    =    getValue(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
250	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(values,  value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(values,  value);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(values,  value);	  Integer    numberOfArgs    =    getValue(values[i]);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
251	[BUG]  [BUGGY]  this.values.addAll(values);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addAll(values);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addAll(values);	  this.values.add(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
252	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  values.add(value);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
253	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
254	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values!=    null    &&    values.size()    >    0)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
255	[BUG]  [BUGGY]  while(values!=  null  &&  values.size()  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  values.size()  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  values.size()  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values!=    null    &&    values.size()    >    0)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
256	[BUG]  [BUGGY]  while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
257	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
258	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  values.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  values.length;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numberOfArgs;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
260	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  i++)  {  addValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
261	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.get(0).getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.get(0).getValue();  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.get(0).getValue();	  if(numberOfArgs    ==    1)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
262	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
263	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.get(values.size());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.get(values.size());  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.get(values.size());	  Integer    numberOfArgs    =    values.get(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  value.size();  ++i)  {  processValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  value.size();  ++i)  {  processValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  value.size();  ++i)  {  processValueForProcessing(values[i]);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    processValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
265	[BUG]  [BUGGY]  this.numberOfArgs  =  values.iterator().next().getValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.numberOfArgs  =  values.iterator().next().getValue();  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.numberOfArgs  =  values.iterator().next().getValue();	  if(values!=    null)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
266	[BUG]  [BUGGY]  this.numberOfArgs  =  values.iterator().next().getAstRoot(this.numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.numberOfArgs  =  values.iterator().next().getAstRoot(this.numberOfArgs);  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.numberOfArgs  =  values.iterator().next().getAstRoot(this.numberOfArgs);	  if(values!=    null)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
267	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(value,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValue(value,  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValue(value,  0);	  Integer    numberOfArgs    =    getValue(value);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
268	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  this.values.size();  ++i)  {  addValueForProcessing(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
269	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  description);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  getValueForProcessing(values,  description);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  getValueForProcessing(values,  description);	  Integer    numberOfArgs    =    getValueForProcessing(values);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
270	[BUG]  [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  =  getValueForProcessing(values);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  =  getValueForProcessing(values);	  Integer    numberOfArgs    =    getValueForProcessing(values);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
271	[BUG]  [BUGGY]  while(values!=  null  &&  value.equals( " "))  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.equals( " "))  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.equals( " "))  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
272	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
273	[BUG]  [BUGGY]  Integer  numberOfArgs  =  values.get(i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  numberOfArgs  =  values.get(i);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  numberOfArgs  =  values.get(i);	  if(numberOfArgs    ==    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
274	[BUG]  [BUGGY]  this.values.addValueForProcessing(value,  description);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.addValueForProcessing(value,  description);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.addValueForProcessing(value,  description);	  this.values.addValueForProcessing(value);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
275	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
276	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
277	[BUG]  [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(value!=  null)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    value.size();    ++i)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
278	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValue(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
279	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values.add(value);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    values.add(value);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
280	[BUG]  [BUGGY]  this.values.add(value,  this.opt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value,  this.opt);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value,  this.opt);	  this.values.add(value,    longOpt);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
281	[BUG]  [BUGGY]  Integer  i  =  values.size();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  Integer  i  =  values.size();  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	Integer  i  =  values.size();	  For(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
282	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  if(values[i]  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.numberOfArgs;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
283	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.values.size();  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.values.size();  i++)  {  if(values[i]  ==  value)  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0;    i    <    this.values.length;    i++)    {    if(values[i]    ==    value)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
284	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(value);  }	  if(numberOfArgs    ==    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
285	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  i  =  0;  i  <  this.values.size();  ++i)  {  addValue(value);  }	  for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
286	[BUG]  [BUGGY]  this.values.add(value  /  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value  /  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value  /  1);	  this.values.add(value    +    1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
287	[BUG]  [BUGGY]  this.values.add(value  +  1,  value.length());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  this.values.add(value  +  1,  value.length());  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	this.values.add(value  +  1,  value.length());	  this.values.add(value    +    1);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
288	[BUG]  [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
289	[BUG]  [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	int  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValueForProcessing(value);  }	  while(values.size()    >    1)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
290	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  addValue(values[i]);  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  countOfArgs;  i++)  {  addValue(values[i]);  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
291	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
292	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
293	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
294	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i].toLowerCase());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i].toLowerCase());  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  values.size();  i++)  {  addValueForProcessing(values[i].toLowerCase());  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
295	[BUG]  [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	while(values!=  null  &&  value.length()  >  0)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  addValue(values[i]);  }	  while(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValue(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
296	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  addValue(values[i].toCharArray());  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    addValue(values[i].toCharArray());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
297	[BUG]  [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  addValueForProcessing(values[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  addValueForProcessing(values[i]);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(values!=  null)  {  for(int  i  =  0;  i  <  value.size();  i++)  {  addValueForProcessing(values[i]);  }	  if(values!=    null)    {    for(int    i    =    0;    i    <    values.size();    i++)    {    addValueForProcessing(values[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
298	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      void  addValueForProcessing(String  value)  {  switch  (numberOfArgs)  {  case  UNINITIALIZED:  throw  new  RuntimeException(     "NO_ARGS_ALLOWED     ");  default:  processValue(value);  }      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(value);  }  [BUGGY]        [CLASS]  Option  [METHOD]  addValueForProcessing  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	408	408	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  addValueForProcessing(value);  }	  if(hasArg)    {    for(int    i    =    0;    i    <    values.size();    ++i)    {    addValueForProcessing(value);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
