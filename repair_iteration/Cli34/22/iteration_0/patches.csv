bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hasArg)  {  add(value);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]  if(hasArg)  {  add(value);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	if(hasArg)  {  add(value);  }	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
2	[BUG]  [BUGGY]  if(hasArg)  {  add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]  if(hasArg)  {  add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	if(hasArg)  {  add(value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
3	[BUG]  [BUGGY]  if(hasArg)  {  add(value);  }  else  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  add(values[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]  if(hasArg)  {  add(value);  }  else  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  add(values[i]);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	if(hasArg)  {  add(value);  }  else  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  add(values[i]);  }	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
4	[BUG]  [BUGGY]  if(hasArg)  {  add(value);  }  else  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  add(value);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]  if(hasArg)  {  add(value);  }  else  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  add(value);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	if(hasArg)  {  add(value);  }  else  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  add(value);  }	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	  	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
6	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }		non-compiled	[CE]  illegal  start  of  expression	45	None	add
7	[BUG]  [BUGGY]    if(hasArg)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    if(hasArg)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    if(hasArg)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }		non-compiled	[CE]  illegal  start  of  expression	45	None	add
8	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	45	None	add
9	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  values		non-compiled	[CE]  illegal  start  of  expression	45	None	add
10	[BUG]  [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  add(value);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  add(value);  }  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    if(numberOfArgs  >  1)  {  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  else  {  add(value);  }		non-compiled	[CE]  illegal  start  of  expression	45	None	add
11	[BUG]  [BUGGY]  if(values!=  null)  {  add(value);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]  if(values!=  null)  {  add(value);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	if(values!=  null)  {  add(value);  }	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
12	[BUG]  [BUGGY]  if(values.size()  ==  1)  {  add(value);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]  if(values.size()  ==  1)  {  add(value);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	if(values.size()  ==  1)  {  add(value);  }	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
13	[BUG]  [BUGGY]    value  =  value.substring(0,  index);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    value  =  value.substring(0,  index);  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    value  =  value.substring(0,  index);		non-compiled	[CE]  illegal  start  of  expression	45	None	add
14	[BUG]  [BUGGY]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);		non-compiled	[CE]  illegal  start  of  expression	45	None	add
15	[BUG]  [BUGGY]    String  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    String  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    String  value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);		non-compiled	[CE]  illegal  start  of  expression	45	None	add
16	[BUG]  [BUGGY]    value  =  value.substring(index  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    value  =  value.substring(index  +  1);  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    value  =  value.substring(index  +  1);		non-compiled	[CE]  illegal  start  of  expression	45	None	add
17	[BUG]  [BUGGY]    int  numberOfArgs  =  value.indexOf(sep);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    int  numberOfArgs  =  value.indexOf(sep);  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    int  numberOfArgs  =  value.indexOf(sep);		non-compiled	[CE]  illegal  start  of  expression	45	None	add
18	[BUG]  [BUGGY]  if(value!=  null)  {  add(value);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]  if(value!=  null)  {  add(value);  }  [BUGGY]  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	if(value!=  null)  {  add(value);  }	add(value);  	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
19	[BUG]  [BUGGY]    String  sep  =  value.substring(index  +  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    String  sep  =  value.substring(index  +  1);  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    String  sep  =  value.substring(index  +  1);		non-compiled	[CE]  illegal  start  of  expression	45	None	add
20	[BUG]  [BUGGY]    value  =  value.substring(index  +  1,  sep);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    value  =  value.substring(index  +  1);  index  =  value.indexOf(sep);  }  }    [BUGGY]    value  =  value.substring(index  +  1,  sep);  [BUGGY]  add(value);  }  [CLASS]  Option  [METHOD]  processValue  [RETURN_TYPE]  void  String  value  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	453	453	2	replace	    value  =  value.substring(index  +  1,  sep);		non-compiled	[CE]  illegal  start  of  expression	45	None	add
