bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(description);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(description);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(description);	  Class    <?>    opt    =    getOption(argName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(argName,  description);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(argName,  description);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(argName,  description);	  Class    <?>    opt    =    getOption(argName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  Options  option  =(Option)super.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Options  option  =(Option)super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Options  option  =(Option)super.clone();	  options    =(Option)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(optionalArg);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(optionalArg);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(optionalArg);	  Class    <?>    opt    =    getOption(type);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  option  =(Option)this.opts.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  option  =(Option)this.opts.clone();  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	option  =(Option)this.opts.clone();	  Option    option    =(Option)this.opts.clone();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  option  =  super.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  option  =  super.clone();  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	option  =  super.clone();	  Option    option    =    super.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
7	[BUG]  [BUGGY]  Option  option  =  super.cloneOption(defaultValue);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =  super.cloneOption(defaultValue);  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =  super.cloneOption(defaultValue);	  Option    option    =    super.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionType();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOptionType();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOptionType();	  Class    <?>    opt    =    getOption();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
9	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionClass();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOptionClass();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOptionClass();	  Class    <?>    opt    =    getOption();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
10	[BUG]  [BUGGY]  Options  options  =(Option)this.options.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Options  options  =(Option)this.options.clone();  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Options  options  =(Option)this.options.clone();	  options    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  Class  <?>  options  =  this.super.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  this.super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  this.super.clone();	  Class    <?>    options    =    super.clone();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
12	[BUG]  [BUGGY]  Class  <?>  options  =  this.options.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  this.options.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  this.options.clone();	  Class    <?>    options    =    super.clone();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
13	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this,  description);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this,  description);	  Class    <?>    opt    =    getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this,  defaultValue);	  Class    <?>    opt    =    getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  Object  option  =  this.super.cloneOption();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =  this.super.cloneOption();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =  this.super.cloneOption();	  Object    option    =    super.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  final  Class  <?>  options  =  getOptions().clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  final  Class  <?>  options  =  getOptions().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	final  Class  <?>  options  =  getOptions().clone();	  Class    <?>    options    =    getOptions().clone();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  Class  <?>  options  =  getAllOptions().clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getAllOptions().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getAllOptions().clone();	  Class    <?>    options    =    getOptions().clone();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(argName,  description);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(argName,  description);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(argName,  description);	  Class    <?>    option    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  description,  value);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  description,  value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(defaultValue,  description,  value);	  Class    <?>    option    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  description,  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  description,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(defaultValue,  description,  null);	  Class    <?>    option    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  null);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(defaultValue,  null);	  Class    <?>    option    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  option  =(Option)this.super.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  option  =(Option)this.super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	option  =(Option)this.super.clone();	  Option    option    =(Option)this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
23	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(defaultValue,  defaultValue);	  Class    <?>    option    =    getOption(null,    defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
24	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(this,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(this,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(this,  defaultValue);	  Class    <?>    option    =    getOption(null,    defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
25	[BUG]  [BUGGY]  Class  <?>  options  =  super.getOptions();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  super.getOptions();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  super.getOptions();	  Class    <?>    options    =    this.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getNumberOfArgs();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getNumberOfArgs();	  Class    <?>    opt    =    getOptionalValue();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this,  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this,  null);	  Class    <?>    opt    =    getOption(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(defaultValue,  null);	  Class    <?>    opt    =    getOption(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(null,  null,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(null,  null,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(null,  null,  null);	  Class    <?>    opt    =    getOption(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(value,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(value,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(value,  defaultValue);	  Class    <?>    opt    =    getOption(defaultValue,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
31	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(argName,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(argName,  value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(argName,  value);	  Class    <?>    opt    =    getOption(defaultValue,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
32	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(longOpt,  value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(longOpt,  value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(longOpt,  value);	  Class    <?>    opt    =    getOption(defaultValue,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
33	[BUG]  [BUGGY]  Class  <?>  option  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getNumberOfArgs();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getNumberOfArgs();	  Class    <?>    option    =    getDefaultValue();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
34	[BUG]  [BUGGY]  Class  <?>  option  =  getOption();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption();	  Class    <?>    option    =    getDefaultValue();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
35	[BUG]  [BUGGY]  Class  <?>  option  =  getOptionType();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOptionType();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOptionType();	  Class    <?>    option    =    getDefaultValue();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
36	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(this,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(this,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(this,  null);	  Class    <?>    option    =    getOption(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
37	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(null,  null,  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(null,  null,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(null,  null,  null);	  Class    <?>    option    =    getOption(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
38	[BUG]  [BUGGY]  Option  option  =(this.super!=  null)?  this.super.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =(this.super!=  null)?  this.super.clone()  :  null;  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =(this.super!=  null)?  this.super.clone()  :  null;	  Option    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  Option  option  =(this.super!=  null)?  this.null  :  this.super.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =(this.super!=  null)?  this.null  :  this.super.clone();  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =(this.super!=  null)?  this.null  :  this.super.clone();	  Option    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  Class  <?>  opt  =  getLongOpt().clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getLongOpt().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getLongOpt().clone();	  Class    <?>    opt    =    getDefaultValue().clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
41	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption().clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption().clone();	  Class    <?>    opt    =    getDefaultValue().clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
42	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionalValue().clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOptionalValue().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOptionalValue().clone();	  Class    <?>    opt    =    getDefaultValue().clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
43	[BUG]  [BUGGY]  Class  <?>  options  =  getNumberOfArgs();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getNumberOfArgs();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getNumberOfArgs();	  Class    <?>    options    =    getOptOptions();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  Class  <?>  options  =  getAllOptions();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getAllOptions();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getAllOptions();	  Class    <?>    options    =    getOptOptions();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  Class  <?>  options  =  getOption( "super.clone ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getOption( "super.clone ");  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getOption( "super.clone ");	  Class    <?>    options    =    getOption(   "clone   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
46	[BUG]  [BUGGY]  Class  <?>  options  =  getOptions( "clone ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getOptions( "clone ");  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getOptions( "clone ");	  Class    <?>    options    =    getOption(   "clone   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
47	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(optionalArg);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(optionalArg);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(optionalArg);	  Class    <?>    option    =    getOption(type);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
48	[BUG]  [BUGGY]  Class  <?>  opt  =  getOpt();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOpt();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOpt();	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
49	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(LongOpt.class);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(LongOpt.class);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(LongOpt.class);	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
50	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(optionalArgName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(optionalArgName);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(optionalArgName);	  Class    <?>    opt    =    getOption(longOpt);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(argName,  value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(argName,  value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(argName,  value);	  Class    <?>    option    =    getOption(defaultValue,    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
52	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(value,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(value,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(value,  defaultValue);	  Class    <?>    option    =    getOption(defaultValue,    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
53	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(option,  value);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(option,  value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(option,  value);	  Class    <?>    option    =    getOption(defaultValue,    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
54	[BUG]  [BUGGY]  Object  option  =(this.options!=  null)?  this.options.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(this.options!=  null)?  this.options.clone()  :  null;  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(this.options!=  null)?  this.options.clone()  :  null;	  Object    option    =    this.options.clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
55	[BUG]  [BUGGY]  Object  option  =  this.options!=  null?  this.options.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =  this.options!=  null?  this.options.clone()  :  null;  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =  this.options!=  null?  this.options.clone()  :  null;	  Object    option    =    this.options.clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
56	[BUG]  [BUGGY]  Object  option  =(this.super.clone()!=  null)?  this.super.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(this.super.clone()!=  null)?  this.super.clone()  :  null;  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(this.super.clone()!=  null)?  this.super.clone()  :  null;	  Object    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  Object  option  =(this.super.clone()  ==  null)?  this.super.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(this.super.clone()  ==  null)?  this.super.clone()  :  null;  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(this.super.clone()  ==  null)?  this.super.clone()  :  null;	  Object    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(option.clone());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(option.clone());  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(option.clone());	  Class    <?>    option    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  Option  option  =  super.cloneOption(argName);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =  super.cloneOption(argName);  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =  super.cloneOption(argName);	  Option    option    =    super.cloneOption(option);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
60	[BUG]  [BUGGY]  Option  option  =  super.clone(option);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =  super.clone(option);  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =  super.clone(option);	  Option    option    =    super.cloneOption(option);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
61	[BUG]  [BUGGY]  Option  option  =(Option)this.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =(Option)this.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =(Option)this.clone();	  Object    option    =(Option)this.clone();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
62	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.values);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.values);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this.defaultValue,  this.values);	  Class    <?>    opt    =    getOption(this.defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
63	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  description);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  description);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this.defaultValue,  description);	  Class    <?>    opt    =    getOption(this.defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this.longOpt);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this.longOpt);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this.longOpt);	  Class    <?>    opt    =    getOption(this.defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(this,  description);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(this,  description);	  Class    <?>    option    =    getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
66	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(this,  type);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(this,  type);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(this,  type);	  Class    <?>    option    =    getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
67	[BUG]  [BUGGY]  Class  <?>  options  =(Class  <?>)getOptions();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =(Class  <?>)getOptions();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =(Class  <?>)getOptions();	  Class    <?>    options    =(Option)getOptions();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
68	[BUG]  [BUGGY]  Class  <?>  options  =(Option)this.options.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =(Option)this.options.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =(Option)this.options.clone();	  Class    <?>    options    =(Option)getOptions();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
69	[BUG]  [BUGGY]  Class  <?>  options  =(Option)super.clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =(Option)super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =(Option)super.clone();	  Class    <?>    options    =(Option)getOptions();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
70	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description,  longOpt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description,  longOpt);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(defaultValue,  description,  longOpt);	  Class    <?>    opt    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description,  value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description,  value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(defaultValue,  description,  value);	  Class    <?>    opt    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  Class  <?>  options  =(Option)this.opts();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =(Option)this.opts();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =(Option)this.opts();	  Class    <?>    options    =(Option)getOptions();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =  options.clone();  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =  options.clone();	  Option    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  Class  <?>  opt  =  getDefaultOption();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getDefaultOption();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getDefaultOption();	  Class    <?>    opt    =    getOption();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
75	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(option.values);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(option.values);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(option.values);	  Class    <?>    option    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(option.longOpt);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(option.longOpt);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(option.longOpt);	  Class    <?>    option    =    getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
77	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(value);	  Class    <?>    opt    =    getOption(longOpt);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  Class  <?>  options  =(getOptions()!=  null)?  getOptions().clone()  :  defaultValue;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =(getOptions()!=  null)?  getOptions().clone()  :  defaultValue;  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =(getOptions()!=  null)?  getOptions().clone()  :  defaultValue;	  Class    <?>    options    =    getOptions().clone();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
79	[BUG]  [BUGGY]  Class  <?>  options  =  getOptions().clone(this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getOptions().clone(this);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getOptions().clone(this);	  Class    <?>    options    =    getOptions().clone();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
80	[BUG]  [BUGGY]  Object  option  =(Option)this.opts.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(Option)this.opts.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(Option)this.opts.clone();	  Object    option    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  Object  option  =  options.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =  options.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =  options.clone();	  Object    option    =    this.options.clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
82	[BUG]  [BUGGY]  Class  <?>  option  =  getOptionValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOptionValue();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOptionValue();	  Class    <?>    option    =    getDefaultValue();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
83	[BUG]  [BUGGY]  Class  <?>  opt  =  getOptionValue().clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOptionValue().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOptionValue().clone();	  Class    <?>    opt    =    getDefaultValue().clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(null,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(null,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(null,  defaultValue);	  Class    <?>    opt    =    getOption(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
85	[BUG]  [BUGGY]  Options  options  =(Option)super.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Options  options  =(Option)super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Options  options  =(Option)super.clone();	  options    =(Option)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
86	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description.longOpt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description.longOpt);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(defaultValue,  description.longOpt);	  Class    <?>    opt    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
87	[BUG]  [BUGGY]  Option  option  =(Option)this.opts.clone(0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =(Option)this.opts.clone(0);  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =(Option)this.opts.clone(0);	  Option    option    =(Option)this.opts.clone();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(longOpt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(longOpt);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(longOpt);	  Class    <?>    option    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
89	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(LongOpt.class);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(LongOpt.class);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(LongOpt.class);	  Class    <?>    option    =    getOption(opt);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  Class  <?>  opt  =  getDefaultOpt();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getDefaultOpt();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getDefaultOpt();	  Class    <?>    opt    =    getLongOpt();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.description);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.description);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this.defaultValue,  this.description);	  Class    <?>    opt    =    getOption(this.defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
92	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.numberOfArgs);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.numberOfArgs);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this.defaultValue,  this.numberOfArgs);	  Class    <?>    opt    =    getOption(this.defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
93	[BUG]  [BUGGY]  Object  option  =(this.super!=  null)?  this.super.clone()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(this.super!=  null)?  this.super.clone()  :  null;  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(this.super!=  null)?  this.super.clone()  :  null;	  Object    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
94	[BUG]  [BUGGY]  Object  option  =(this.super!=  null)?  super.clone()  :  this.super.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(this.super!=  null)?  super.clone()  :  this.super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(this.super!=  null)?  super.clone()  :  this.super.clone();	  Object    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
95	[BUG]  [BUGGY]  Options  option  =(Option)this.options.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Options  option  =(Option)this.options.clone();  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Options  option  =(Option)this.options.clone();	  options    =(Option)this.options.clone();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  Class  <?>  options  =  getLongOptOptions();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getLongOptOptions();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getLongOptOptions();	  Class    <?>    options    =    getOptOptions();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
97	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(optionalArgName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(optionalArgName);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(optionalArgName);	  Class    <?>    option    =    getOption(argName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
98	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(opt,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(opt,  null);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(opt,  null);	  Class    <?>    option    =    getOption(null,    null);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
99	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(this,  options);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(this,  options);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(this,  options);	  Class    <?>    option    =    getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
100	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(opt,  value);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(opt,  value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(opt,  value);	  Class    <?>    option    =    getOption(defaultValue,    value);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
101	[BUG]  [BUGGY]  Class  <?>  options  =  this.cloneOptions();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  this.cloneOptions();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  this.cloneOptions();	  Class    <?>    options    =    this.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
102	[BUG]  [BUGGY]  Class  <?>  options  =(this.getOptions()!=  null)?  this.getOptions()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =(this.getOptions()!=  null)?  this.getOptions()  :  Collections.EMPTY_LIST;  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =(this.getOptions()!=  null)?  this.getOptions()  :  Collections.EMPTY_LIST;	  Class    <?>    options    =    this.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
103	[BUG]  [BUGGY]  Class  <?>  options  =  getOption( "clone ",  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getOption( "clone ",  this);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getOption( "clone ",  this);	  Class    <?>    options    =    getOption(   "clone   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
104	[BUG]  [BUGGY]  Class  <?>  option  =  getOptionalValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOptionalValue();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOptionalValue();	  Class    <?>    opt    =    getOptionalValue();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
105	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(opt,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(opt,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(opt,  defaultValue);	  Class    <?>    option    =    getOption(null,    defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
106	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(option,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(option,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(option,  defaultValue);	  Class    <?>    option    =    getOption(null,    defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
107	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.value);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.value);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this.defaultValue,  this.value);	  Class    <?>    opt    =    getOption(this.defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
108	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.argName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(this.defaultValue,  this.argName);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(this.defaultValue,  this.argName);	  Class    <?>    opt    =    getOption(this.defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
109	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  description.argName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  description.argName);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(defaultValue,  description.argName);	  Class    <?>    option    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
110	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  this.values);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(defaultValue,  this.values);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(defaultValue,  this.values);	  Class    <?>    option    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  Class  <?>  option  =  getDefaultValue().clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getDefaultValue().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getDefaultValue().clone();	  Class    <?>    opt    =    getDefaultValue().clone();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
112	[BUG]  [BUGGY]  Class  <?>  options  =  getOption( "clone ").clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getOption( "clone ").clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getOption( "clone ").clone();	  Class    <?>    options    =    getOptions().clone();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
113	[BUG]  [BUGGY]  Class  <?>  options  =(Option)getOptions().clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =(Option)getOptions().clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =(Option)getOptions().clone();	  Class    <?>    options    =    getOptions().clone();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
114	[BUG]  [BUGGY]  Class  <?>  option  =  getOption(argName,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption(argName,  defaultValue);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption(argName,  defaultValue);	  Class    <?>    opt    =    getOption(argName);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
115	[BUG]  [BUGGY]  Class  <?>  options  =  this.type.getOptions();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  this.type.getOptions();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  this.type.getOptions();	  Class    <?>    options    =    this.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
116	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(option);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(option);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(option);	  Class    <?>    opt    =    getOption(longOpt);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
117	[BUG]  [BUGGY]  Option  option  =  super.cloneOption(opt);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Option  option  =  super.cloneOption(opt);  [BUGGY]      option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Option  option  =  super.cloneOption(opt);	  Option    option    =    super.cloneOption(option);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
118	[BUG]  [BUGGY]  Object  option  =(this.super.clone()  ==  null)?  this.defaultValue  :  this.super.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(this.super.clone()  ==  null)?  this.defaultValue  :  this.super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(this.super.clone()  ==  null)?  this.defaultValue  :  this.super.clone();	  Object    option    =    this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
119	[BUG]  [BUGGY]  Class  <?>  option  =  super.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  super.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  super.clone();	  Class    <?>    options    =    super.clone();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
120	[BUG]  [BUGGY]  Object  option  =(this.options!=  null)?  this.options.clone()  :  options.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Object  option  =(this.options!=  null)?  this.options.clone()  :  options.clone();  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Object  option  =(this.options!=  null)?  this.options.clone()  :  options.clone();	  Object    option    =    this.options.clone();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
121	[BUG]  [BUGGY]  Class  <?>  option  =  getOption( "clone ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  option  =  getOption( "clone ");  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  option  =  getOption( "clone ");	  Class    <?>    options    =    getOption(   "clone   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
122	[BUG]  [BUGGY]  Class  <?>  options  =  getOption(argName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  options  =  getOption(argName);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  options  =  getOption(argName);	  Class    <?>    options    =    getOption(   "clone   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
123	[BUG]  [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description.argName);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  Object  clone()  {  try  {      [BUGGY]  Class  <?>  opt  =  getOption(defaultValue,  description.argName);  [BUGGY]      Option  option  =  (Option)  super.clone();  option.values  =  new  ArrayList(values);  return  option;  }  catch  (CloneNotSupportedException  cnse)  {  throw  new  RuntimeException(     "A  CloneNotSupportedException  was  thrown:       "  +  cnse.getMessage());  }  }  [CLASS]  Option  [METHOD]  clone  [RETURN_TYPE]  Object  [VARIABLES]  boolean  hasArg  optionalArg  required  char  sep  valuesep  Class  type  List  values  Option  option  String  argName  defaultValue  description  longOpt  opt  value  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  index  num  numberOfArgs  result  CloneNotSupportedException  cnse  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.5	640	640	2	replace	Class  <?>  opt  =  getOption(defaultValue,  description.argName);	  Class    <?>    opt    =    getOption(defaultValue,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
