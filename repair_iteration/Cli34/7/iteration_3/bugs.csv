bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(this.optionalArg!=  null)&&  this.required;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  null)&&  this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  null)&&  this.required;	  return(this.required!=    null)&&    this.optionalArg;    	non-compiled	[CE]  	99	None	replace
2	[BUG]  [BUGGY]  return(this.required  ==  null)&&  this.optionalArg;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  null)&&  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  null)&&  this.optionalArg;	  return(this.required!=    null)&&    this.optionalArg;    	non-compiled	[CE]  	99	None	replace
3	[BUG]  [BUGGY]  return(this.optionalArg  ==  null)&&  this.required;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  ==  null)&&  this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  ==  null)&&  this.required;	  return(this.required!=    null)&&    this.optionalArg;    	non-compiled	[CE]  	99	None	replace
4	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.required.size()  >  0;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.required.size()  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.required.size()  >  0;	  return(this.required!=    null)&&    this.values.size()    >    0;    	non-compiled	[CE]  	98	None	replace
5	[BUG]  [BUGGY]  return(this.required  ==  null)&&  this.values.size()  >  0;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  null)&&  this.values.size()  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  null)&&  this.values.size()  >  0;	  return(this.required!=    null)&&    this.values.size()    >    0;    	non-compiled	[CE]  	98	None	replace
6	[BUG]  [BUGGY]  String  required  =  getRequiredValues();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String  required  =  getRequiredValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String  required  =  getRequiredValues();	  char[]    required    =    getRequiredValues();    	non-compiled	[CE]  	87	None	replace
7	[BUG]  [BUGGY]  char[]  required  =  getRequiredValues().toCharArray();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  required  =  getRequiredValues().toCharArray();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  required  =  getRequiredValues().toCharArray();	  char[]    required    =    getRequiredValues();    	non-compiled	[CE]  	87	None	replace
8	[BUG]  [BUGGY]  if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	96	None	replace
9	[BUG]  [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(isRequired())  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	96	None	replace
10	[BUG]  [BUGGY]  if(isRequired())  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	96	None	replace
11	[BUG]  [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(isRequired())  {  required  =  false;  }	  if(isRequired())    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	13	None	replace
12	[BUG]  [BUGGY]  if(hasArg())  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg())  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg())  {  required  =  false;  if(required!=  null)  {  required  =  false;  }	  if(isRequired())    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	13	None	replace
13	[BUG]  [BUGGY]  return(required!=  null)?  false  :  required.length;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required!=  null)?  false  :  required.length;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required!=  null)?  false  :  required.length;	  return(required    ==    null)?    false    :    required.length;    	non-compiled	[CE]  	62	None	replace
14	[BUG]  [BUGGY]  return(required  ==  null)?  false  :  required.length  +  1;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required  ==  null)?  false  :  required.length  +  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required  ==  null)?  false  :  required.length  +  1;	  return(required    ==    null)?    false    :    required.length;    	non-compiled	[CE]  	62	None	replace
15	[BUG]  [BUGGY]  String  valuesep  =  getAllValues();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String  valuesep  =  getAllValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String  valuesep  =  getAllValues();	  char[]    valuesep    =    getAllValues();    	non-compiled	[CE]  	88	None	replace
16	[BUG]  [BUGGY]  String[]  valuesep  =  getAllValues();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String[]  valuesep  =  getAllValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String[]  valuesep  =  getAllValues();	  char[]    valuesep    =    getAllValues();    	non-compiled	[CE]  	88	None	replace
17	[BUG]  [BUGGY]  return(this.optionalArg  ==  null)?  false  :  this.optionalArg;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  ==  null)?  false  :  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  ==  null)?  false  :  this.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  	68	None	replace
18	[BUG]  [BUGGY]  return(this.optionalArg!=  null)?  false  :  this.optionalArg;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  null)?  false  :  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  null)?  false  :  this.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  	68	None	replace
19	[BUG]  [BUGGY]  return(this.optionalArg  >=  null)?  false  :  this.optionalArg;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  >=  null)?  false  :  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  >=  null)?  false  :  this.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  	68	None	replace
20	[BUG]  [BUGGY]  return(required  ==  null)?  true  :  required.booleanValue();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required  ==  null)?  true  :  required.booleanValue();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required  ==  null)?  true  :  required.booleanValue();	  return(required    ==    null)?    false    :    required.booleanValue();    	non-compiled	[CE]  	14	None	replace
21	[BUG]  [BUGGY]  return(required!=  null)?  false  :  required.booleanValue();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required!=  null)?  false  :  required.booleanValue();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required!=  null)?  false  :  required.booleanValue();	  return(required    ==    null)?    false    :    required.booleanValue();    	non-compiled	[CE]  	14	None	replace
22	[BUG]  [BUGGY]  return(this.isRequired  ||  this.hasArgs);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.isRequired  ||  this.hasArgs);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.isRequired  ||  this.hasArgs);	  return    this.isRequired;    	non-compiled	[CE]  	31	None	replace
23	[BUG]  [BUGGY]  return  this.isRequired  ||  this.hasArg;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.isRequired  ||  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.isRequired  ||  this.hasArg;	  return    this.isRequired;    	non-compiled	[CE]  	31	None	replace
24	[BUG]  [BUGGY]  return  this.required  >=  UNLIMITED_VALUES;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  >=  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  >=  UNLIMITED_VALUES;	  return    this.required!=    UNLIMITED_VALUES;    	non-compiled	[CE]  	94	None	replace
25	[BUG]  [BUGGY]  return  this.required!=  UNLIMITED_VALUES  ||  this.optionalArg  ==  null;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required!=  UNLIMITED_VALUES  ||  this.optionalArg  ==  null;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required!=  UNLIMITED_VALUES  ||  this.optionalArg  ==  null;	  return    this.required!=    UNLIMITED_VALUES;    	non-compiled	[CE]  	94	None	replace
26	[BUG]  [BUGGY]  return  this.optionalArg  &&  this.hasArg.equals(optionalArg);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.optionalArg  &&  this.hasArg.equals(optionalArg);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.optionalArg  &&  this.hasArg.equals(optionalArg);	  return    this.hasArg    &&    this.optionalArg.equals(optionalArg);    	non-compiled	[CE]  	73	None	replace
27	[BUG]  [BUGGY]  return  this.hasArg  ||  this.optionalArg.equals(optionalArg);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  ||  this.optionalArg.equals(optionalArg);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  ||  this.optionalArg.equals(optionalArg);	  return    this.hasArg    &&    this.optionalArg.equals(optionalArg);    	non-compiled	[CE]  	73	None	replace
28	[BUG]  [BUGGY]  return  this.hasArg  &&  this.optionalArg.equals(this.optionalArg);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.optionalArg.equals(this.optionalArg);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.optionalArg.equals(this.optionalArg);	  return    this.hasArg    &&    this.optionalArg.equals(optionalArg);    	non-compiled	[CE]  	73	None	replace
29	[BUG]  [BUGGY]  while(isRequired())  {  required  =  true;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(isRequired())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(isRequired())  {  required  =  true;  }	  if(!isRequired())    {    required    =    true;    }    	non-compiled	[CE]  	64	None	replace
30	[BUG]  [BUGGY]  return(this.values!=  null  ||  this.values.length  >  0);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  ||  this.values.length  >  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  ||  this.values.length  >  0);	  return(this.values!=    null    &&    this.values.length    >    0);    	non-compiled	[CE]  	65	None	replace
31	[BUG]  [BUGGY]  return(this.values  ==  null  &&  this.values.length  >  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null  &&  this.values.length  >  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null  &&  this.values.length  >  0);	  return(this.values!=    null    &&    this.values.length    >    0);    	non-compiled	[CE]  	65	None	replace
32	[BUG]  [BUGGY]  return(this.values  ==  null  ||  this.values.length  >  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null  ||  this.values.length  >  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null  ||  this.values.length  >  0);	  return(this.values!=    null    &&    this.values.length    >    0);    	non-compiled	[CE]  	65	None	replace
33	[BUG]  [BUGGY]  if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	44	None	replace
34	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	44	None	replace
35	[BUG]  [BUGGY]  if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }	  if(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	44	None	replace
36	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    requested    +=    argName.charAt(i);    }    	non-compiled	[CE]  	49	None	replace
37	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(0);  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(0);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(0);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    requested    +=    argName.charAt(i);    }    	non-compiled	[CE]  	49	None	replace
38	[BUG]  [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    requested    +=    argName.charAt(i);    }    	non-compiled	[CE]  	49	None	replace
39	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  request  +=  argName.charAt(i);  }  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  request  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  request  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    requested    +=    argName.charAt(i);    }    	non-compiled	[CE]  	49	None	replace
40	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.required.size()  ==  0;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.required.size()  ==  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.required.size()  ==  0;	  return(this.required!=    null)&&    this.values.size()    ==    0;    	non-compiled	[CE]  	100	None	replace
41	[BUG]  [BUGGY]  return(this.required  ==  null)&&  this.values.size()  ==  0;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  null)&&  this.values.size()  ==  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  null)&&  this.values.size()  ==  0;	  return(this.required!=    null)&&    this.values.size()    ==    0;    	non-compiled	[CE]  	100	None	replace
42	[BUG]  [BUGGY]  return(this.values  ==  null)&&  this.required.size()  ==  0;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null)&&  this.required.size()  ==  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null)&&  this.required.size()  ==  0;	  return(this.required!=    null)&&    this.values.size()    ==    0;    	non-compiled	[CE]  	100	None	replace
43	[BUG]  [BUGGY]  return  this.hasArg  ||  this.optionalArg.isRequired();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  ||  this.optionalArg.isRequired();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  ||  this.optionalArg.isRequired();	  return    this.hasArg    &&    this.optionalArg.isRequired();    	non-compiled	[CE]  	54	None	replace
44	[BUG]  [BUGGY]  return  this.optionalArg  &&  this.hasArg.isRequired();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.optionalArg  &&  this.hasArg.isRequired();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.optionalArg  &&  this.hasArg.isRequired();	  return    this.hasArg    &&    this.optionalArg.isRequired();    	non-compiled	[CE]  	54	None	replace
45	[BUG]  [BUGGY]  return  this.optionalArg  &&  this.hasArg;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.optionalArg  &&  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.optionalArg  &&  this.hasArg;	  return    this.hasArg    &&    this.optionalArg.isRequired();    	non-compiled	[CE]  	54	None	replace
46	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(0);    }    	non-compiled	[CE]  	77	None	replace
47	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(0);    }    	non-compiled	[CE]  	77	None	replace
48	[BUG]  [BUGGY]  if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(0);    }    	non-compiled	[CE]  	77	None	replace
49	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    values.size();    ++i)    {    needed    +=    args[i];    }    	non-compiled	[CE]  	3	None	replace
50	[BUG]  [BUGGY]  while(values.size()  >  0)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values.size()  >  0)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values.size()  >  0)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    values.size();    ++i)    {    needed    +=    args[i];    }    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  need  +=  args[i];  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  need  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  need  +=  args[i];  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    values.size();    ++i)    {    needed    +=    args[i];    }    	non-compiled	[CE]  	3	None	replace
52	[BUG]  [BUGGY]  Annotation  <?>  required  =  getRequired();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  getRequired();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  getRequired();	  Annotation    <?>    required    =    getNumberOfArgs();    	non-compiled	[CE]  	38	None	replace
53	[BUG]  [BUGGY]  Annotation  <?>  required  =  getRequiredValues();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  getRequiredValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  getRequiredValues();	  Annotation    <?>    required    =    getNumberOfArgs();    	non-compiled	[CE]  	38	None	replace
54	[BUG]  [BUGGY]  Annotation  <?>  required  =  getRequiredArgs();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  getRequiredArgs();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  getRequiredArgs();	  Annotation    <?>    required    =    getNumberOfArgs();    	non-compiled	[CE]  	38	None	replace
55	[BUG]  [BUGGY]  char  valuesep  =  getValues();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char  valuesep  =  getValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char  valuesep  =  getValues();	  String    valuesep    =    getValues();    	non-compiled	[CE]  	19	None	replace
56	[BUG]  [BUGGY]  String  valuesep  =  getRequiredValues();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String  valuesep  =  getRequiredValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String  valuesep  =  getRequiredValues();	  String    valuesep    =    getValues();    	non-compiled	[CE]  	19	None	replace
57	[BUG]  [BUGGY]  String  valuesep  =  getValues().toCharArray();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String  valuesep  =  getValues().toCharArray();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String  valuesep  =  getValues().toCharArray();	  String    valuesep    =    getValues();    	non-compiled	[CE]  	19	None	replace
58	[BUG]  [BUGGY]  return(this.optionalArg!=  0)||(this.required!=  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  0)||(this.required!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  0)||(this.required!=  null);	  return(this.required!=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	84	None	replace
59	[BUG]  [BUGGY]  return(this.required  ==  0)&&(this.optionalArg  ==  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  0)&&(this.optionalArg  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  0)&&(this.optionalArg  ==  null);	  return(this.required!=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	84	None	replace
60	[BUG]  [BUGGY]  return(this.optionalArg!=  0)&&(this.required!=  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  0)&&(this.required!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  0)&&(this.required!=  null);	  return(this.required!=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	84	None	replace
61	[BUG]  [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	92	None	replace
62	[BUG]  [BUGGY]  Character(valuesep)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(valuesep)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(valuesep)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	92	None	replace
63	[BUG]  [BUGGY]  Character(hasArg,  valuesep)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(hasArg,  valuesep)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(hasArg,  valuesep)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	92	None	replace
64	[BUG]  [BUGGY]  Character(hasOptionalArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(hasOptionalArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(hasOptionalArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	92	None	replace
65	[BUG]  [BUGGY]  return(this.optionalArg  ==  0)||(this.required!=  null);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  ==  0)||(this.required!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  ==  0)||(this.required!=  null);	  return(this.optionalArg    <    =    0)||(this.required!=    null);    	non-compiled	[CE]  	42	None	replace
66	[BUG]  [BUGGY]  return(this.optionalArg  <  0)||(this.required!=  null);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  <  0)||(this.required!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  <  0)||(this.required!=  null);	  return(this.optionalArg    <    =    0)||(this.required!=    null);    	non-compiled	[CE]  	42	None	replace
67	[BUG]  [BUGGY]  return(this.optionalArg  >=  0)||(this.required!=  null);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  >=  0)||(this.required!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  >=  0)||(this.required!=  null);	  return(this.optionalArg    <    =    0)||(this.required!=    null);    	non-compiled	[CE]  	42	None	replace
68	[BUG]  [BUGGY]  if(!required)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!required)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!required)  {  required  =  true;  }	  if(required)    {    required    =    true;    }    	non-compiled	[CE]  	4	None	replace
69	[BUG]  [BUGGY]  while(values.size()  >  0)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values.size()  >  0)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values.size()  >  0)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  while(values.size()    >    0)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	2	None	replace
70	[BUG]  [BUGGY]  while(values.size()  ==  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values.size()  ==  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values.size()  ==  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  while(values.size()    >    0)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	2	None	replace
71	[BUG]  [BUGGY]  while(values.size()  >  1)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values.size()  >  1)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values.size()  >  1)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  while(values.size()    >    0)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	2	None	replace
72	[BUG]  [BUGGY]  while(values.size()!=  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values.size()!=  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values.size()!=  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  while(values.size()    >    0)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	2	None	replace
73	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
74	[BUG]  [BUGGY]  while(hasArg  &&  numberOfArgs  <  =  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(hasArg  &&  numberOfArgs  <  =  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(hasArg  &&  numberOfArgs  <  =  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
75	[BUG]  [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(hasArg)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
76	[BUG]  [BUGGY]  while(hasArg  &&  numberOfArgs  <  =  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(hasArg  &&  numberOfArgs  <  =  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(hasArg  &&  numberOfArgs  <  =  UNLIMITED_VALUES)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
77	[BUG]  [BUGGY]  if(hasArg)  {  if(required  ==  false)  {  required  =  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(required  ==  false)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(required  ==  false)  {  required  =  false;  }	  if(required    ==    false)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	89	None	replace
78	[BUG]  [BUGGY]  if(hasArg)  {  if(required  ==  false)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(required  ==  false)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(required  ==  false)  {  required  =  true;  }	  if(required    ==    false)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	89	None	replace
79	[BUG]  [BUGGY]  String[]  valuesep  =  getRequiredValues();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String[]  valuesep  =  getRequiredValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String[]  valuesep  =  getRequiredValues();	  String[]    valuesep    =    getValues();    	non-compiled	[CE]  	18	None	replace
80	[BUG]  [BUGGY]  String[]  valuesep  =  getValues().toCharArray();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String[]  valuesep  =  getValues().toCharArray();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String[]  valuesep  =  getValues().toCharArray();	  String[]    valuesep    =    getValues();    	non-compiled	[CE]  	18	None	replace
81	[BUG]  [BUGGY]  return(this.values!=  null  ||  this.values.size()  >  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  ||  this.values.size()  >  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  ||  this.values.size()  >  0);	  return(this.values!=    null    &&    this.values.size()    >    0);    	non-compiled	[CE]  	51	None	replace
82	[BUG]  [BUGGY]  return(this.values  ==  null  ||  this.values.size()  >  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null  ||  this.values.size()  >  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null  ||  this.values.size()  >  0);	  return(this.values!=    null    &&    this.values.size()    >    0);    	non-compiled	[CE]  	51	None	replace
83	[BUG]  [BUGGY]  return  this.hasArg  &&  this.optionalArg.isRequired(type);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.optionalArg.isRequired(type);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.optionalArg.isRequired(type);	  return    this.hasArg    &&    this.optionalArg.equals(type);    	non-compiled	[CE]  	74	None	replace
84	[BUG]  [BUGGY]  return(required  ==  null)?  false  :  required.isNumberOfArgs();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required  ==  null)?  false  :  required.isNumberOfArgs();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required  ==  null)?  false  :  required.isNumberOfArgs();	  return(required    ==    null)?    false    :    required.isRequired();    	non-compiled	[CE]  	16	None	replace
85	[BUG]  [BUGGY]  return(required  ==  null)?  true  :  required.isRequired();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required  ==  null)?  true  :  required.isRequired();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required  ==  null)?  true  :  required.isRequired();	  return(required    ==    null)?    false    :    required.isRequired();    	non-compiled	[CE]  	16	None	replace
86	[BUG]  [BUGGY]  if(required  ==  null)?  false  :  required.isRequired();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required  ==  null)?  false  :  required.isRequired();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required  ==  null)?  false  :  required.isRequired();	  return(required    ==    null)?    false    :    required.isRequired();    	non-compiled	[CE]  	16	None	replace
87	[BUG]  [BUGGY]  if(isRequired()  &&  isVarArgs())  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  &&  isVarArgs())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  &&  isVarArgs())  {  required  =  true;  }	  if(isRequired()    ||    isVarArgs())    {    required    =    true;    }    	non-compiled	[CE]  	11	None	replace
88	[BUG]  [BUGGY]  if(isRequired()  ||  isOptionalArg())  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  isOptionalArg())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  isOptionalArg())  {  required  =  true;  }	  if(isRequired()    ||    isVarArgs())    {    required    =    true;    }    	non-compiled	[CE]  	11	None	replace
89	[BUG]  [BUGGY]  return  this.required  ==  0;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  ==  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  ==  0;	  return    this.required    <    =    0;    	non-compiled	[CE]  	83	None	replace
90	[BUG]  [BUGGY]  return  this.required!=  0;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required!=  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required!=  0;	  return    this.required    <    =    0;    	non-compiled	[CE]  	83	None	replace
91	[BUG]  [BUGGY]  return  this.required  >=  0;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  >=  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  >=  0;	  return    this.required    <    =    0;    	non-compiled	[CE]  	83	None	replace
92	[BUG]  [BUGGY]  return  this.required  <  0;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  <  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  <  0;	  return    this.required    <    =    0;    	non-compiled	[CE]  	83	None	replace
93	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	46	None	replace
94	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	46	None	replace
95	[BUG]  [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	46	None	replace
96	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	46	None	replace
97	[BUG]  [BUGGY]  if(hasArg())  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg())  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg())  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	29	None	replace
98	[BUG]  [BUGGY]  if(isRequired())  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }	  if(hasArg)    {    required    =    false;    if(required    ==    null)    {    required    =    true;    }    	non-compiled	[CE]  	30	None	replace
99	[BUG]  [BUGGY]  if(this.values!=  null)  {  return  this.values.isRequired();  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.values!=  null)  {  return  this.values.isRequired();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.values!=  null)  {  return  this.values.isRequired();  }	  return    this.values.isRequired();    	non-compiled	[CE]  	52	None	replace
100	[BUG]  [BUGGY]  return  this.values.isEmpty();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.isEmpty();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.isEmpty();	  return    this.values.isRequired();    	non-compiled	[CE]  	52	None	replace
101	[BUG]  [BUGGY]  return  this.values.isRequired()  &&  this.optionalArg;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.isRequired()  &&  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.isRequired()  &&  this.optionalArg;	  return    this.values.isRequired();    	non-compiled	[CE]  	52	None	replace
102	[BUG]  [BUGGY]  if(optionalArg  ==  false)  {  required  =  true;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  false)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  false)  {  required  =  true;  }	  if(optionalArg)    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	72	None	replace
103	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	72	None	replace
104	[BUG]  [BUGGY]  if(optionalArg  ==  null)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  null)  {  required  =  true;  }	  if(optionalArg)    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	72	None	replace
105	[BUG]  [BUGGY]  if(optionalArg!=  false)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  false)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  false)  {  required  =  true;  }	  if(optionalArg)    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	72	None	replace
106	[BUG]  [BUGGY]  return(this.optionalArg  ==  0)||(this.required  ==  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  ==  0)||(this.required  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  ==  0)||(this.required  ==  null);	  return(this.required    ==    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	39	None	replace
107	[BUG]  [BUGGY]  return(this.optionalArg  ==  0)&&(this.required  ==  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  ==  0)&&(this.required  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  ==  0)&&(this.required  ==  null);	  return(this.required    ==    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	39	None	replace
108	[BUG]  [BUGGY]  return(this.required  ==  0)&&(this.optionalArg!=  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  0)&&(this.optionalArg!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  0)&&(this.optionalArg!=  null);	  return(this.required    ==    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	39	None	replace
109	[BUG]  [BUGGY]  CharacterIterator  <?>  iterator  =  valuesep.iterator();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  CharacterIterator  <?>  iterator  =  valuesep.iterator();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	CharacterIterator  <?>  iterator  =  valuesep.iterator();	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	21	None	replace
110	[BUG]  [BUGGY]  CharacterIterator  <  String>  it  =  valuesep.iterator().next();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  CharacterIterator  <  String>  it  =  valuesep.iterator().next();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	CharacterIterator  <  String>  it  =  valuesep.iterator().next();	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	21	None	replace
111	[BUG]  [BUGGY]  CharacterIterator  it  =  this.values.iterator();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  CharacterIterator  it  =  this.values.iterator();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	CharacterIterator  it  =  this.values.iterator();	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	21	None	replace
112	[BUG]  [BUGGY]  CharacterIterator  <  String>  iterator  =  valuesep.iterator();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  CharacterIterator  <  String>  iterator  =  valuesep.iterator();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	CharacterIterator  <  String>  iterator  =  valuesep.iterator();	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	21	None	replace
113	[BUG]  [BUGGY]  return(values!=  null  &&  this.values.size()  >  0)||(this.values.contains(values));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(values!=  null  &&  this.values.size()  >  0)||(this.values.contains(values));  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(values!=  null  &&  this.values.size()  >  0)||(this.values.contains(values));	  return(this.values!=    null    &&    this.values.size()    >    0)||(this.values.contains(values));    	non-compiled	[CE]  	53	None	replace
114	[BUG]  [BUGGY]  return(this.values!=  null  ||  this.values.size()  >  0)||(this.values.contains(values));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  ||  this.values.size()  >  0)||(this.values.contains(values));  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  ||  this.values.size()  >  0)||(this.values.contains(values));	  return(this.values!=    null    &&    this.values.size()    >    0)||(this.values.contains(values));    	non-compiled	[CE]  	53	None	replace
115	[BUG]  [BUGGY]  return(this.values  ==  null  &&  this.values.size()  >  0)||(this.values.contains(values));  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null  &&  this.values.size()  >  0)||(this.values.contains(values));  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null  &&  this.values.size()  >  0)||(this.values.contains(values));	  return(this.values!=    null    &&    this.values.size()    >    0)||(this.values.contains(values));    	non-compiled	[CE]  	53	None	replace
116	[BUG]  [BUGGY]  return(this.required  ==  null)&&!this.required;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  null)&&!this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  null)&&!this.required;	  return(this.required!=    null)&&!this.required;    	non-compiled	[CE]  	25	None	replace
117	[BUG]  [BUGGY]  if(this.required!=  null)  {  return(this.required!=  null)&&!this.required;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)  {  return(this.required!=  null)&&!this.required;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)  {  return(this.required!=  null)&&!this.required;  }	  return(this.required!=    null)&&!this.required;    	non-compiled	[CE]  	25	None	replace
118	[BUG]  [BUGGY]  if(this.required!=  null)  {  return(this.required!=  null)&&!this.required;  }  else  {  return  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)  {  return(this.required!=  null)&&!this.required;  }  else  {  return  false;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)  {  return(this.required!=  null)&&!this.required;  }  else  {  return  false;  }	  return(this.required!=    null)&&!this.required;    	non-compiled	[CE]  	25	None	replace
119	[BUG]  [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	91	None	replace
120	[BUG]  [BUGGY]  Character(values)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(values)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(values)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	91	None	replace
121	[BUG]  [BUGGY]  Character(this.hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(this.hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(this.hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	91	None	replace
122	[BUG]  [BUGGY]  Character(values)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(values)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(values)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	91	None	replace
123	[BUG]  [BUGGY]  if(isRequired()  &&  isVarArgs())  {  required  =  false;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  &&  isVarArgs())  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  &&  isVarArgs())  {  required  =  false;  }	  if(isRequired()    ||    isVarArgs())    {    required    =    false;    }    	non-compiled	[CE]  	8	None	replace
124	[BUG]  [BUGGY]  if(isRequired()  ||  isOptionalArg())  {  required  =  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  isOptionalArg())  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  isOptionalArg())  {  required  =  false;  }	  if(isRequired()    ||    isVarArgs())    {    required    =    false;    }    	non-compiled	[CE]  	8	None	replace
125	[BUG]  [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  this.required.booleanValue();  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  this.required.booleanValue();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  this.required.booleanValue();  }	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
126	[BUG]  [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  true;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  true;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  true;  }	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
127	[BUG]  [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  false;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)required  =  false;  if(this.required.booleanValue()  ==  UNLIMITED_VALUES)  {  return  false;  }	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
128	[BUG]  [BUGGY]  return(this.required  ==  null)||  this.required;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  null)||  this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  null)||  this.required;	  return(this.required!=    null)||    this.required;    	non-compiled	[CE]  	26	None	replace
129	[BUG]  [BUGGY]  if(isRequired())  {  if(!hasArg)  {  required  =  true;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  if(!hasArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  if(!hasArg)  {  required  =  true;  }	  if(!hasArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	71	None	replace
130	[BUG]  [BUGGY]  if(hasArg  ||  optionalArg)  {  required  =  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg  ||  optionalArg)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg  ||  optionalArg)  {  required  =  false;  }	  if(hasArg    ||    optionalArg)    {    required    =    true;    }    	non-compiled	[CE]  	102	None	replace
131	[BUG]  [BUGGY]  if(hasArg  &&  optionalArg)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg  &&  optionalArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg  &&  optionalArg)  {  required  =  true;  }	  if(hasArg    ||    optionalArg)    {    required    =    true;    }    	non-compiled	[CE]  	102	None	replace
132	[BUG]  [BUGGY]  if(optionalArg  ||  hasArg)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ||  hasArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ||  hasArg)  {  required  =  true;  }	  if(hasArg    ||    optionalArg)    {    required    =    true;    }    	non-compiled	[CE]  	102	None	replace
133	[BUG]  [BUGGY]  if(!isRequired)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!isRequired)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!isRequired)  {  required  =  true;  }	  if(isRequired)    {    required    =    true;    }    	non-compiled	[CE]  	27	None	replace
134	[BUG]  [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  true;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(isRequired())  {  required  =  true;  }	  if(isRequired())    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	37	None	replace
135	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.values.isEmpty();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.values.isEmpty();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.values.isEmpty();	  return(this.values!=    null)&&    this.valuesep;    	non-compiled	[CE]  	66	None	replace
136	[BUG]  [BUGGY]  return(this.values!=  null)&&!this.values.isEmpty();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&!this.values.isEmpty();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&!this.values.isEmpty();	  return(this.values!=    null)&&    this.valuesep;    	non-compiled	[CE]  	66	None	replace
137	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.values.size();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.values.size();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.values.size();	  return(this.values!=    null)&&    this.valuesep;    	non-compiled	[CE]  	66	None	replace
138	[BUG]  [BUGGY]  optionalArg  =  false;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  optionalArg  =  false;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	optionalArg  =  false;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	57	None	replace
139	[BUG]  [BUGGY]  if(optionalArg  ==  null)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  null)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  null)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	57	None	replace
140	[BUG]  [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  false)  {  required  =  false;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	57	None	replace
141	[BUG]  [BUGGY]  if(hasRequired)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasRequired)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasRequired)  {  required  =  true;  }	  if(hasRequired)    {    required    =    false;    }    	non-compiled	[CE]  	28	None	replace
142	[BUG]  [BUGGY]  if(isRequired()  ||  hasOptionalArg)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasOptionalArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasOptionalArg)  {  required  =  true;  }	  if(isRequired()    ||    hasArg)    {    required    =    true;    }    	non-compiled	[CE]  	12	None	replace
143	[BUG]  [BUGGY]  if(isRequired()  &&  hasArg)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  &&  hasArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  &&  hasArg)  {  required  =  true;  }	  if(isRequired()    ||    hasArg)    {    required    =    true;    }    	non-compiled	[CE]  	12	None	replace
144	[BUG]  [BUGGY]  if(isRequired()  ||  hasMoreArgs)  {  required  =  true;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasMoreArgs)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasMoreArgs)  {  required  =  true;  }	  if(isRequired()    ||    hasArg)    {    required    =    true;    }    	non-compiled	[CE]  	12	None	replace
145	[BUG]  [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	optionalArg  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	79	None	replace
146	[BUG]  [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	optionalArg  =  false;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	79	None	replace
147	[BUG]  [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  noOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  noOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	optionalArg  =  false;  for(int  i  =  0;  i  <  noOfArgs;  i++)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	79	None	replace
148	[BUG]  [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  needed  =  true;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  optionalArg  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  needed  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	optionalArg  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  needed  =  true;  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	79	None	replace
149	[BUG]  [BUGGY]  return(this.optionalArg  <  0)||(this.required  ==  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  <  0)||(this.required  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  <  0)||(this.required  ==  null);	  return(this.optionalArg    <    =    0)||(this.required    ==    null);    	non-compiled	[CE]  	41	None	replace
150	[BUG]  [BUGGY]  return(this.optionalArg  >=  0)||(this.required  ==  null);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  >=  0)||(this.required  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  >=  0)||(this.required  ==  null);	  return(this.optionalArg    <    =    0)||(this.required    ==    null);    	non-compiled	[CE]  	41	None	replace
151	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(0);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(0);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(0);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    needed    +=    argName.charAt(i);    }    	non-compiled	[CE]  	47	None	replace
152	[BUG]  [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    needed    +=    argName.charAt(i);    }    	non-compiled	[CE]  	47	None	replace
153	[BUG]  [BUGGY]  Annotation  <?>  needed  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  needed  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  needed  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  needed  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    needed    +=    argName.charAt(i);    }    	non-compiled	[CE]  	47	None	replace
154	[BUG]  [BUGGY]  return(this.hasArg  &&  this.optionalArg!=  null)?  false  :  this.optionalArg;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.hasArg  &&  this.optionalArg!=  null)?  false  :  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.hasArg  &&  this.optionalArg!=  null)?  false  :  this.optionalArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
155	[BUG]  [BUGGY]  return(this.optionalArg!=  null)?  false  :  this.hasArg;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  null)?  false  :  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  null)?  false  :  this.hasArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
156	[BUG]  [BUGGY]  return(this.hasArg  &&  this.optionalArg!=  null)?  true  :  this.hasArg;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.hasArg  &&  this.optionalArg!=  null)?  true  :  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.hasArg  &&  this.optionalArg!=  null)?  true  :  this.hasArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
157	[BUG]  [BUGGY]  return(this.hasArg  &&  this.optionalArg  ==  null)?  false  :  this.optionalArg;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.hasArg  &&  this.optionalArg  ==  null)?  false  :  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.hasArg  &&  this.optionalArg  ==  null)?  false  :  this.optionalArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
158	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	23	None	replace
159	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	23	None	replace
160	[BUG]  [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	23	None	replace
161	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	23	None	replace
162	[BUG]  [BUGGY]  while(values.size()  >  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values.size()  >  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values.size()  >  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }	  if(required)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	90	None	replace
163	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.values.size()  ==  0;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.values.size()  ==  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.values.size()  ==  0;	  return(this.values!=    null)&&    this.values.size()    >    0;    	non-compiled	[CE]  	93	None	replace
164	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.values.size()  >  1;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.values.size()  >  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.values.size()  >  1;	  return(this.values!=    null)&&    this.values.size()    >    0;    	non-compiled	[CE]  	93	None	replace
165	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.values.size()  >=  0;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.values.size()  >=  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.values.size()  >=  0;	  return(this.values!=    null)&&    this.values.size()    >    0;    	non-compiled	[CE]  	93	None	replace
166	[BUG]  [BUGGY]  String  valuesep  =  getLongOpt();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String  valuesep  =  getLongOpt();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String  valuesep  =  getLongOpt();	  char[]    valuesep    =    getLongOpt();    	non-compiled	[CE]  	20	None	replace
167	[BUG]  [BUGGY]  char[]  valuesep  =  getDescription();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  valuesep  =  getDescription();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  valuesep  =  getDescription();	  char[]    valuesep    =    getLongOpt();    	non-compiled	[CE]  	20	None	replace
168	[BUG]  [BUGGY]  return(this.optionalArg  <  0)||(this.required  >=  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  <  0)||(this.required  >=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  <  0)||(this.required  >=  null);	  return(this.required    <    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	40	None	replace
169	[BUG]  [BUGGY]  if(required  ==  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required  ==  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required  ==  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }	  if(required    ==    null)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	58	None	replace
170	[BUG]  [BUGGY]  if(hasArg)  {  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(required    ==    null)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	58	None	replace
171	[BUG]  [BUGGY]  if(hasArg)  {  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }	  if(required    ==    null)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	58	None	replace
172	[BUG]  [BUGGY]  if(required!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }	  if(required    ==    null)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	58	None	replace
173	[BUG]  [BUGGY]  if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	69	None	replace
174	[BUG]  [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(isRequired())  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(isRequired())  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	69	None	replace
175	[BUG]  [BUGGY]  if(isRequired())  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	69	None	replace
176	[BUG]  [BUGGY]  required  =  false;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  required  =  false;  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	required  =  false;	  if(!isRequired())    {    required    =    false;    }    	non-compiled	[CE]  	78	None	replace
177	[BUG]  [BUGGY]  CharacterIterator  it  =  valuesep.iterator();  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  CharacterIterator  it  =  valuesep.iterator();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	CharacterIterator  it  =  valuesep.iterator();	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	75	None	replace
178	[BUG]  [BUGGY]  CharacterIterator  it  =  valuesep.iterator().next();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  CharacterIterator  it  =  valuesep.iterator().next();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	CharacterIterator  it  =  valuesep.iterator().next();	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	75	None	replace
179	[BUG]  [BUGGY]  if(isRequired()  ||  hasOptionalArg)  {  required  =  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasOptionalArg)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasOptionalArg)  {  required  =  false;  }	  if(isRequired()    ||    hasArg)    {    required    =    false;    }    	non-compiled	[CE]  	9	None	replace
180	[BUG]  [BUGGY]  if(isRequired()  ||  required)  {  required  =  true;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  required)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  required)  {  required  =  true;  }	  if(isRequired()    ||    hasArg)    {    required    =    false;    }    	non-compiled	[CE]  	9	None	replace
181	[BUG]  [BUGGY]  return  this.hasArg  &&  this.values.size()  ==  0;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.values.size()  ==  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.values.size()  ==  0;	  return    this.hasArg    &&    this.values.size()    >    0;    	non-compiled	[CE]  	85	None	replace
182	[BUG]  [BUGGY]  return  this.hasArg  &&  this.values.size()!=  0;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.values.size()!=  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.values.size()!=  0;	  return    this.hasArg    &&    this.values.size()    >    0;    	non-compiled	[CE]  	85	None	replace
183	[BUG]  [BUGGY]  return  this.hasArg  &&  this.values.size()  >  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.values.size()  >  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.values.size()  >  1;	  return    this.hasArg    &&    this.values.size()    >    0;    	non-compiled	[CE]  	85	None	replace
184	[BUG]  [BUGGY]  return  this.required  ==  UNLIMITED_VALUES  ||  this.optionalArg  ==  null;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  ==  UNLIMITED_VALUES  ||  this.optionalArg  ==  null;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  ==  UNLIMITED_VALUES  ||  this.optionalArg  ==  null;	  return    this.required    ==    UNLIMITED_VALUES;    	non-compiled	[CE]  	95	None	replace
185	[BUG]  [BUGGY]  CharacterIterator  it  =  this.optionalArgs.iterator();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  CharacterIterator  it  =  this.optionalArgs.iterator();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	CharacterIterator  it  =  this.optionalArgs.iterator();	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	76	None	replace
186	[BUG]  [BUGGY]  return  this.hasArg  ||  this.optionalArg.equals(required);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  ||  this.optionalArg.equals(required);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  ||  this.optionalArg.equals(required);	  return    this.hasArg    &&    this.optionalArg.equals(required);    	non-compiled	[CE]  	56	None	replace
187	[BUG]  [BUGGY]  if(isRequired()  &&  isUndefined())  {  required  =  true;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  &&  isUndefined())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  &&  isUndefined())  {  required  =  true;  }	  if(isRequired()    ||    isUndefined())    {    required    =    true;    }    	non-compiled	[CE]  	10	None	replace
188	[BUG]  [BUGGY]  if(isRequired()  ||  isNumberOfArgs())  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  isNumberOfArgs())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  isNumberOfArgs())  {  required  =  true;  }	  if(isRequired()    ||    isUndefined())    {    required    =    true;    }    	non-compiled	[CE]  	10	None	replace
189	[BUG]  [BUGGY]  return  this.hasArg  ||  this.values.isEmpty();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  ||  this.values.isEmpty();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  ||  this.values.isEmpty();	  return    this.hasArg    &&    this.values.isEmpty();    	non-compiled	[CE]  	86	None	replace
190	[BUG]  [BUGGY]  if(this.hasArg)  {  return  this.values.isEmpty();  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.hasArg)  {  return  this.values.isEmpty();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.hasArg)  {  return  this.values.isEmpty();  }	  return    this.hasArg    &&    this.values.isEmpty();    	non-compiled	[CE]  	86	None	replace
191	[BUG]  [BUGGY]  return  this.values.size()  >  1;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.size()  >  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.size()  >  1;	  return    this.values.size()    >    0;    	non-compiled	[CE]  	50	None	replace
192	[BUG]  [BUGGY]  return  this.values.size()  ==  0;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.size()  ==  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.size()  ==  0;	  return    this.values.size()    >    0;    	non-compiled	[CE]  	50	None	replace
193	[BUG]  [BUGGY]  return  this.values.size()!=  0;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.size()!=  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.size()!=  0;	  return    this.values.size()    >    0;    	non-compiled	[CE]  	50	None	replace
194	[BUG]  [BUGGY]  return(this.required  >  0)||(this.optionalArg  ==  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  >  0)||(this.optionalArg  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  >  0)||(this.optionalArg  ==  null);	  return(this.required    >=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	97	None	replace
195	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  required  =  true;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  null)  {  required  =  true;  }	  if(optionalArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	70	None	replace
196	[BUG]  [BUGGY]  if(isRequired()  &&  isUndefined())  {  required  =  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  &&  isUndefined())  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  &&  isUndefined())  {  required  =  false;  }	  if(isRequired()    ||    isUndefined())    {    required    =    false;    }    	non-compiled	[CE]  	7	None	replace
197	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(1);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(0);    }    	non-compiled	[CE]  	48	None	replace
198	[BUG]  [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  null;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(0);    }    	non-compiled	[CE]  	48	None	replace
199	[BUG]  [BUGGY]  if(optionalArg  ==  null)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  null)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  null)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	60	None	replace
200	[BUG]  [BUGGY]  optionalArg  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  optionalArg  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	optionalArg  =  false;  if(required!=  null)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	60	None	replace
201	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  required  =  false;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    false;    }    	non-compiled	[CE]  	80	None	replace
202	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  false;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    false;    }    	non-compiled	[CE]  	80	None	replace
203	[BUG]  [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  needed  =  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  needed  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  needed  =  false;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    false;    }    	non-compiled	[CE]  	80	None	replace
204	[BUG]  [BUGGY]  if(hasArg)  {  if(required!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(required!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(required!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(required!=    null)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	45	None	replace
205	[BUG]  [BUGGY]  return  this.values!=  null  &&  this.values.size()  >  0;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values!=  null  &&  this.values.size()  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values!=  null  &&  this.values.size()  >  0;	  return    this.values;    	non-compiled	[CE]  	32	None	replace
206	[BUG]  [BUGGY]  if(this.values!=  null)required  =  true;  if(this.values!=  null)  {  return  false;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.values!=  null)required  =  true;  if(this.values!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.values!=  null)required  =  true;  if(this.values!=  null)  {  return  false;  }	  return    this.values;    	non-compiled	[CE]  	32	None	replace
207	[BUG]  [BUGGY]  if(this.values!=  null)required  =  false;  if(this.values!=  null)  {  return  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.values!=  null)required  =  false;  if(this.values!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.values!=  null)required  =  false;  if(this.values!=  null)  {  return  false;  }	  return    this.values;    	non-compiled	[CE]  	32	None	replace
208	[BUG]  [BUGGY]  if(this.values!=  null)required  =  false;  if(this.values!=  null)  {  return  true;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.values!=  null)required  =  false;  if(this.values!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.values!=  null)required  =  false;  if(this.values!=  null)  {  return  true;  }	  return    this.values;    	non-compiled	[CE]  	32	None	replace
209	[BUG]  [BUGGY]  if(isVarArgs())  {  if(isRequired())  {  required  =  true;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isVarArgs())  {  if(isRequired())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isVarArgs())  {  if(isRequired())  {  required  =  true;  }	  if(isRequired())    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	36	None	replace
210	[BUG]  [BUGGY]  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required  ==  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  false;  }	  if(required!=    null)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	59	None	replace
211	[BUG]  [BUGGY]  if(hasArg)  {  if(required!=  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  if(required!=  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  if(required!=  null)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(required!=    null)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	59	None	replace
212	[BUG]  [BUGGY]  if(optionalArg)  {  if(required  ==  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  if(required  ==  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  if(required  ==  null)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(hasArg)    {    if(required    ==    null)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	43	None	replace
213	[BUG]  [BUGGY]  return  this.required  =  true;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  =  true;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  =  true;	  return    this.required    =    false;    	non-compiled	[CE]  	82	None	replace
214	[BUG]  [BUGGY]  return  this.required!=  false;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required!=  false;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required!=  false;	  return    this.required    =    false;    	non-compiled	[CE]  	82	None	replace
215	[BUG]  [BUGGY]  return  this.required  ==  false;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  ==  false;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  ==  false;	  return    this.required    =    false;    	non-compiled	[CE]  	82	None	replace
216	[BUG]  [BUGGY]  return  this.required  >  false;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  >  false;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  >  false;	  return    this.required    =    false;    	non-compiled	[CE]  	82	None	replace
217	[BUG]  [BUGGY]  Character(isRequired)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(isRequired)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(isRequired)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	91	None	replace
218	[BUG]  [BUGGY]  return  this.hasArg  &&  this.optionalArg.isRequired(this.valuesep);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.optionalArg.isRequired(this.valuesep);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.optionalArg.isRequired(this.valuesep);	  return    this.hasArg    &&    this.optionalArg.isRequired();    	non-compiled	[CE]  	54	None	replace
219	[BUG]  [BUGGY]  return(this.optionalArg  <  0)||(this.required  <  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  <  0)||(this.required  <  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  <  0)||(this.required  <  0);	  return(this.required    <    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	40	None	replace
220	[BUG]  [BUGGY]  return(this.required  <  0)&&(this.optionalArg  ==  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  <  0)&&(this.optionalArg  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  <  0)&&(this.optionalArg  ==  null);	  return(this.required    <    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	40	None	replace
221	[BUG]  [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }	  if(isRequired())    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	13	None	replace
222	[BUG]  [BUGGY]  if(!isRequired())  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!isRequired())  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!isRequired())  {  required  =  false;  if(required!=  null)  {  required  =  false;  }	  if(isRequired())    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	13	None	replace
223	[BUG]  [BUGGY]  char[]  valuesep  =  getLongOptValues();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  valuesep  =  getLongOptValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  valuesep  =  getLongOptValues();	  char[]    valuesep    =    getRequiredValues();    	non-compiled	[CE]  	63	None	replace
224	[BUG]  [BUGGY]  char[]  valuesep  =  getAllRequiredValues();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  valuesep  =  getAllRequiredValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  valuesep  =  getAllRequiredValues();	  char[]    valuesep    =    getRequiredValues();    	non-compiled	[CE]  	63	None	replace
225	[BUG]  [BUGGY]  if(optionalArg  >  0)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  >  0)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  >  0)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	70	None	replace
226	[BUG]  [BUGGY]  if(optionalArg  ==  false)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  false)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  false)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	70	None	replace
227	[BUG]  [BUGGY]  if(optionalArg  >  0)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  >  0)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  >  0)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	57	None	replace
228	[BUG]  [BUGGY]  return  this.hasArg  &&  this.values.size()  ==  UNLIMITED_VALUES;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.values.size()  ==  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.values.size()  ==  UNLIMITED_VALUES;	  return    this.hasArg    &&    this.values.isEmpty();    	non-compiled	[CE]  	86	None	replace
229	[BUG]  [BUGGY]  return  this.hasArg  &&  this.values.length  >  0;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.values.length  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.values.length  >  0;	  return    this.hasArg    &&    this.values.isEmpty();    	non-compiled	[CE]  	86	None	replace
230	[BUG]  [BUGGY]  return  this.isRequired  =  false;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.isRequired  =  false;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.isRequired  =  false;	  return    this.isRequired;    	non-compiled	[CE]  	31	None	replace
231	[BUG]  [BUGGY]  return  this.isRequired  =  true;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.isRequired  =  true;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.isRequired  =  true;	  return    this.isRequired;    	non-compiled	[CE]  	31	None	replace
232	[BUG]  [BUGGY]  return(this.values!=  null  &&  this.values.size()  >  1)||(this.values.contains(values));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  &&  this.values.size()  >  1)||(this.values.contains(values));  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  &&  this.values.size()  >  1)||(this.values.contains(values));	  return(this.values!=    null    &&    this.values.size()    >    0)||(this.values.contains(values));    	non-compiled	[CE]  	53	None	replace
233	[BUG]  [BUGGY]  return(this.values!=  null  &&  this.values.size()  >  0)||(this.values.containsKey(values));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  &&  this.values.size()  >  0)||(this.values.containsKey(values));  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  &&  this.values.size()  >  0)||(this.values.containsKey(values));	  return(this.values!=    null    &&    this.values.size()    >    0)||(this.values.contains(values));    	non-compiled	[CE]  	53	None	replace
234	[BUG]  [BUGGY]  return(this.optionalArg  >>  null)?  false  :  this.hasArg;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  >>  null)?  false  :  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  >>  null)?  false  :  this.hasArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
235	[BUG]  [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasArg)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }	  if(isRequired())    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	36	None	replace
236	[BUG]  [BUGGY]  if(!isRequired())  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!isRequired())  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!isRequired())  {  required  =  true;  if(required!=  null)  {  required  =  false;  }	  if(isRequired())    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	36	None	replace
237	[BUG]  [BUGGY]  char[]  valuesep  =  getArgName();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  valuesep  =  getArgName();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  valuesep  =  getArgName();	  char[]    valuesep    =    getLongOpt();    	non-compiled	[CE]  	20	None	replace
238	[BUG]  [BUGGY]  char[]  valuesep  =  getArgs();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  valuesep  =  getArgs();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  valuesep  =  getArgs();	  char[]    valuesep    =    getLongOpt();    	non-compiled	[CE]  	20	None	replace
239	[BUG]  [BUGGY]  if(isRequired  ||  optionalArg)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired  ||  optionalArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired  ||  optionalArg)  {  required  =  true;  }	  if(hasArg    ||    optionalArg)    {    required    =    true;    }    	non-compiled	[CE]  	102	None	replace
240	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    false;    }    	non-compiled	[CE]  	80	None	replace
241	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    false;    }    	non-compiled	[CE]  	80	None	replace
242	[BUG]  [BUGGY]  if(!required)  {  required  =  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!required)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!required)  {  required  =  false;  }	  if(required)    {    required    =    false;    }    	non-compiled	[CE]  	5	None	replace
243	[BUG]  [BUGGY]  return(this.values  ==  null)&&  this.valuesep;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null)&&  this.valuesep;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null)&&  this.valuesep;	  return(this.values!=    null)&&    this.valuesep;    	non-compiled	[CE]  	66	None	replace
244	[BUG]  [BUGGY]  return(this.values!=  null)&&  this.values.length;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)&&  this.values.length;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)&&  this.values.length;	  return(this.values!=    null)&&    this.valuesep;    	non-compiled	[CE]  	66	None	replace
245	[BUG]  [BUGGY]  return(required  ==  null)?  false  :  this.required;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required  ==  null)?  false  :  this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required  ==  null)?  false  :  this.required;	  return(this.required    ==    null)?    false    :    required;    	non-compiled	[CE]  	17	None	replace
246	[BUG]  [BUGGY]  if(!hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(required)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	61	None	replace
247	[BUG]  [BUGGY]  if(required)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	44	None	replace
248	[BUG]  [BUGGY]  return(this.values!=  null  &&  this.values.length  ==  0);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  &&  this.values.length  ==  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  &&  this.values.length  ==  0);	  return(this.values!=    null    &&    this.values.length    >    0);    	non-compiled	[CE]  	65	None	replace
249	[BUG]  [BUGGY]  if(isRequired()  &&  hasArg)  {  required  =  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  &&  hasArg)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  &&  hasArg)  {  required  =  false;  }	  if(isRequired()    ||    hasArg)    {    required    =    false;    }    	non-compiled	[CE]  	9	None	replace
250	[BUG]  [BUGGY]  Character(this.hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(this.hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(this.hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	92	None	replace
251	[BUG]  [BUGGY]  Character(isRequired)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(isRequired)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(isRequired)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  Character(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	92	None	replace
252	[BUG]  [BUGGY]  return  this.values!=  UNLIMITED_VALUES;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values!=  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values!=  UNLIMITED_VALUES;	  return    this.values;    	non-compiled	[CE]  	32	None	replace
253	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  this.values.size();  i++)  {  required  =  true;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
254	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.length;  i++)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.values.length;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  this.values.length;  i++)  {  required  =  true;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
255	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
256	[BUG]  [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasArg)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	29	None	replace
257	[BUG]  [BUGGY]  if(!isRequired())  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!isRequired())  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!isRequired())  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	29	None	replace
258	[BUG]  [BUGGY]  if(!hasArg)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!hasArg)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!hasArg)  {  required  =  false;  }	  if(!hasArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	71	None	replace
259	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  countOfArgs;  i++)  {  required  =  true;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	21	None	replace
260	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  lengthOfArgs;  i++)  {  required  =  true;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	21	None	replace
261	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }	  if(hasArg)    {    required    =    false;    if(required    ==    null)    {    required    =    true;    }    	non-compiled	[CE]  	30	None	replace
262	[BUG]  [BUGGY]  if(required)  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required)  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required)  {  required  =  false;  if(required  ==  null)  {  required  =  true;  }	  if(hasArg)    {    required    =    false;    if(required    ==    null)    {    required    =    true;    }    	non-compiled	[CE]  	30	None	replace
263	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	75	None	replace
264	[BUG]  [BUGGY]  if(hasArg  ||  isRequired())  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg  ||  isRequired())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg  ||  isRequired())  {  required  =  true;  }	  if(isRequired()    ||    hasArg)    {    required    =    true;    }    	non-compiled	[CE]  	12	None	replace
265	[BUG]  [BUGGY]  if(hasArg())  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg())  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg())  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	69	None	replace
266	[BUG]  [BUGGY]  if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    values.size();    ++i)    {    needed    +=    args[i];    }    	non-compiled	[CE]  	3	None	replace
267	[BUG]  [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    values.size();    ++i)    {    needed    +=    args[i];    }    	non-compiled	[CE]  	3	None	replace
268	[BUG]  [BUGGY]  if(!isRequired)  {  required  =  false;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!isRequired)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!isRequired)  {  required  =  false;  }	  if(isRequired)    {    required    =    false;    }    	non-compiled	[CE]  	6	None	replace
269	[BUG]  [BUGGY]  if(this.optionalArg!=  null)  {  return(this.required!=  null)&&  this.optionalArg;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.optionalArg!=  null)  {  return(this.required!=  null)&&  this.optionalArg;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.optionalArg!=  null)  {  return(this.required!=  null)&&  this.optionalArg;  }	  return(this.required!=    null)&&    this.optionalArg;    	non-compiled	[CE]  	99	None	replace
270	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  valueOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  valueOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  valueOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	76	None	replace
271	[BUG]  [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasArg)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }	  if(isRequired())    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	37	None	replace
272	[BUG]  [BUGGY]  if(!isRequired())  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!isRequired())  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!isRequired())  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }	  if(isRequired())    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	37	None	replace
273	[BUG]  [BUGGY]  return(this.optionalArg!=  0)||(this.required!=  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  0)||(this.required!=  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  0)||(this.required!=  0);	  return(this.required!=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	84	None	replace
274	[BUG]  [BUGGY]  return(this.required!=  0)&&(this.optionalArg  ==  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required!=  0)&&(this.optionalArg  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required!=  0)&&(this.optionalArg  ==  null);	  return(this.required!=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	84	None	replace
275	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(0);    }    	non-compiled	[CE]  	77	None	replace
276	[BUG]  [BUGGY]  String[]  valuesep  =  getValues(numberOfArgs);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  String[]  valuesep  =  getValues(numberOfArgs);  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	String[]  valuesep  =  getValues(numberOfArgs);	  String[]    valuesep    =    getValues();    	non-compiled	[CE]  	18	None	replace
277	[BUG]  [BUGGY]  return(this.optionalArg!=  0)||(this.required  ==  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  0)||(this.required  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  0)||(this.required  ==  null);	  return(this.optionalArg    <    =    0)||(this.required    ==    null);    	non-compiled	[CE]  	41	None	replace
278	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	60	None	replace
279	[BUG]  [BUGGY]  if(optionalArg  >  0)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  >  0)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  >  0)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	60	None	replace
280	[BUG]  [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  false)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	60	None	replace
281	[BUG]  [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	79	None	replace
282	[BUG]  [BUGGY]  char[]  required  =  getAllRequiredValues();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  required  =  getAllRequiredValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  required  =  getAllRequiredValues();	  char[]    required    =    getRequiredValues();    	non-compiled	[CE]  	87	None	replace
283	[BUG]  [BUGGY]  char[]  required  =  getValues();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  required  =  getValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  required  =  getValues();	  char[]    required    =    getRequiredValues();    	non-compiled	[CE]  	87	None	replace
284	[BUG]  [BUGGY]  char[]  required  =  getArguments();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  required  =  getArguments();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  required  =  getArguments();	  char[]    required    =    getRequiredValues();    	non-compiled	[CE]  	87	None	replace
285	[BUG]  [BUGGY]  if(this.required!=  null)  {  return  this.required.booleanValue();  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)  {  return  this.required.booleanValue();  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)  {  return  this.required.booleanValue();  }	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
286	[BUG]  [BUGGY]  return(this.required!=  null)&&  this.required.booleanValue();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required!=  null)&&  this.required.booleanValue();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required!=  null)&&  this.required.booleanValue();	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
287	[BUG]  [BUGGY]  return  this.required.booleanValue()  &&  this.optionalArg.length()  >  UNLIMITED_VALUES;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required.booleanValue()  &&  this.optionalArg.length()  >  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required.booleanValue()  &&  this.optionalArg.length()  >  UNLIMITED_VALUES;	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
288	[BUG]  [BUGGY]  return(required  ==  null)?  true  :  required.length;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required  ==  null)?  true  :  required.length;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required  ==  null)?  true  :  required.length;	  return(required    ==    null)?    false    :    required.length;    	non-compiled	[CE]  	62	None	replace
289	[BUG]  [BUGGY]  Annotation  <?>  required  =  getNumberOfArgs(numberOfArgs);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  getNumberOfArgs(numberOfArgs);  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  getNumberOfArgs(numberOfArgs);	  Annotation    <?>    required    =    getNumberOfArgs();    	non-compiled	[CE]  	38	None	replace
290	[BUG]  [BUGGY]  Annotation  <?>  required  =  getNumberOfArgs(UNLIMITED_VALUES);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  getNumberOfArgs(UNLIMITED_VALUES);  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  getNumberOfArgs(UNLIMITED_VALUES);	  Annotation    <?>    required    =    getNumberOfArgs();    	non-compiled	[CE]  	38	None	replace
291	[BUG]  [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	96	None	replace
292	[BUG]  [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	96	None	replace
293	[BUG]  [BUGGY]  return  this.values.isRequired()  ||(this.values!=  null  &&  this.values.isEmpty());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.isRequired()  ||(this.values!=  null  &&  this.values.isEmpty());  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.isRequired()  ||(this.values!=  null  &&  this.values.isEmpty());	  return    this.values.isRequired();    	non-compiled	[CE]  	52	None	replace
294	[BUG]  [BUGGY]  while(values!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values!=  null)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  while(values.size()    >    0)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	2	None	replace
295	[BUG]  [BUGGY]  return(this.required  >  0)&&(this.optionalArg  ==  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  >  0)&&(this.optionalArg  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  >  0)&&(this.optionalArg  ==  null);	  return(this.required    >=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	97	None	replace
296	[BUG]  [BUGGY]  return(this.optionalArg  >=  0)||(this.required  >=  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  >=  0)||(this.required  >=  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  >=  0)||(this.required  >=  0);	  return(this.required    >=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	97	None	replace
297	[BUG]  [BUGGY]  return(required!=  null)?  false  :  this.required;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required!=  null)?  false  :  this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required!=  null)?  false  :  this.required;	  return(this.required!=    null)?    false    :    required;    	non-compiled	[CE]  	15	None	replace
298	[BUG]  [BUGGY]  if(hasRequired  ||  hasArg)  {  required  =  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasRequired  ||  hasArg)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasRequired  ||  hasArg)  {  required  =  false;  }	  if(hasRequired)    {    required    =    false;    }    	non-compiled	[CE]  	28	None	replace
299	[BUG]  [BUGGY]  if(hasArg)  {  Annotation  <?>  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  Annotation  <?>  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  Annotation  <?>  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  requested  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    requested    +=    argName.charAt(i);    }    	non-compiled	[CE]  	49	None	replace
300	[BUG]  [BUGGY]  return(this.values  ==  null)&&  this.values.size()  >  0;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null)&&  this.values.size()  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null)&&  this.values.size()  >  0;	  return(this.values!=    null)&&    this.values.size()    >    0;    	non-compiled	[CE]  	93	None	replace
301	[BUG]  [BUGGY]  return(this.values!=  null  &&  this.values.size()  ==  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  &&  this.values.size()  ==  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  &&  this.values.size()  ==  0);	  return(this.values!=    null    &&    this.values.size()    >    0);    	non-compiled	[CE]  	51	None	replace
302	[BUG]  [BUGGY]  return(required!=  null)?  false  :  required.isRequired();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required!=  null)?  false  :  required.isRequired();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required!=  null)?  false  :  required.isRequired();	  return(required    ==    null)?    false    :    required.isRequired();    	non-compiled	[CE]  	16	None	replace
303	[BUG]  [BUGGY]  if(optionalArg  >  0)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  >  0)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  >  0)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	72	None	replace
304	[BUG]  [BUGGY]  if(optionalArg!=  false)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  false)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  false)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	72	None	replace
305	[BUG]  [BUGGY]  if(required  ==  false)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required  ==  false)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required  ==  false)  {  required  =  true;  }	  if(required    ==    false)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	89	None	replace
306	[BUG]  [BUGGY]  return(this.optionalArg  ==  0)||(this.required  ==  0);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  ==  0)||(this.required  ==  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  ==  0)||(this.required  ==  0);	  return(this.required    ==    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	39	None	replace
307	[BUG]  [BUGGY]  return(values  ==  null)?  false  :  values.booleanValue();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(values  ==  null)?  false  :  values.booleanValue();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(values  ==  null)?  false  :  values.booleanValue();	  return(required    ==    null)?    false    :    required.booleanValue();    	non-compiled	[CE]  	14	None	replace
308	[BUG]  [BUGGY]  return  this.values.size()  >=  0;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.size()  >=  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.size()  >=  0;	  return    this.values.size()    >    0;    	non-compiled	[CE]  	50	None	replace
309	[BUG]  [BUGGY]  if(hasArg()  ||  isVarArgs())  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg()  ||  isVarArgs())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg()  ||  isVarArgs())  {  required  =  true;  }	  if(isRequired()    ||    isVarArgs())    {    required    =    true;    }    	non-compiled	[CE]  	11	None	replace
310	[BUG]  [BUGGY]  if(isRequired())  {  return  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired())  {  return  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired())  {  return  false;  }	  if(isRequired())    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	37	None	replace
311	[BUG]  [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required!=  UNLIMITED_VALUES)  {  return  this.required;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)required  =  false;  if(this.required!=  UNLIMITED_VALUES)  {  return  this.required;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)required  =  false;  if(this.required!=  UNLIMITED_VALUES)  {  return  this.required;  }	  return(this.required!=    null)||    this.required;    	non-compiled	[CE]  	26	None	replace
312	[BUG]  [BUGGY]  return(this.values!=  null  &&  this.values.size  >  0);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  &&  this.values.size  >  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  &&  this.values.size  >  0);	  return(this.values!=    null    &&    this.values.length    >    0);    	non-compiled	[CE]  	65	None	replace
313	[BUG]  [BUGGY]  return(this.optional!=  null)&&  this.required;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optional!=  null)&&  this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optional!=  null)&&  this.required;	  return(this.required!=    null)&&    this.optionalArg;    	non-compiled	[CE]  	99	None	replace
314	[BUG]  [BUGGY]  return(this.optional  ==  null)&&  this.required;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optional  ==  null)&&  this.required;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optional  ==  null)&&  this.required;	  return(this.required!=    null)&&    this.optionalArg;    	non-compiled	[CE]  	99	None	replace
315	[BUG]  [BUGGY]  if(!hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(!hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(!hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  if(isRequired())    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	69	None	replace
316	[BUG]  [BUGGY]  return(this.values!=  null)||  this.valuesep;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null)||  this.valuesep;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null)||  this.valuesep;	  return(this.values!=    null)&&    this.valuesep;    	non-compiled	[CE]  	66	None	replace
317	[BUG]  [BUGGY]  if(optionalArg  <  =  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  <  =  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  <  =  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	76	None	replace
318	[BUG]  [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(i);  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(i);    }    	non-compiled	[CE]  	76	None	replace
319	[BUG]  [BUGGY]  if(this.values!=  null  &&  this.values.size()  >  0)required  =  true;  if(this.values.size()  >  0)required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.values!=  null  &&  this.values.size()  >  0)required  =  true;  if(this.values.size()  >  0)required  =  true;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.values!=  null  &&  this.values.size()  >  0)required  =  true;  if(this.values.size()  >  0)required  =  true;  }	  return(this.values    ==    null    &&    this.values.size()    >    0);    	non-compiled	[CE]  	67	None	replace
320	[BUG]  [BUGGY]  Annotation  <?>  required  =  UNLIMITED_VALUES;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  UNLIMITED_VALUES;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  UNLIMITED_VALUES;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	23	None	replace
321	[BUG]  [BUGGY]  Annotation  <?>  required  =  this.hasArg;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  this.hasArg;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  this.hasArg;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	23	None	replace
322	[BUG]  [BUGGY]  if(required  ==  false)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required  ==  false)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required  ==  false)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(required!=    null)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	59	None	replace
323	[BUG]  [BUGGY]  return(required  ==  null)?  false  :  required.isEmpty();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(required  ==  null)?  false  :  required.isEmpty();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(required  ==  null)?  false  :  required.isEmpty();	  return(required    ==    null)?    false    :    required.isRequired();    	non-compiled	[CE]  	16	None	replace
324	[BUG]  [BUGGY]  if(isRequired()  ||  isVoid())  {  required  =  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  isVoid())  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  isVoid())  {  required  =  false;  }	  if(isRequired()    ||    isUndefined())    {    required    =    false;    }    	non-compiled	[CE]  	7	None	replace
325	[BUG]  [BUGGY]  return(this.required!=  null  &&  this.required.booleanValue());  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required!=  null  &&  this.required.booleanValue());  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required!=  null  &&  this.required.booleanValue());	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
326	[BUG]  [BUGGY]  return  this.required.booleanValue()  &&  this.values.size()  >  1;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required.booleanValue()  &&  this.values.size()  >  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required.booleanValue()  &&  this.values.size()  >  1;	  return    this.required.booleanValue();    	non-compiled	[CE]  	35	None	replace
327	[BUG]  [BUGGY]  if(isRequired()  ||  isDescription())  {  required  =  false;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  isDescription())  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  isDescription())  {  required  =  false;  }	  if(isRequired()    ||    isVarArgs())    {    required    =    false;    }    	non-compiled	[CE]  	8	None	replace
328	[BUG]  [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  required  =  false;  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  required  =  true;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	21	None	replace
329	[BUG]  [BUGGY]  return  this.required!=  UNLIMITED_VALUES  &&  this.values.size()  >  1;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required!=  UNLIMITED_VALUES  &&  this.values.size()  >  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required!=  UNLIMITED_VALUES  &&  this.values.size()  >  1;	  return    this.required!=    UNLIMITED_VALUES;    	non-compiled	[CE]  	94	None	replace
330	[BUG]  [BUGGY]  return(this.values!=  null  &&  this.values.isRequired());  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  &&  this.values.isRequired());  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  &&  this.values.isRequired());	  return    this.values.isRequired();    	non-compiled	[CE]  	52	None	replace
331	[BUG]  [BUGGY]  return  this.values.isRequired()  ||  this.values.isEmpty();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values.isRequired()  ||  this.values.isEmpty();  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values.isRequired()  ||  this.values.isEmpty();	  return    this.values.isRequired();    	non-compiled	[CE]  	52	None	replace
332	[BUG]  [BUGGY]  return(this.optionalArg  <  =  0)&&(this.required  ==  null);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  <  =  0)&&(this.required  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  <  =  0)&&(this.required  ==  null);	  return(this.optionalArg    <    =    0)||(this.required    ==    null);    	non-compiled	[CE]  	41	None	replace
333	[BUG]  [BUGGY]  char[]  required  =  getRequired();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  required  =  getRequired();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  required  =  getRequired();	  char[]    required    =    getRequiredValues();    	non-compiled	[CE]  	87	None	replace
334	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  null)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  null)  {  required  =  true;  if(required  ==  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required    ==    null)    {    required    =    false;    }    	non-compiled	[CE]  	72	None	replace
335	[BUG]  [BUGGY]  if(hasArg  ||  required)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg  ||  required)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg  ||  required)  {  required  =  true;  }	  if(hasArg    ||    optionalArg)    {    required    =    true;    }    	non-compiled	[CE]  	102	None	replace
336	[BUG]  [BUGGY]  if(optionalArg  ==  null)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  null)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  null)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	70	None	replace
337	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  null)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  null)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	70	None	replace
338	[BUG]  [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	79	None	replace
339	[BUG]  [BUGGY]  if(optionalArg  <  =  UNLIMITED_VALUES)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg  <  =  UNLIMITED_VALUES)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg  <  =  UNLIMITED_VALUES)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	79	None	replace
340	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  null)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  null)  {  required  =  false;  if(required!=  null)  {  required  =  true;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    true;    }    	non-compiled	[CE]  	60	None	replace
341	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  null)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  null)  {  required  =  false;  if(required!=  null)  {  required  =  false;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	57	None	replace
342	[BUG]  [BUGGY]  if(optionalArg!=  false)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(optionalArg!=  false)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(optionalArg!=  false)  {  required  =  false;  }	  if(optionalArg)    {    required    =    false;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	57	None	replace
343	[BUG]  [BUGGY]  return  this.values!=  null  &&  this.values.size()  >  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.values!=  null  &&  this.values.size()  >  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.values!=  null  &&  this.values.size()  >  1;	  return    this.values;    	non-compiled	[CE]  	32	None	replace
344	[BUG]  [BUGGY]  if(required)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(hasArg)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	44	None	replace
345	[BUG]  [BUGGY]  return(this.values!=  null  &&  this.values.size()  >  1);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values!=  null  &&  this.values.size()  >  1);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values!=  null  &&  this.values.size()  >  1);	  return(this.values!=    null    &&    this.values.size()    >    0);    	non-compiled	[CE]  	51	None	replace
346	[BUG]  [BUGGY]  if(this.required!=  null)  {  return  this.required;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(this.required!=  null)  {  return  this.required;  }  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(this.required!=  null)  {  return  this.required;  }	  return(this.required!=    null)&&!this.required;    	non-compiled	[CE]  	25	None	replace
347	[BUG]  [BUGGY]  Annotation  <?>  required  =  false;  for(int  i  =  0;  i  <  valuesep;  ++i)  {  requested  +=  argName.charAt(i);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  false;  for(int  i  =  0;  i  <  valuesep;  ++i)  {  requested  +=  argName.charAt(i);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  false;  for(int  i  =  0;  i  <  valuesep;  ++i)  {  requested  +=  argName.charAt(i);  }	  Annotation    <?>    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    requested    +=    argName.charAt(i);    }    	non-compiled	[CE]  	49	None	replace
348	[BUG]  [BUGGY]  if(required  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required  ==  false)  {  required  =  false;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required[i]  =  true;  }	  if(required!=    null)    {    required    =    false;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required[i]    =    true;    }    	non-compiled	[CE]  	45	None	replace
349	[BUG]  [BUGGY]  return  this.required  ==  UNLIMITED_VALUES  &&  this.values.size()  >  1;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  ==  UNLIMITED_VALUES  &&  this.values.size()  >  1;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  ==  UNLIMITED_VALUES  &&  this.values.size()  >  1;	  return    this.required    ==    UNLIMITED_VALUES;    	non-compiled	[CE]  	95	None	replace
350	[BUG]  [BUGGY]  return  this.required  ==  UNLIMITED_VALUES  ||  this.values!=  UNLIMITED_VALUES;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  ==  UNLIMITED_VALUES  ||  this.values!=  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  ==  UNLIMITED_VALUES  ||  this.values!=  UNLIMITED_VALUES;	  return    this.required    ==    UNLIMITED_VALUES;    	non-compiled	[CE]  	95	None	replace
351	[BUG]  [BUGGY]  if(required)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required)  {  required  =  true;  for(int  i  =  0;  i  <  values.size();  ++i)  {  needed  +=  args[i];  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    values.size();    ++i)    {    needed    +=    args[i];    }    	non-compiled	[CE]  	3	None	replace
352	[BUG]  [BUGGY]  if(isRequired()  ||  optionalArg)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  optionalArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  optionalArg)  {  required  =  true;  }	  if(isRequired()    ||    hasArg)    {    required    =    true;    }    	non-compiled	[CE]  	12	None	replace
353	[BUG]  [BUGGY]  return(this.optionalArg  <  =  0)&&(this.required!=  null);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  <  =  0)&&(this.required!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  <  =  0)&&(this.required!=  null);	  return(this.optionalArg    <    =    0)||(this.required!=    null);    	non-compiled	[CE]  	42	None	replace
354	[BUG]  [BUGGY]  return(this.required  <  0)||(this.optionalArg!=  null);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  <  0)||(this.optionalArg!=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  <  0)||(this.optionalArg!=  null);	  return(this.optionalArg    <    =    0)||(this.required!=    null);    	non-compiled	[CE]  	42	None	replace
355	[BUG]  [BUGGY]  return  this.hasArg  ||  this.values.size()  >  0;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  ||  this.values.size()  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  ||  this.values.size()  >  0;	  return    this.hasArg    &&    this.values.size()    >    0;    	non-compiled	[CE]  	85	None	replace
356	[BUG]  [BUGGY]  return  this.required  >  UNLIMITED_VALUES  &&  this.values!=  UNLIMITED_VALUES;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  >  UNLIMITED_VALUES  &&  this.values!=  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  >  UNLIMITED_VALUES  &&  this.values!=  UNLIMITED_VALUES;	  return    this.required    =    false;    	non-compiled	[CE]  	82	None	replace
357	[BUG]  [BUGGY]  return  this.required  >  UNLIMITED_VALUES  ||  this.required  =  false;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  >  UNLIMITED_VALUES  ||  this.required  =  false;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  >  UNLIMITED_VALUES  ||  this.required  =  false;	  return    this.required    =    false;    	non-compiled	[CE]  	82	None	replace
358	[BUG]  [BUGGY]  return  this.required  >  UNLIMITED_VALUES  ||  this.values!=  UNLIMITED_VALUES;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.required  >  UNLIMITED_VALUES  ||  this.values!=  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.required  >  UNLIMITED_VALUES  ||  this.values!=  UNLIMITED_VALUES;	  return    this.required    =    false;    	non-compiled	[CE]  	82	None	replace
359	[BUG]  [BUGGY]  if(isRequired()  ||  optionalArg)  {  required  =  false;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  optionalArg)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  optionalArg)  {  required  =  false;  }	  if(isRequired()    ||    hasArg)    {    required    =    false;    }    	non-compiled	[CE]  	9	None	replace
360	[BUG]  [BUGGY]  if(isRequired()  ||  needsArg)  {  required  =  true;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  needsArg)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  needsArg)  {  required  =  true;  }	  if(isRequired()    ||    hasArg)    {    required    =    false;    }    	non-compiled	[CE]  	9	None	replace
361	[BUG]  [BUGGY]  if(isRequired()  ||  isDescription())  {  required  =  true;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(isRequired()  ||  isDescription())  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(isRequired()  ||  isDescription())  {  required  =  true;  }	  if(isRequired()    ||    isVarArgs())    {    required    =    true;    }    	non-compiled	[CE]  	11	None	replace
362	[BUG]  [BUGGY]  return  this.hasArg  &&  this.optionalArg.equals(valuesep);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.optionalArg.equals(valuesep);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.optionalArg.equals(valuesep);	  return    this.hasArg    &&    this.optionalArg.equals(required);    	non-compiled	[CE]  	56	None	replace
363	[BUG]  [BUGGY]  return(this.hasArg  &&  this.optionalArg  ==  null)?  false  :  this.hasArg;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.hasArg  &&  this.optionalArg  ==  null)?  false  :  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.hasArg  &&  this.optionalArg  ==  null)?  false  :  this.hasArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
364	[BUG]  [BUGGY]  return(this.hasArg  ||  this.optionalArg!=  null)?  false  :  this.hasArg;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.hasArg  ||  this.optionalArg!=  null)?  false  :  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.hasArg  ||  this.optionalArg!=  null)?  false  :  this.hasArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
365	[BUG]  [BUGGY]  return(this.hasArg  +  this.optionalArg!=  null)?  false  :  this.hasArg;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.hasArg  +  this.optionalArg!=  null)?  false  :  this.hasArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.hasArg  +  this.optionalArg!=  null)?  false  :  this.hasArg;	  return(this.hasArg    &&    this.optionalArg!=    null)?    false    :    this.hasArg;    	non-compiled	[CE]  	55	None	replace
366	[BUG]  [BUGGY]  if(required  ==  false)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(required  ==  false)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(required  ==  false)  {  required  =  true;  if(required!=  null)  {  required  =  false;  }	  if(!hasArg)    {    required    =    true;    if(required!=    null)    {    required    =    false;    }    	non-compiled	[CE]  	71	None	replace
367	[BUG]  [BUGGY]  return(this.optionalArg!=  0)&&(this.required  ==  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  0)&&(this.required  ==  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  0)&&(this.required  ==  null);	  return(this.required!=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	84	None	replace
368	[BUG]  [BUGGY]  return(this.optionalArg  ==  0)||(this.required!=  0);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  ==  0)||(this.required!=  0);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  ==  0)||(this.required!=  0);	  return(this.required!=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	84	None	replace
369	[BUG]  [BUGGY]  return(this.values  ==  null)&&  this.required.size()  >  0;  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.values  ==  null)&&  this.required.size()  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.values  ==  null)&&  this.required.size()  >  0;	  return(this.required!=    null)&&    this.values.size()    >    0;    	non-compiled	[CE]  	98	None	replace
370	[BUG]  [BUGGY]  while(values.size()  >=  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  while(values.size()  >=  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	while(values.size()  >=  0)  {  required  =  false;  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  while(values.size()    >    0)    {    required    =    false;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	2	None	replace
371	[BUG]  [BUGGY]  char[]  requiredValues  =  getRequiredValues();  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  char[]  requiredValues  =  getRequiredValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	char[]  requiredValues  =  getRequiredValues();	  char[]    valuesep    =    getRequiredValues();    	non-compiled	[CE]  	63	None	replace
372	[BUG]  [BUGGY]  return  this.optionalArg  >  UNLIMITED_VALUES;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.optionalArg  >  UNLIMITED_VALUES;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.optionalArg  >  UNLIMITED_VALUES;	  return    this.optionalArg;    	non-compiled	[CE]  	68	None	replace
373	[BUG]  [BUGGY]  return  this.optionalArg  >  0;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.optionalArg  >  0;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.optionalArg  >  0;	  return    this.optionalArg;    	non-compiled	[CE]  	68	None	replace
374	[BUG]  [BUGGY]  return(this.optionalArg!=  null)&&  this.optionalArg;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg!=  null)&&  this.optionalArg;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg!=  null)&&  this.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  	68	None	replace
375	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  values.size();  ++i)  {  required  +=  args[i];  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    values.size();    ++i)    {    required    +=    args[i];    }    	non-compiled	[CE]  	1	None	replace
376	[BUG]  [BUGGY]  Annotation  <?>  required  =  getValues();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Annotation  <?>  required  =  getValues();  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Annotation  <?>  required  =  getValues();	  Annotation    <?>    required    =    getNumberOfArgs();    	non-compiled	[CE]  	38	None	replace
377	[BUG]  [BUGGY]  try  ==  false)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  try  ==  false)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	try  ==  false)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  required  =  false;  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    false;    }    	non-compiled	[CE]  	80	None	replace
378	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  required  =  true;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  required  =  true;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
379	[BUG]  [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  NUMBER_VALUES;  i++)  {  required  =  true;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  if(hasArg)  {  for(int  i  =  0;  i  <  NUMBER_VALUES;  i++)  {  required  =  true;  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	if(hasArg)  {  for(int  i  =  0;  i  <  NUMBER_VALUES;  i++)  {  required  =  true;  }	  if(hasArg)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    required    =    true;    }    	non-compiled	[CE]  	22	None	replace
380	[BUG]  [BUGGY]  return(this.required  ==  null)?  false  :  needed;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.required  ==  null)?  false  :  needed;  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.required  ==  null)?  false  :  needed;	  return(this.required!=    null)?    false    :    required;    	non-compiled	[CE]  	15	None	replace
381	[BUG]  [BUGGY]  return(this.optionalArg  >=  0)||(this.required  >=  null);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  >=  0)||(this.required  >=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  >=  0)||(this.required  >=  null);	  return(this.required    >=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	97	None	replace
382	[BUG]  [BUGGY]  return(this.optionalArg  >=  0)&&(this.required  >=  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return(this.optionalArg  >=  0)&&(this.required  >=  null);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return(this.optionalArg  >=  0)&&(this.required  >=  null);	  return(this.required    >=    0)||(this.optionalArg    ==    null);    	non-compiled	[CE]  	97	None	replace
383	[BUG]  [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }  [BUGGY]      return  required;  }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	Character(hasArg)  {  required  =  true;  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  required  +=  argName.charAt(0);  }	  if(hasArg)    {    required    =    true;    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    required    +=    argName.charAt(0);    }    	non-compiled	[CE]  	77	None	replace
384	[BUG]  [BUGGY]  return  this.hasArg  ||  this.optionalArg.equals(type);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  ||  this.optionalArg.equals(type);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  ||  this.optionalArg.equals(type);	  return    this.hasArg    &&    this.optionalArg.equals(type);    	non-compiled	[CE]  	74	None	replace
385	[BUG]  [BUGGY]  return  this.hasArg  &&  this.values.contains(valuesep);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  boolean  isRequired()  {      [BUGGY]  return  this.hasArg  &&  this.values.contains(valuesep);  [BUGGY]      }  [CLASS]  Option  [METHOD]  isRequired  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  hasArg  optionalArg  required  char  valuesep  Class  type  List  values  String  argName  description  longOpt  opt  long  serialVersionUID  int  UNINITIALIZED  UNLIMITED_VALUES  numberOfArgs  	projects/Cli34/src/main/java/org/apache/commons/cli/Option.java	0.7071067811865475	288	288	2	replace	return  this.hasArg  &&  this.values.contains(valuesep);	  return    this.hasArg    &&    this.values.isEmpty();    	non-compiled	[CE]  	86	None	replace
