bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  DurableFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurableFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurableFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount    -    1);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
2	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis()    +    1,    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	28	7	add
3	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis()    +    1,    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	28	7	add
4	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis()    +    1,    amount    +    1));    DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	28	None	add
5	[BUG]  [BUGGY]  DurationFieldType  type  =(DurationFieldType)getChronology().getField(getChronology(),  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =(DurationFieldType)getChronology().getField(getChronology(),  amount);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =(DurationFieldType)getChronology().getField(getChronology(),  amount);	  DurationFieldType    type    =(DurationFieldType)getChronology().getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	12	None	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()    +    1,    amount    +    1));    	compilable	  [FE]  ComparisonFailure  	29	7	replace
7	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()    +    1,    amount    +    1));    	compilable	  [FE]  ComparisonFailure  	29	7	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	3	7	add
9	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	3	7	add
10	[BUG]  [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology(),  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology(),  amount);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iInstant.getField(getChronology(),  amount);	  DurationFieldType    type    =    iInstant.getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	9	None	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    	compilable	  [FE]  ComparisonFailure  	4	7	replace
12	[BUG]  [BUGGY]  if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  }	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    	compilable	  [FE]  ComparisonFailure  	4	7	replace
13	[BUG]  [BUGGY]  DurationFieldType  type  =  getFieldType(type,  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  getFieldType(type,  amount);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  getFieldType(type,  amount);	  DurationFieldType    type    =    getFieldType(type);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	2	None	replace
14	[BUG]  [BUGGY]  DurationFieldType  type  =  getFieldType(iInstant,  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  getFieldType(iInstant,  amount);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  getFieldType(iInstant,  amount);	  DurationFieldType    type    =    getFieldType(iInstant);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	1	None	replace
15	[BUG]  [BUGGY]  DurationFieldType  type  =  getFieldType(iInstant.getMillis());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  getFieldType(iInstant.getMillis());  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  getFieldType(iInstant.getMillis());	  DurationFieldType    type    =    getFieldType(iInstant);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	1	None	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),        amount        -        1));        setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  	compilable	  [FE]  ComparisonFailure  	17	7	add
17	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        -        1));        setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  	compilable	  [FE]  ComparisonFailure  	17	7	add
18	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        -        1));        setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	17	None	add
19	[BUG]  [BUGGY]  DurationFieldType  type  =  iField.getField(getChronology(),  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  iField.getField(getChronology(),  amount);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iField.getField(getChronology(),  amount);	  DurationFieldType    type    =    iField.getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	10	None	replace
20	[BUG]  [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount  +  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount  +  1);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount  +  1);	  DurationFieldType    type    =    iInstant.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	15	None	replace
21	[BUG]  [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount,  duration);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount,  duration);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount,  duration);	  DurationFieldType    type    =    iInstant.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	15	None	replace
22	[BUG]  [BUGGY]  MutableFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  SetMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  MutableFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  SetMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	MutableFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  SetMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    SetMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
23	[BUG]  [BUGGY]  Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    Set    <    DurationFieldType>    setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    	non-compiled	[CE]  ';'  expected	27	None	replace
24	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1,  getChronology());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1,  getChronology());  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1,  getChronology());	  DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount    +    1);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	16	None	replace
25	[BUG]  [BUGGY]  setMillis(getChronology().millis().set(getMillis(),  amount));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().millis().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().millis().set(getMillis(),  amount));	          setMillis(getChronology().year().set(getMillis(),    amount));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
26	[BUG]  [BUGGY]  setMillis(getChronology().year().set(getMillis(),  type));  [CE]  no  suitable  method  found  for  set(long,DurationFieldType)  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().year().set(getMillis(),  type));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().year().set(getMillis(),  type));	          setMillis(getChronology().year().set(getMillis(),    amount));    	non-compiled	[CE]  no  suitable  method  found  for  set(long,DurationFieldType)	14	None	replace
27	[BUG]  [BUGGY]  setMillis(getChronology().monthOfMinute().set(getMillis(),  amount),  type);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().monthOfMinute().set(getMillis(),  amount),  type);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().monthOfMinute().set(getMillis(),  amount),  type);	  setMillis(getChronology().monthOfMinute().set(getMillis(),    amount));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
28	[BUG]  [BUGGY]  setMillis(getChronology().monthOfMinute().set(getMillis(),  type));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().monthOfMinute().set(getMillis(),  type));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().monthOfMinute().set(getMillis(),  type));	  setMillis(getChronology().monthOfMinute().set(getMillis(),    amount));    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
29	[BUG]  [BUGGY]          add(type,  amount);  this.iInstant.add(type,  amount);  [CE]  cannot  find  symbol  iInstant  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          add(type,  amount);  this.iInstant.add(type,  amount);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                add(type,    amount);    this.iInstant.add(type,  amount);	  	non-compiled	[CE]  cannot  find  symbol  iInstant	25	None	add
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          add(type,  amount);  add(type,  amount);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	                add(type,    amount);    add(type,  amount);	  	compilable	  [FE]  ComparisonFailure  	25	7	add
31	[BUG]  [BUGGY]          add(type,  amount);  add(type,  amount);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          add(type,  amount);  add(type,  amount);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                add(type,    amount);    add(type,  amount);	  	compilable	  [FE]  ComparisonFailure  	25	7	add
32	[BUG]  [BUGGY]          add(type,  amount);  this.iInstant.setMillis(getFieldType().getMillis(),  amount);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          add(type,  amount);  this.iInstant.setMillis(getFieldType().getMillis(),  amount);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                add(type,    amount);    this.iInstant.setMillis(getFieldType().getMillis(),  amount);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
33	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  2);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  2);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  2);	  DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount,    duration);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	20	None	replace
34	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  0,  duration);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  0,  duration);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  0,  duration);	  DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount,    duration);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	20	None	replace
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().millisOfDay().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().millisOfDay().set(getMillis(),  amount));	  setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    	compilable	  [FE]  ComparisonFailure  	8	7	replace
36	[BUG]  [BUGGY]  setMillis(getChronology().millisOfDay().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().millisOfDay().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().millisOfDay().set(getMillis(),  amount));	  setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    	compilable	  [FE]  ComparisonFailure  	8	7	replace
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().year().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	                setMillis(getChronology().year().set(getMillis(),    amount));    setMillis(getChronology().year().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	13	7	add
38	[BUG]  [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().year().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().year().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                setMillis(getChronology().year().set(getMillis(),    amount));    setMillis(getChronology().year().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	13	7	add
39	[BUG]  [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().month().set(getMillis(),  amount));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().month().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                setMillis(getChronology().year().set(getMillis(),    amount));    setMillis(getChronology().month().set(getMillis(),  amount));	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
40	[BUG]  [BUGGY]  DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount,  getMillis());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount,  getMillis());  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount,  getMillis());	  DurationFieldType    type    =(DurationFieldType)type.getField(getChronology(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	11	None	replace
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    setMillis(getChronology().monthOfYear().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	6	add
42	[BUG]  [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    setMillis(getChronology().monthOfYear().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	6	add
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  setMillis(getChronology().year().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    setMillis(getChronology().year().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	7	add
44	[BUG]  [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  setMillis(getChronology().year().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  setMillis(getChronology().year().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    setMillis(getChronology().year().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	7	add
45	[BUG]  [BUGGY]  setMillis(getChronology().add(type,  amount),  iInstant);  [CE]  no  suitable  method  found  for  add(DurationFieldType,int)  [FE]        ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().add(type,  amount),  iInstant);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().add(type,  amount),  iInstant);	  setMillis(getChronology().add(type,    amount));    	non-compiled	[CE]  no  suitable  method  found  for  add(DurationFieldType,int)	21	None	replace
46	[BUG]  [BUGGY]  setMillis(getChronology().add(type,  amount,  iInstant));  [CE]  cannot  find  symbol  iInstant  [FE]          ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().add(type,  amount,  iInstant));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().add(type,  amount,  iInstant));	  setMillis(getChronology().add(type,    amount));    	non-compiled	[CE]  cannot  find  symbol  iInstant	21	None	replace
47	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]        ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    DurationFieldType    type    =    type.getField(getChronology());    setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	24	None	replace
48	[BUG]  [BUGGY]  DurationFieldType  type  =  getFieldType(instant);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  getFieldType(instant);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  getFieldType(instant);	  DurationFieldType    type    =    getFieldType(iInstant);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	1	None	replace
49	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  1);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  1);	  DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount,    duration);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	20	None	replace
50	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount  +  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount  +  1);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology(),  amount  +  1);	  DurationFieldType    type    =    type.getField(getChronology(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	23	None	replace
51	[BUG]  [BUGGY]  if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    Set    <    DurationFieldType>    setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    	non-compiled	[CE]  ';'  expected	27	None	replace
52	[BUG]  [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(type,  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(type,  amount);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iInstant.getField(getChronology()).add(type,  amount);	  DurationFieldType    type    =    iInstant.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	15	None	replace
53	[BUG]  [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  MutableDateTime  getChronology().monthOfYear().set(getMillis(),  amount));  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  MutableDateTime  getChronology().monthOfYear().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    MutableDateTime  getChronology().monthOfYear().set(getMillis(),  amount));	  	non-compiled	[CE]  ';'  expected	7	None	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().dayOfMonth().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().dayOfMonth().set(getMillis(),  amount));	          add(type,    amount);    	compilable	  [FE]  ComparisonFailure  	26	7	replace
55	[BUG]  [BUGGY]  setMillis(getChronology().dayOfMonth().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().dayOfMonth().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().dayOfMonth().set(getMillis(),  amount));	          add(type,    amount);    	compilable	  [FE]  ComparisonFailure  	26	7	replace
56	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1,  getMillis()  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [CE]  no  suitable  method  found  for  add(long,int,long)  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1,  getMillis()  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis()    +    1,    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1,  getMillis()  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  	non-compiled	[CE]  no  suitable  method  found  for  add(long,int,long)	28	None	add
57	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  *  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  *  1);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  *  1);	  DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount    +    1);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	16	None	replace
58	[BUG]  [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  MutableDateTime  getChronology().year().set(getMillis(),  amount));  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  MutableDateTime  getChronology().year().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                setMillis(getChronology().year().set(getMillis(),    amount));    MutableDateTime  getChronology().year().set(getMillis(),  amount));	  	non-compiled	[CE]  ';'  expected	13	None	add
59	[BUG]  [BUGGY]  if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1)  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1)  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1)	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    DurationFieldType    type    =    type.getField(getChronology());    setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    	non-compiled	[CE]  ')'  expected	24	None	replace
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    	compilable	  [FE]  ComparisonFailure  	18	7	replace
61	[BUG]  [BUGGY]  if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	if(amount  ==  1)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  }	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    	compilable	  [FE]  ComparisonFailure  	18	7	replace
62	[BUG]  [BUGGY]  DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount  +  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount  +  1);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount  +  1);	  DurationFieldType    type    =(DurationFieldType)type.getField(getChronology(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	11	None	replace
63	[BUG]  [BUGGY]          add(type,  amount);  iInstant.setMillis(getField().add(type,  amount));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          add(type,  amount);  iInstant.setMillis(getField().add(type,  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                add(type,    amount);    iInstant.setMillis(getField().add(type,  amount));	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
64	[BUG]  [BUGGY]          add(type,  amount);  this.iInstant.add(type);  [CE]  cannot  find  symbol  iInstant  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          add(type,  amount);  this.iInstant.add(type);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                add(type,    amount);    this.iInstant.add(type);	  	non-compiled	[CE]  cannot  find  symbol  iInstant	25	None	add
65	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1,  getChronology());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1,  getChronology());  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1,  getChronology());	  DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount    -    1);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	30	None	replace
66	[BUG]  [BUGGY]  setMillis(getChronology().add(type,  amount  -  1));  [CE]  no  suitable  method  found  for  add(DurationFieldType,int)  [FE]        ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().add(type,  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().add(type,  amount  -  1));	  setMillis(getChronology().add(type,    amount));    	non-compiled	[CE]  no  suitable  method  found  for  add(DurationFieldType,int)	21	None	replace
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	                setMillis(getChronology().year().set(getMillis(),    amount));    setMillis(getChronology().monthOfYear().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	13	7	add
68	[BUG]  [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          setMillis(getChronology().year().set(getMillis(),  amount));  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                setMillis(getChronology().year().set(getMillis(),    amount));    setMillis(getChronology().monthOfYear().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	13	7	add
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().millisOfSecond().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().millisOfSecond().set(getMillis(),  amount));	  setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    	compilable	  [FE]  ComparisonFailure  	8	5	replace
70	[BUG]  [BUGGY]  setMillis(getChronology().millisOfSecond().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().millisOfSecond().set(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().millisOfSecond().set(getMillis(),  amount));	  setMillis(getChronology().monthOfYear().set(getMillis(),    amount));    	compilable	  [FE]  ComparisonFailure  	8	5	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().year().add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().year().add(getMillis(),  amount));	          setMillis(getChronology().year().set(getMillis(),    amount));    	compilable	  [FE]  ComparisonFailure  	14	4	replace
72	[BUG]  [BUGGY]  setMillis(getChronology().year().add(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().year().add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().year().add(getMillis(),  amount));	          setMillis(getChronology().year().set(getMillis(),    amount));    	compilable	  [FE]  ComparisonFailure  	14	4	replace
73	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().days().add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().days().add(getMillis(),  amount));	          add(type,    amount);    	compilable	  [FE]  ComparisonFailure  	26	6	replace
74	[BUG]  [BUGGY]  setMillis(getChronology().days().add(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(getChronology().days().add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().days().add(getMillis(),  amount));	          add(type,    amount);    	compilable	  [FE]  ComparisonFailure  	26	6	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  add(type,  amount  -  1);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	add(type,  amount  -  1);	          add(type,    amount);    	compilable	  [FE]  ComparisonFailure  	26	7	replace
76	[BUG]  [BUGGY]  add(type,  amount  -  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  add(type,  amount  -  1);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	add(type,  amount  -  1);	          add(type,    amount);    	compilable	  [FE]  ComparisonFailure  	26	7	replace
77	[BUG]  [BUGGY]          add(type,  amount);  this.iInstant.setMillis(getField().add(type,  amount));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]          add(type,  amount);  this.iInstant.setMillis(getField().add(type,  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	                add(type,    amount);    this.iInstant.setMillis(getField().add(type,  amount));	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
78	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  /  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]                  ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  /  1);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  /  1);	  DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount    +    1);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	16	None	replace
79	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [CE]  no  suitable  method  found  for  add(long,int,int)  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis()    +    1,    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1,  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  	non-compiled	[CE]  no  suitable  method  found  for  add(long,int,int)	28	None	add
80	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),        amount        +        1));        setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()	  	non-compiled	[CE]  ')'  expected	3	None	add
81	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount,  getMillis());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount,  getMillis());  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology(),  amount,  getMillis());	  DurationFieldType    type    =    type.getField(getChronology(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	23	None	replace
82	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount,  null);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }      [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount,  null);  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology(),  amount,  null);	  DurationFieldType    type    =    type.getField(getChronology(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	23	None	replace
