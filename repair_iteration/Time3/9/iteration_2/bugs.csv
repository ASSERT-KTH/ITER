bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  DurationFieldType  type  =  getFieldType(iInstant);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]          ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  getFieldType(iInstant);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  getFieldType(iInstant);	      DurationFieldType    type    =    getFieldType(amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	8	None	replace
2	[BUG]  [BUGGY]  DurationFieldType  type  =  getFieldType(type);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  getFieldType(type);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  getFieldType(type);	      DurationFieldType    type    =    getFieldType(amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	8	None	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	3	7	add
4	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	3	7	add
5	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  SetMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  SetMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    SetMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
6	[BUG]  [BUGGY]  setMillis(getChronology().monthOfMinute().set(getMillis(),  amount));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(getChronology().monthOfMinute().set(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().monthOfMinute().set(getMillis(),  amount));	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(getChronology().monthOfYear().set(getMillis(),  amount));	      	compilable	  [FE]  ComparisonFailure  	6	7	replace
8	[BUG]  [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(getChronology().monthOfYear().set(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().monthOfYear().set(getMillis(),  amount));	      	compilable	  [FE]  ComparisonFailure  	6	7	replace
9	[BUG]  [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]        ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology());  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iInstant.getField(getChronology());	      DurationFieldType    type    =    type.getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	7	None	replace
10	[BUG]  [BUGGY]  DurationFieldType  type  =  iField.getField(getChronology());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]          ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  iField.getField(getChronology());  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iField.getField(getChronology());	      DurationFieldType    type    =    type.getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	7	None	replace
11	[BUG]  [BUGGY]  DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]        ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =(DurationFieldType)type.getField(getChronology(),  amount);	      DurationFieldType    type    =(DurationFieldType)type.getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	10	None	replace
12	[BUG]  [BUGGY]  DurationFieldType  type  =(DurationFieldType)getChronology().getField(getChronology());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]          ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =(DurationFieldType)getChronology().getField(getChronology());  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =(DurationFieldType)getChronology().getField(getChronology());	      DurationFieldType    type    =(DurationFieldType)type.getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	10	None	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]      setMillis(getChronology().year().set(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	        setMillis(getChronology().year().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	5	7	add
14	[BUG]  [BUGGY]      setMillis(getChronology().year().set(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]      setMillis(getChronology().year().set(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	        setMillis(getChronology().year().set(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	5	7	add
15	[BUG]  [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  iInstant.getField(getChronology()).add(getMillis(),  amount);	      DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	9	None	replace
16	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]              ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  +  1);	      DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	9	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  	compilable	  [FE]  ComparisonFailure  	1	7	add
18	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  	compilable	  [FE]  ComparisonFailure  	1	7	add
19	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]      ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	1	None	add
20	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  duration);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  duration);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount,  duration);	      DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	9	None	replace
21	[BUG]  [BUGGY]  setMillis(getChronology().add(type,  amount));  [CE]  no  suitable  method  found  for  add(DurationFieldType,int)  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(getChronology().add(type,  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(getChronology().add(type,  amount));	      	non-compiled	[CE]  no  suitable  method  found  for  add(DurationFieldType,int)	6	None	replace
22	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	3	None	add
23	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]        ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  type.getField(getChronology(),  amount);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology(),  amount);	      DurationFieldType    type    =    type.getField(getChronology());    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	7	None	replace
24	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    DurationFieldType  type  =  type.getField(getChronology());  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	1	None	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]      add(type,  amount);  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	        add(type,  amount);	  	compilable	  [FE]  ComparisonFailure  	5	7	add
26	[BUG]  [BUGGY]      add(type,  amount);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]      add(type,  amount);  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	        add(type,  amount);	  	compilable	  [FE]  ComparisonFailure  	5	7	add
27	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    -    1));    Set  <  DurationFieldType>  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	  	non-compiled	[CE]  ';'  expected	1	None	add
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	3	7	add
29	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1));    setMillis(type.getField(getChronology()).add(getMillis()  +  1,  amount  +  1));	  	compilable	  [FE]  ComparisonFailure  	3	7	add
30	[BUG]  [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]            ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }    [BUGGY]  DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount  -  1);	      DurationFieldType    type    =    type.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	9	None	replace
