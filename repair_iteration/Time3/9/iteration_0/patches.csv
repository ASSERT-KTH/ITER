bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	setMillis(type.getField(getChronology()).add(getMillis(),  amount));  	compilable	  [FE]  ComparisonFailure  	18	7	replace
2	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	setMillis(type.getField(getChronology()).add(getMillis(),  amount));  	compilable	  [FE]  ComparisonFailure  	18	7	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	setMillis(type.getField(getChronology()).add(getMillis(),  amount));  	compilable	  [FE]  ComparisonFailure  	18	7	replace
4	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	setMillis(type.getField(getChronology()).add(getMillis(),  amount));  	compilable	  [FE]  ComparisonFailure  	18	7	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]    [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	add	  	setMillis(type.getField(getChronology()).add(getMillis(),  amount));  	compilable	  [FE]  ComparisonFailure  	18	5	replace
6	[BUG]  [BUGGY]    [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]    [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	  	setMillis(type.getField(getChronology()).add(getMillis(),  amount));  	compilable	  [FE]  ComparisonFailure  	18	5	replace
7	[BUG]  [BUGGY]    DurationFieldType  type  =  type.getField(getChronology());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]    DurationFieldType  type  =  type.getField(getChronology());  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	    DurationFieldType  type  =  type.getField(getChronology());		non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	19	None	add
8	[BUG]  [BUGGY]    DurationFieldType  type  =  getFieldType(amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]      ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]    DurationFieldType  type  =  getFieldType(amount);  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	    DurationFieldType  type  =  getFieldType(amount);		non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	19	None	add
9	[BUG]  [BUGGY]    DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount);  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]        ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]    DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount);  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	    DurationFieldType  type  =  type.getField(getChronology()).add(getMillis(),  amount);		non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	19	None	add
10	[BUG]  [BUGGY]    DurationFieldType  type  =(DurationFieldType)type.getField(getChronology());  [CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  [BUGGY]    DurationFieldType  type  =(DurationFieldType)type.getField(getChronology());  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	639	639	5	replace	    DurationFieldType  type  =(DurationFieldType)type.getField(getChronology());		non-compiled	[CE]  variable  type  is  already  defined  in  method  add(DurationFieldType,int)	19	None	add
