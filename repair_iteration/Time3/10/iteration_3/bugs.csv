bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getChronology());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getChronology());  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  getChronology());	  setMillis(type.getChronology().add(getMillis(),    amount),    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  setMillis(getChronology().getField(type).addMillis(getMillis(),  amount));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(getChronology().getField(type).addMillis(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(getChronology().getField(type).addMillis(getMillis(),  amount));	  setField(getChronology().getField(type).addMillis(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).addMillis(getMillis(),  amount));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getField(getChronology()).addMillis(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getField(getChronology()).addMillis(getMillis(),  amount));	  setField(getChronology().getField(type).addMillis(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	add	                setMillis(type.getField(getChronology()).add(getMillis(),        amount));        setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	6	add
5	[BUG]  [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	                setMillis(type.getField(getChronology()).add(getMillis(),        amount));        setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	6	add
6	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getZone(),  instant);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getZone(),  instant);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  getZone(),  instant);	  setMillis(type.getChronology().add(getMillis(),    amount),    getZone());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount)+  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount)+  1);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount)+  1);	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount)+  1;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount)+  1;  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount)+  1;	  setMillis(type.getField(getChronology()).add(getMillis(),    amount    +    1);    	non-compiled	[CE]  ')'  expected	10	None	replace
9	[BUG]  [BUGGY]  setMillis(getChronology().getField(type).add(getMillis(),  amount));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(getChronology().getField(type).add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(getChronology().getField(type).add(getMillis(),  amount));	  setField(getChronology().getField(type).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getMillisOfSecond());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getMillisOfSecond());  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  getMillisOfSecond());	  setMillis(type.getChronology().add(getMillis(),    amount),    getDayOfMonth());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getMinuteOfDay());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getMinuteOfDay());  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  getMinuteOfDay());	  setMillis(type.getChronology().add(getMillis(),    amount),    getDayOfMonth());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	add	                setMillis(type.getField(getChronology()).add(getMillis(),        amount));        setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	6	add
13	[BUG]  [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	                setMillis(type.getField(getChronology()).add(getMillis(),        amount));        setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	7	6	add
14	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount)-  1,  getDayOfMonth());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount)-  1,  getDayOfMonth());  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount)-  1,  getDayOfMonth());	  setMillis(type.getChronology().add(getMillis(),    amount),    getDayOfMonth());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getMinuteOfYear());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getMinuteOfYear());  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  getMinuteOfYear());	  setMillis(type.getChronology().add(getMillis(),    amount),    getDayOfMonth());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	if(amount  ==  0)  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }  else  {  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  }	          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount  -  1),  this);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount  -  1),  this);  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount  -  1),  this);	  setMillis(type.getChronology().add(getMillis(),    amount),    this);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  setField(getChronology().getField(type).add(getMillis(),  amount  -  1));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setField(getChronology().getField(type).add(getMillis(),  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setField(getChronology().getField(type).add(getMillis(),  amount  -  1));	  setField(getChronology().getField(type).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount)-  1,  getZone());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount)-  1,  getZone());  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount)-  1,  getZone());	  setMillis(type.getChronology().add(getMillis(),    amount),    getZone());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setChronology(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [CE]  no  suitable  method  found  for  setChronology(long)  [FE]    ComparisonFailure    [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]          setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setChronology(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	                setMillis(type.getField(getChronology()).add(getMillis(),        amount));        setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setChronology(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));	  	non-compiled	[CE]  no  suitable  method  found  for  setChronology(long)	7	None	add
21	[BUG]  [BUGGY]  setField(getChronology().getField(type).addMillis(getMillis(),  amount  -  1));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(     "Field  must  not  be  null     ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));      [BUGGY]  setField(getChronology().getField(type).addMillis(getMillis(),  amount  -  1));  [BUGGY]      }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setField(getChronology().getField(type).addMillis(getMillis(),  amount  -  1));	  setField(getChronology().getField(type).addMillis(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
