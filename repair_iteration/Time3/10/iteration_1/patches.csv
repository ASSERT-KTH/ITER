bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	      setMillis(type.getField(getChronology()).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	      setMillis(type.getField(getChronology()).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getZone());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getZone());  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  getZone());	      setMillis(type.getChronology().add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  setField(getChronology().getField(type).add(getMillis(),  amount));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setField(getChronology().getField(type).add(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setField(getChronology().getField(type).add(getMillis(),  amount));	      setField(type.getField(getChronology()).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  setField(getChronology().getField(type).addMillis(getMillis(),  amount));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setField(getChronology().getField(type).addMillis(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setField(getChronology().getField(type).addMillis(getMillis(),  amount));	      setField(type.getField(getChronology()).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1));	      iInstant.setMillis(type.getField(getChronology()).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	add	        setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	1	6	add
8	[BUG]  [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]      setMillis(type.getField(getChronology()).add(getMillis(),  amount));  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	        setMillis(type.getField(getChronology()).add(getMillis(),    amount));    setMillis(type.getField(getChronology()).add(getMillis(),  amount));	  	compilable	  [FE]  ComparisonFailure  	1	6	add
9	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1);  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1);  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1);	      setMillis(type.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  ')'  expected	4	None	replace
10	[BUG]  [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1);  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1);  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getField(getChronology()).add(getMillis(),  amount  +  1);	      setMillis(type.getField(getChronology()).add(getMillis(),    amount);    	non-compiled	[CE]  ')'  expected	4	None	replace
11	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  this);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  this);  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  this);	      setMillis(type.getChronology().add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getDayOfMonth());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  setMillis(type.getChronology().add(getMillis(),  amount),  getDayOfMonth());  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	setMillis(type.getChronology().add(getMillis(),  amount),  getDayOfMonth());	      setMillis(type.getChronology().add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException(   "Field  must  not  be  null   ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));    [BUGGY]  iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));  [BUGGY]    }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount  -  1));	      iInstant.setMillis(type.getField(getChronology()).add(getMillis(),    amount));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
