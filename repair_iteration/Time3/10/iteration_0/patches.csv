bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	add	    setMillis(type.getField(getChronology()).add(getMillis(),  amount));		compilable	  [FE]  ComparisonFailure  	21	6	add
2	[BUG]  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	    setMillis(type.getField(getChronology()).add(getMillis(),  amount));		compilable	  [FE]  ComparisonFailure  	21	6	add
3	[BUG]  [BUGGY]    iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [CE]  cannot  find  symbol  iInstant  [FE]      ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	    iInstant.setMillis(type.getField(getChronology()).add(getMillis(),  amount));		non-compiled	[CE]  cannot  find  symbol  iInstant	21	None	add
4	[BUG]  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount);  [CE]  ')'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    setMillis(type.getField(getChronology()).add(getMillis(),  amount);  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	    setMillis(type.getField(getChronology()).add(getMillis(),  amount);		non-compiled	[CE]  ')'  expected	21	None	add
5	[BUG]  [BUGGY]    setField(type.getField(getChronology()).add(getMillis(),  amount));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    setField(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	    setField(type.getField(getChronology()).add(getMillis(),  amount));		non-compiled	[CE]  cannot  find  symbol	21	None	add
6	[BUG]  [BUGGY]    setMillis(type.getChronology().add(getMillis(),  amount));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  public  void  add(DurationFieldType  type,  int  amount)  {  if  (type  ==  null)  {  throw  new  IllegalArgumentException( "Field  must  not  be  null ");  }  setMillis(type.getField(getChronology()).add(getMillis(),  amount));  [BUGGY]    setMillis(type.getChronology().add(getMillis(),  amount));  [BUGGY]  }  [CLASS]  MutableDateTime  Property  [METHOD]  add  [RETURN_TYPE]  void  DurationFieldType  type  int  amount  [VARIABLES]  MutableDateTime  iInstant  instant  DateTimeField  field  iField  iRoundingField  boolean  long  duration  instant  instantMillis  millis  serialVersionUID  int  ROUND_CEILING  ROUND_FLOOR  ROUND_HALF_CEILING  ROUND_HALF_EVEN  ROUND_HALF_FLOOR  ROUND_NONE  amount  dayOfMonth  hourOfDay  iRoundingMode  millisOfSecond  minuteOfHour  mode  monthOfYear  scalar  secondOfMinute  value  year  DurationFieldType  type  	projects/Time3/src/main/java/org/joda/time/MutableDateTime.java	0.2581988897471611	640	640	5	replace	    setMillis(type.getChronology().add(getMillis(),  amount));		non-compiled	[CE]  cannot  find  symbol	21	None	add
