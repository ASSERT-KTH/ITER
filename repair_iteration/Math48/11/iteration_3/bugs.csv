bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.abs(f1),  inverted);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.abs(f1),  inverted);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.abs(f1),  inverted);	  x0    =    Math.max(x0,    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.abs(f1),  0.5);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.abs(f1),  0.5);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.abs(f1),  0.5);	  x0    =    Math.max(x0,    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
3	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.abs(f1));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.abs(f1));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(relativeAccuracy,  Math.abs(f1));	  x0    =    Math.max(x0,    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
4	[BUG]  [BUGGY]  x0  =  x1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x1;	  x0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
5	[BUG]  [BUGGY]  x0  =  x2;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x2;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x2;	  x0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
6	[BUG]  [BUGGY]  x0  =  f2  *  fx;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  f2  *  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  f2  *  fx;	  x0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
7	[BUG]  [BUGGY]  f0  =  f0  +  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f0  +  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f0  +  fx;	  f0    =    x0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
8	[BUG]  [BUGGY]  f0  =  x0  +  f1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  x0  +  f1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  x0  +  f1;	  f0    =    x0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  f0  =  x0  *  fx;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  x0  *  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  x0  *  fx;	  f0    =    x0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  f1  =  f1  +  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f1  +  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f1  +  fx;	  f1    =    fx0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  f0  =  Math.min(f0,  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.min(f0,  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.min(f0,  fx);	  f0    =    Math.max(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
12	[BUG]  [BUGGY]  f0  =  Math.max(f1,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(f1,  fx  +  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(f1,  fx  +  1);	  f0    =    Math.max(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
13	[BUG]  [BUGGY]  f1  =  f0  *  fx  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f0  *  fx  +  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f0  *  fx  +  1;	  f1    =    f0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
14	[BUG]  [BUGGY]  f1  =  f1  *  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f1  *  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f1  *  fx;	  f1    =    f0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
15	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  f0  *  fx);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  f0  *  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  f0  *  fx);	  f1    =    Math.max(0.0,    fx    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  *  f0);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  *  f0);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  *  f0);	  f1    =    Math.max(0.0,    fx    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  *  f1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  *  f1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  *  f1);	  f1    =    Math.max(0.0,    fx    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  *  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  *  fx  +  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  *  fx  +  1);	  f1    =    Math.max(0.0,    fx    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  f1  =  f0  +  fx  *  2;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f0  +  fx  *  2;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f0  +  fx  *  2;	  f1    =    f0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
20	[BUG]  [BUGGY]  x0  =  x1.getValue();  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x1.getValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x1.getValue();	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
21	[BUG]  [BUGGY]  x0  =  x0.getValue();  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x0.getValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x0.getValue();	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
22	[BUG]  [BUGGY]  x0  +=  fx.getValue();  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  +=  fx.getValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  +=  fx.getValue();	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
23	[BUG]  [BUGGY]  f1  =  fx  *  x0;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  *  x0;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  *  x0;	  f1    =    x0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
24	[BUG]  [BUGGY]  f1  =  f1,  fx;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f1,  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f1,  fx;	  f1    =    x0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
25	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.abs(fx  +  1));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.abs(fx  +  1));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.abs(fx  +  1));	  x0    =    Math.max(x0,    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
26	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.abs(fx));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.abs(fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(relativeAccuracy,  Math.abs(fx));	  x0    =    Math.max(x0,    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
27	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.abs(fx)+  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.abs(fx)+  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.abs(fx)+  1);	  x0    =    Math.max(x0,    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
28	[BUG]  [BUGGY]  f1  =  fx0  -  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx0  -  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx0  -  1;	  f1    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
29	[BUG]  [BUGGY]  f1  =  fx  /  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  /  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  /  1;	  f1    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
30	[BUG]  [BUGGY]  f1  =  f0  -  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f0  -  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f0  -  1;	  f1    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
31	[BUG]  [BUGGY]  x1  =  x0;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x1  =  x0;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x1  =  x0;	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    =    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
32	[BUG]  [BUGGY]  f1  =  Math.min(fx0,  f1);  break;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(fx0,  f1);  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(fx0,  f1);  break;	  f1    =    Math.min(fx,    f1);    break;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
33	[BUG]  [BUGGY]  f1  =  Math.min(f0,  f1);  break;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(f0,  f1);  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(f0,  f1);  break;	  f1    =    Math.min(fx,    f1);    break;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
34	[BUG]  [BUGGY]  f1  =  Math.min(f1,  fx);  break;  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(f1,  fx);  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(f1,  fx);  break;	  f1    =    Math.min(fx,    f1);    break;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
35	[BUG]  [BUGGY]  if(f1  *  fx  >  0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  >  0)  {  return  x0;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  >  0)  {  return  x0;  }	  if(f1    *    fx    <    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
36	[BUG]  [BUGGY]  if(f1  *  fx  <  =  0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  =  0)  {  return  x0;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  =  0)  {  return  x0;  }	  if(f1    *    fx    <    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
37	[BUG]  [BUGGY]  if(f1  *  fx  >=  0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  >=  0)  {  return  x0;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  >=  0)  {  return  x0;  }	  if(f1    *    fx    <    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  *  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  *  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  *  1);	  f1    =    Math.max(0.0,    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  f1  =  Math.max(0.5,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.5,  fx  -  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.5,  fx  -  1);	  f1    =    Math.max(0.0,    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  f1  =  Math.max(f0,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(f0,  fx  +  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(f0,  fx  +  1);	  f1    =    Math.max(f1,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
41	[BUG]  [BUGGY]  f1  =  Math.max(f1,  fx  *  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(f1,  fx  *  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(f1,  fx  *  1);	  f1    =    Math.max(f1,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
42	[BUG]  [BUGGY]  f1  =  fx0  *  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx0  *  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx0  *  1;	  f1    =    fx0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  f1  =  x0  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  x0  +  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  x0  +  1;	  f1    =    fx0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  f1  =  Math.max(0.5,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.5,  fx  +  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.5,  fx  +  1);	  f1    =    Math.max(0.5,    fx);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
45	[BUG]  [BUGGY]  f1  =  Math.max(0.5,  fx  *  fx);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.5,  fx  *  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.5,  fx  *  fx);	  f1    =    Math.max(0.5,    fx);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
46	[BUG]  [BUGGY]  f0  =  f1  *  fx  +  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  *  fx  +  2;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  *  fx  +  2;	  f0    =    f1    *    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
47	[BUG]  [BUGGY]  f0  =  f1  *  fx  +  3;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  *  fx  +  3;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  *  fx  +  3;	  f0    =    f1    *    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
48	[BUG]  [BUGGY]  f0  =  f1  *  fx  +  4;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  *  fx  +  4;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  *  fx  +  4;	  f0    =    f1    *    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
49	[BUG]  [BUGGY]  f1  =  fx0  *  fx  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx0  *  fx  +  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx0  *  fx  +  1;	  f1    =    fx0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(0.0,  fx  +  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(0.0,  fx  +  1);	  f0    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
51	[BUG]  [BUGGY]  f0  =  Math.max(0.0,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(0.0,  fx  -  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(0.0,  fx  -  1);	  f0    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
52	[BUG]  [BUGGY]  f0  =  Math.max(0.5,  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(0.5,  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(0.5,  fx);	  f0    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
53	[BUG]  [BUGGY]  f0  =  Math.max(1.0,  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(1.0,  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(1.0,  fx);	  f0    =    Math.max(0.0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
54	[BUG]  [BUGGY]  f1  =  Math.max(0.5,  fx0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.5,  fx0);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.5,  fx0);	  f1    =    Math.max(0.0,    fx0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
55	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx0  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx0  +  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx0  +  1);	  f1    =    Math.max(0.0,    fx0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
56	[BUG]  [BUGGY]  x0  =  x0  +  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x0  +  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x0  +  fx;	  x0    =    f1    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  x0  =  x1  +  fx;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x1  +  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x1  +  fx;	  x0    =    f1    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  x0  =(f1  *  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =(f1  *  fx  +  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =(f1  *  fx  +  1);	  x0    =(f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  x0  =(f1  *  fx  +  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =(f1  *  fx  +  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =(f1  *  fx  +  fx);	  x0    =(f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
60	[BUG]  [BUGGY]  x0  =(f1  +  fx);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =(f1  +  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =(f1  +  fx);	  x0    =(f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(fx,  f1));  break;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(fx,  f1));  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(fx,  f1));  break;	  x0    =    Math.max(x0,    Math.min(x0,    fx));    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
62	[BUG]  [BUGGY]  x0  =  Math.max(max,  Math.min(x0,  fx));  break;  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(max,  Math.min(x0,  fx));  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(max,  Math.min(x0,  fx));  break;	  x0    =    Math.max(x0,    Math.min(x0,    fx));    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
63	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.min(x0,  fx));  break;  [CE]  illegal  start  of  expression  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.min(x0,  fx));  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(relativeAccuracy,  Math.min(x0,  fx));  break;	  x0    =    Math.max(x0,    Math.min(x0,    fx));    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
64	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(inverted,  fx));  break;  [CE]  illegal  start  of  expression  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(inverted,  fx));  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(inverted,  fx));  break;	  x0    =    Math.max(x0,    Math.min(x0,    fx));    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
65	[BUG]  [BUGGY]  f1  =  Math.max(f1,  f0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(f1,  f0);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(f1,  f0);	  f1    =    Math.max(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
66	[BUG]  [BUGGY]  f1  =  Math.min(f1,  fx0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(f1,  fx0);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(f1,  fx0);	  f1    =    Math.min(fx0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
67	[BUG]  [BUGGY]  f0  =  f1  /  fx  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  /  fx  +  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  /  fx  +  1;	  f0    =    f1    /    fx;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
68	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  /(f1  +  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  /(f1  +  fx);	  f0    =    f1    /    fx;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
69	[BUG]  [BUGGY]  f0  =  f1  +  fx  /  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  +  fx  /  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  +  fx  /  1;	  f0    =    f1    +    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
70	[BUG]  [BUGGY]  f0  =  f1  +  fx  *  fx  -  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  +  fx  *  fx  -  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  +  fx  *  fx  -  1;	  f0    =    f1    +    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
71	[BUG]  [BUGGY]  f0  =  Math.max(f0,  f1  *  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(f0,  f1  *  fx  +  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(f0,  f1  *  fx  +  1);	  f0    =    Math.max(f0,    f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  f0  =  Math.max(f0,  f1  *  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(f0,  f1  *  fx  -  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(f0,  f1  *  fx  -  1);	  f0    =    Math.max(f0,    f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  f0  =  Math.min(f0,  f1  *  fx);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.min(f0,  f1  *  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.min(f0,  f1  *  fx);	  f0    =    Math.max(f0,    f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  f0  =  Math.max(f0,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(f0,  fx  +  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(f0,  fx  +  1);	  f0    =    Math.max(f0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  f0  =  f1,  fx;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1,  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1,  fx;	  f0    =    x1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
76	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(fx,  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(fx,  f1));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(fx,  f1));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
77	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(inverted,  fx));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(inverted,  fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(inverted,  fx));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
78	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.min(x0,  fx));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(relativeAccuracy,  Math.min(x0,  fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(relativeAccuracy,  Math.min(x0,  fx));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
79	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(fx,  max));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(fx,  max));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(fx,  max));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
80	[BUG]  [BUGGY]  f0  =  Math.min(f0,  f1,  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.min(f0,  f1,  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.min(f0,  f1,  fx);	  f0    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  f0  =  f1,  fx  *  fx1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1,  fx  *  fx1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1,  fx  *  fx1;	  f0    =    fx    *    fx1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  f0  =  fx  *  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  fx  *  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  fx  *  fx;	  f0    =    fx    *    fx1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  f0  =  x0  *  fx1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  x0  *  fx1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  x0  *  fx1;	  f0    =    fx    *    fx1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
84	[BUG]  [BUGGY]  f1  =  f0  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f0  +  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f0  +  1;	  f1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  f0  =  f0  *  fx;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f0  *  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f0  *  fx;	  f0    =    fx1    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
86	[BUG]  [BUGGY]  f1  =  f3;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f3;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f3;	  f1    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
87	[BUG]  [BUGGY]  f0  =  Math.max(F0,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(F0,  f1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(F0,  f1);	  f0    =    Math.max(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
88	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  +  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  +  2);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  +  2);	  f1    =    Math.max(0.0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
89	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  +  1  *  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  +  1  *  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  +  1  *  fx);	  f1    =    Math.max(0.0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  f0  =  f3  +  fx;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f3  +  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f3  +  fx;	  f0    =    f3;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
91	[BUG]  [BUGGY]  f0  =  f3  *  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f3  *  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f3  *  fx;	  f0    =    f3;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
92	[BUG]  [BUGGY]  f1  =  Math.min(f0,  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(f0,  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(f0,  fx);	  f1    =    Math.max(f0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
93	[BUG]  [BUGGY]  f1  =  Math.min(f1,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(f1,  fx  +  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(f1,  fx  +  1);	  f1    =    Math.min(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
94	[BUG]  [BUGGY]  if(f0  *  fx  <  1)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f0  *  fx  <  1)  {  return  x0;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f0  *  fx  <  1)  {  return  x0;  }	  if(x0    *    fx    <    1)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
95	[BUG]  [BUGGY]  if(f0  *  fx  <  1)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f0  *  fx  <  1)  {  return  x1;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f0  *  fx  <  1)  {  return  x1;  }	  if(x0    *    fx    <    1)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
96	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
97	[BUG]  [BUGGY]  if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
98	[BUG]  [BUGGY]  x0  =  f1  *  fx  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  f1  *  fx  +  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  f1  *  fx  +  1;	  x0    =    f1    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
99	[BUG]  [BUGGY]  x0  =  x0  *  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x0  *  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x0  *  fx;	  x0    =    f1    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
100	[BUG]  [BUGGY]  x0  =  x1  *  fx;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x1  *  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x1  *  fx;	  x0    =    f1    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
101	[BUG]  [BUGGY]  f0  =  f2  +  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f2  +  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f2  +  fx;	  f0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
102	[BUG]  [BUGGY]  f0  =  f2  *  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f2  *  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f2  *  fx;	  f0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
103	[BUG]  [BUGGY]  f1  =  fx  +  x0;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  +  x0;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  +  x0;	  f1    =    x0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
104	[BUG]  [BUGGY]  f0  =  f1  *  fx  /  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  *  fx  /  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  *  fx  /  1;	  f0    =    f1    *    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
105	[BUG]  [BUGGY]  f0  =  x0  *  fx  -  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  x0  *  fx  -  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  x0  *  fx  -  1;	  f0    =    f1    *    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
106	[BUG]  [BUGGY]  f0  =  f1  *  fx.doubleValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  *  fx.doubleValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  *  fx.doubleValue();	  f0    =    f1    +    fx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
107	[BUG]  [BUGGY]  f0  =  f0  +  fx.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f0  +  fx.doubleValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f0  +  fx.doubleValue();	  f0    =    f1    +    fx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
108	[BUG]  [BUGGY]  f0  =  x0  +  fx.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  x0  +  fx.doubleValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  x0  +  fx.doubleValue();	  f0    =    f1    +    fx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
109	[BUG]  [BUGGY]  f1  =  Math.min(F0,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(F0,  f1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(F0,  f1);	  f1    =    Math.min(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
110	[BUG]  [BUGGY]  f0  =  f2  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f2  +  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f2  +  1;	  f0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
111	[BUG]  [BUGGY]  f1  =  f2  +  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f2  +  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f2  +  fx;	  f1    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
112	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  /  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  /  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  /  1);	  f1    =    Math.max(0.0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
113	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    =    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
114	[BUG]  [BUGGY]  if(f1  *  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    =    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
115	[BUG]  [BUGGY]  if(f1  *  fx  >  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  >  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  >  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    =    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
116	[BUG]  [BUGGY]  if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x0;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x0;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x0;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    =    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
117	[BUG]  [BUGGY]  x0  =  f2  +  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  f2  +  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  f2  +  fx;	  x0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
118	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  f1  *  fx);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  f1  *  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  f1  *  fx);	  f1    =    Math.max(0.0,    fx    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
119	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  f1,  fx);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  f1,  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  f1,  fx);	  f1    =    Math.max(0.0,    fx    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
120	[BUG]  [BUGGY]  f0  =  f1  /  fx  -  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  /  fx  -  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  /  fx  -  1;	  f0    =    f1    *    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
121	[BUG]  [BUGGY]  f0  =  fx  *  f1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  fx  *  f1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  fx  *  f1;	  f0    =    fx    *    fx1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
122	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx0  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx0  -  1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx0  -  1);	  f1    =    Math.max(0.0,    fx0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
123	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx0  +  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx0  +  f1);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx0  +  f1);	  f1    =    Math.max(0.0,    fx0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
124	[BUG]  [BUGGY]  f1  =  fx  +  2;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  +  2;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  +  2;	  f1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
125	[BUG]  [BUGGY]  f1  =  Math.min(f1,  fx)-  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.min(f1,  fx)-  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.min(f1,  fx)-  1;	  f1    =    Math.min(f1,    fx);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
126	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(f1  -  fx));  break;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(f1  -  fx));  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(f1  -  fx));  break;	  x0    =    Math.max(x0,    Math.min(x0,    fx));    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
127	[BUG]  [BUGGY]  f1  =  Math.max(fx0,  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(fx0,  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(fx0,  fx);	  f1    =    fx1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
128	[BUG]  [BUGGY]  x0  =  f1  /  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  f1  /  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  f1  /  fx;	  x0    =    f1    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
129	[BUG]  [BUGGY]  x0  =  x3;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x3;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x3;	  x0    =    f0;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
130	[BUG]  [BUGGY]  f1  =  Math.max(0.0,  fx  -  1  +  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(0.0,  fx  -  1  +  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(0.0,  fx  -  1  +  fx);	  f1    =    Math.max(0.0,    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
131	[BUG]  [BUGGY]  f0  =  Math.max(f0,  f1  /  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.max(f0,  f1  /  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.max(f0,  f1  /  fx);	  f0    =    Math.max(f0,    f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
132	[BUG]  [BUGGY]  f1  =  f0  /  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f0  /  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f0  /  fx;	  f1    =    f0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
133	[BUG]  [BUGGY]  f1  =  fx  +  f0;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  +  f0;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  +  f0;	  f1    =    x0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
134	[BUG]  [BUGGY]  f0  =  f1  +  fx.longValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  +  fx.longValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  +  fx.longValue();	  f0    =    f1    +    fx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
135	[BUG]  [BUGGY]  f0  =  f1  +  fx.intValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  +  fx.intValue();  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  +  fx.intValue();	  f0    =    f1    +    fx.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
136	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(fx0,  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(fx0,  f1));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(fx0,  f1));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
137	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(0.0,  fx));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(0.0,  fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(0.0,  fx));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
138	[BUG]  [BUGGY]  if(f0  *  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f0  *  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f0  *  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
139	[BUG]  [BUGGY]  f1  =  fx  *  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  *  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  *  fx;	  f1    =    x0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
140	[BUG]  [BUGGY]  f1  =  fx  *  f0;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  *  f0;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  *  f0;	  f1    =    x0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
141	[BUG]  [BUGGY]  x0  =  Math.max(inverted,  Math.abs(fx));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(inverted,  Math.abs(fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(inverted,  Math.abs(fx));	  x0    =    Math.max(x0,    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
142	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
143	[BUG]  [BUGGY]  if(f1  *  fx  >=  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  >=  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  >=  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
144	[BUG]  [BUGGY]  if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  =  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
145	[BUG]  [BUGGY]  f0  =  fx  +  f0;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  fx  +  f0;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  fx  +  f0;	  f0    =    x0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
146	[BUG]  [BUGGY]  f0  =  Math.min(f1,  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.min(f1,  fx);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.min(f1,  fx);	  f0    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
147	[BUG]  [BUGGY]  f1  =  Math.max(fx0,  f1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(fx0,  f1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(fx0,  f1);	  f1    =    Math.min(fx0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
148	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.abs(f1)-  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.abs(f1)-  1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.abs(f1)-  1);	  x0    =    Math.max(x0,    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
149	[BUG]  [BUGGY]  x0  =  Math.max(f0,  Math.abs(f1));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(f0,  Math.abs(f1));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(f0,  Math.abs(f1));	  x0    =    Math.max(x0,    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
150	[BUG]  [BUGGY]  if(f0  *  fx  <  0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f0  *  fx  <  0)  {  return  f1;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f0  *  fx  <  0)  {  return  f1;  }	  if(f1    *    fx    <    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
151	[BUG]  [BUGGY]  f1  =  fx  -  1  +  fx;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  -  1  +  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  -  1  +  fx;	  f1    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
152	[BUG]  [BUGGY]  if(f0  *  fx  <  1)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f0  *  fx  <  1)  {  return  f1;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f0  *  fx  <  1)  {  return  f1;  }	  if(x0    *    fx    <    1)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
153	[BUG]  [BUGGY]  f1  *  fx  <  1)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  *  fx  <  1)  {  return  x0;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  *  fx  <  1)  {  return  x0;  }	  if(x0    *    fx    <    1)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
154	[BUG]  [BUGGY]  f1  =  fx0  *  fx2;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx0  *  fx2;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx0  *  fx2;	  f1    =    fx0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
155	[BUG]  [BUGGY]  f0  =  f1  +  fx  *  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  +  fx  *  1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  +  fx  *  1;	  f0    =    f1    +    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
156	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(x1,  fx));  break;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(x1,  fx));  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(x1,  fx));  break;	  x0    =    Math.max(x0,    Math.min(x0,    fx));    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(relativeAccuracy  *  fx));  break;  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(relativeAccuracy  *  fx));  break;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(relativeAccuracy  *  fx));  break;	  x0    =    Math.max(x0,    Math.min(x0,    fx));    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
158	[BUG]  [BUGGY]  f0  =  f3  +  fx1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f3  +  fx1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f3  +  fx1;	  f0    =    f3;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
159	[BUG]  [BUGGY]  f1  =  f0  +  fx  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f0  +  fx  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f0  +  fx  *  DEFAULT_ABSOLUTE_ACCURACY;	  f1    =    f0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
160	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.abs(fx  *  fx));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.abs(fx  *  fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.abs(fx  *  fx));	  x0    =    Math.max(x0,    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
161	[BUG]  [BUGGY]  if(f1  *  fx  <  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  +=  fx.getValue();  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
162	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0  +  fx.getValue();  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0  +  fx.getValue();  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0  +  fx.getValue();  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    +=    fx.getValue();    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
163	[BUG]  [BUGGY]  if(f0  *  fx  <  0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f0  *  fx  <  0)  {  return  x0;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f0  *  fx  <  0)  {  return  x0;  }	  if(f1    *    fx    <    0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
164	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(relativeAccuracy  *  fx));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(relativeAccuracy  *  fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(relativeAccuracy  *  fx));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
165	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.min(x1,  fx));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.min(x1,  fx));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.min(x1,  fx));	  x0    =    Math.max(x0,    Math.min(x0,    fx));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
166	[BUG]  [BUGGY]  f0  =  f1.length  *  fx;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1.length  *  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1.length  *  fx;	  f0    =    fx1    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
167	[BUG]  [BUGGY]  f0  =  x1  +  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  x1  +  fx;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  x1  +  fx;	  f0    =    x0    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
168	[BUG]  [BUGGY]  f1  =  f2  *  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f2  *  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f2  *  fx;	  f1    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
169	[BUG]  [BUGGY]  x0  =  x;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  x;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  x;	  x0    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
170	[BUG]  [BUGGY]  f1  =  x0  *  fx  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  x0  *  fx  +  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  x0  *  fx  +  1;	  f1    =    x0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
171	[BUG]  [BUGGY]  f1  *=  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  *=  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  *=  fx  >  0)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  x0  =  x1;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    x0    =    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
172	[BUG]  [BUGGY]  f1  =  fx0  +  0.5;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx0  +  0.5;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx0  +  0.5;	  f1    =    fx0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
173	[BUG]  [BUGGY]  f0  =  f1  *  fx1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f1  *  fx1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f1  *  fx1;	  f0    =    fx    *    fx1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
174	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  Math.min(inverted,  f1);  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  Math.min(inverted,  f1);	  f0    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
175	[BUG]  [BUGGY]  if(f1  *  fx  <  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  1)  {  for(int  i  =  0;  i  <  fx;  ++i)  {  return  x0;  }	  if(f1    *    fx    >    0)    {    for(int    i    =    0;    i    <    fx;    ++i)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
176	[BUG]  [BUGGY]  x0  =  Math.min(x0,  Math.abs(f1));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.min(x0,  Math.abs(f1));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.min(x0,  Math.abs(f1));	  x0    =    Math.max(x0,    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
177	[BUG]  [BUGGY]  x0  =  Math.max(x0,  Math.abs(f2));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  x0  =  Math.max(x0,  Math.abs(f2));  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	x0  =  Math.max(x0,  Math.abs(f2));	  x0    =    Math.max(x0,    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
178	[BUG]  [BUGGY]  f0  =  f2  +  fx1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f0  =  f2  +  fx1;  [BUGGY]      inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f0  =  f2  +  fx1;	  f0    =    f2;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
179	[BUG]  [BUGGY]  f1  =  f1,  fx  *  fx;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  f1,  fx  *  fx;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  f1,  fx  *  fx;	  f1    =    fx0    *    fx;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
180	[BUG]  [BUGGY]  if(f1  *  fx  <  2)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  if(f1  *  fx  <  2)  {  return  x0;  }  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	if(f1  *  fx  <  2)  {  return  x0;  }	  if(f1    *    fx    <    =    1)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
181	[BUG]  [BUGGY]  f1  =  Math.max(FALSE_ACCURACY,  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  Math.max(FALSE_ACCURACY,  fx);  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  Math.max(FALSE_ACCURACY,  fx);	  f1    =    Math.max(f0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
182	[BUG]  [BUGGY]  f1  =  fx  *  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;      [BUGGY]  f1  =  fx  *  1;  [BUGGY]      f0  =  f1;  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	176	176	1	replace	f1  =  fx  *  1;	  f1    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
