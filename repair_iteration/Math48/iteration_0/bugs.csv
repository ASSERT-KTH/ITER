bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE); [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue) { [BUGGY] return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE); [BUGGY] } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.4472135954999579	125	125	1	replace	
2	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] public double solve(final int maxEval, final UnivariateRealFunction f, final double min, final double max, final double startValue) { [BUGGY] [BUGGY] return solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE); } [CLASS] BaseSecantSolver Method [METHOD] solve [RETURN_TYPE] double  final int maxEval UnivariateRealFunction f final double min final double max final double startValue [VARIABLES] AllowedSolution allowed allowedSolution UnivariateRealFunction f Method ILLINOIS PEGASUS REGULA_FALSI method boolean double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy functionValueAccuracy max min relativeAccuracy startValue int maxEval  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.4472135954999579	125	125	1	add	
3	[BUG] [BUGGY] final double ftol = getFunctionValueAccuracy(); [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] return x0; } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  [BUGGY] final double ftol = getFunctionValueAccuracy(); [BUGGY] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	150	150	1	replace	
4	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] return x0; } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  [BUGGY] [BUGGY] final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	150	150	1	add	
5	[BUG] [BUGGY] final double atol = getAbsoluteAccuracy(); [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); [BUGGY] final double atol = getAbsoluteAccuracy(); [BUGGY] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	
6	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] } if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); [BUGGY] [BUGGY] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	add	
7	[BUG] [BUGGY] final double rtol = getRelativeAccuracy(); [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); [BUGGY] final double rtol = getRelativeAccuracy(); [BUGGY]    boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	152	152	1	replace	
8	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] if (f1 == 0.0) { return x1; }  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); [BUGGY] [BUGGY] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x); [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	152	152	1	add	
9	[BUG] [BUGGY] boolean inverted = false; [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT]  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   [BUGGY] boolean inverted = false; [BUGGY]   while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);     [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	156	156	1	replace	
10	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT]  verifyBracketing(x0, x1);  final double ftol = getFunctionValueAccuracy(); final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   [BUGGY] [BUGGY] boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);     [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	156	156	1	add	
11	[BUG] [BUGGY] final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [BUGGY] final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [BUGGY] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	
12	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] final double atol = getAbsoluteAccuracy(); final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  [BUGGY] [BUGGY] final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }   [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	add	
13	[BUG] [BUGGY] final double fx = computeObjectiveValue(x); [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [BUGGY] final double fx = computeObjectiveValue(x); [BUGGY]     if (fx == 0.0) { return x; }  if (f1 * fx < 0) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	
14	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] final double rtol = getRelativeAccuracy();   boolean inverted = false;  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); [BUGGY] [BUGGY] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }  if (f1 * fx < 0) { [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	add	
15	[BUG] [BUGGY] if (fx == 0.0) { [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT]  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);    [BUGGY] if (fx == 0.0) { [BUGGY] return x; }  if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	
16	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT]  while (true) {  final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0)); final double fx = computeObjectiveValue(x);    [BUGGY] [BUGGY] if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	add	
17	[BUG] [BUGGY] if (f1 * fx < 0) { [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }  [BUGGY] if (f1 * fx < 0) { [BUGGY]   x0 = x1; f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	172	172	1	replace	
18	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT] final double fx = computeObjectiveValue(x);    if (fx == 0.0) { return x; }  [BUGGY] [BUGGY] if (f1 * fx < 0) {   x0 = x1; f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	172	172	1	add	
19	[BUG] [BUGGY] x0 = x1; [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT]   if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   [BUGGY] x0 = x1; [BUGGY] f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	175	175	1	replace	
20	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testIssue631 [CONTEXT]   if (fx == 0.0) { return x; }  if (f1 * fx < 0) {   [BUGGY] [BUGGY] x0 = x1; f0 = f1; inverted = !inverted; } else { switch (method) { case ILLINOIS: f0 *= 0.5; break; case PEGASUS: f0 *= f1 / (f1 + fx); break; [CLASS] BaseSecantSolver Method [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed allowedSolution Method ILLINOIS PEGASUS REGULA_FALSI method boolean inverted double DEFAULT_ABSOLUTE_ACCURACY absoluteAccuracy atol f0 f1 ftol functionValueAccuracy fx max min relativeAccuracy rtol startValue x x0 x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	175	175	1	add	
