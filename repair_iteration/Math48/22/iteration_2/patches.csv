bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isLocal())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
2	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isLocal())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
3	[BUG]  [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSingleton())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSingleton())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSingleton())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isLocal())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
4	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSuperclassSolver();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSuperclassSolver();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSuperclassSolver();	  ILLINOIS    =    method.getLeastSuperclassSolver();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
5	[BUG]  [BUGGY]  ILLINOIS  =  method.getLeastSuperclassSolver(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getLeastSuperclassSolver(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getLeastSuperclassSolver(absoluteAccuracy);	  ILLINOIS    =    method.getLeastSuperclassSolver();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
6	[BUG]  [BUGGY]  ILLINOIS  =  method.getSecondSuperclassSolver();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getSecondSuperclassSolver();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getSecondSuperclassSolver();	  ILLINOIS    =    method.getLeastSuperclassSolver();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
7	[BUG]  [BUGGY]  this.allowed  =  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  absoluteAccuracy;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  absoluteAccuracy;	  this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  this.allowed  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;	  this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  |  REGULA_FALSI;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  |  REGULA_FALSI;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  |  REGULA_FALSI;	  this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecantSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
11	[BUG]  [BUGGY]  ILLINOIS  =  this.allowed.getAllowSecantSolver(method);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  this.allowed.getAllowSecantSolver(method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  this.allowed.getAllowSecantSolver(method);	  ILLINOIS    =    method.getAllowSecantSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
12	[BUG]  [BUGGY]  safeThan  <  BaseSecantSolver>  false  =  true;  [CE]  not  a  statement  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  <  BaseSecantSolver>  false  =  true;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  <  BaseSecantSolver>  false  =  true;	  safeThan    <    BaseSecantSolver>    false    =    false;    	non-compiled	[CE]  not  a  statement	38	None	replace
13	[BUG]  [BUGGY]  SafeThan  <  BaseSecantSolver>  false  =  true;  [CE]  not  a  statement  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeThan  <  BaseSecantSolver>  false  =  true;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeThan  <  BaseSecantSolver>  false  =  true;	  safeThan    <    BaseSecantSolver>    false    =    false;    	non-compiled	[CE]  not  a  statement	38	None	replace
14	[BUG]  [BUGGY]  safeThan  <  BaseSecantSolver>  false  =  null;  [CE]  not  a  statement  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  <  BaseSecantSolver>  false  =  null;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  <  BaseSecantSolver>  false  =  null;	  safeThan    <    BaseSecantSolver>    false    =    false;    	non-compiled	[CE]  not  a  statement	38	None	replace
15	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "Missing    method.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "Missing    method.       ");    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  Parchet.checkState(method  ==  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(method  ==  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method  ==  DEFAULT_ABSOLUTE_ACCURACY);	  Parchet.checkState(method    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
18	[BUG]  [BUGGY]  Parchet.checkState(method  ==  null,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(method  ==  null,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method  ==  null,  DEFAULT_ABSOLUTE_ACCURACY);	  Parchet.checkState(method    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
19	[BUG]  [BUGGY]  final  Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null.   ");  }  [CE]  <identifier>  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null.   ");  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null.   ");  }	  Method    {    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
20	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
21	[BUG]  [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
22	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  Method    <?>    method    =    method.getMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
23	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValue ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValue ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "returnValue ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();	  Method    <?>    method    =    method.getMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY).getMethod();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
24	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod(0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod(0);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod(0);	  Method    <?>    method    =    method.getMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY).getMethod();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
25	[BUG]  [BUGGY]  Parchet.checkState(method!=  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(method!=  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method!=  DEFAULT_ABSOLUTE_ACCURACY);	  Parchet.checkState(method!=    null);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
26	[BUG]  [BUGGY]  Parchet.checkState(this.allowed!=  null);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(this.allowed!=  null);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(this.allowed!=  null);	  Parchet.checkState(method!=    null);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
27	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialStandardValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialStandardValue()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialStandardValue()  +  1;	  ILLINOIS    =    method.getInitialStandardValue();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
28	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialStatement();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialStatement();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialStatement();	  ILLINOIS    =    method.getInitialStandardValue();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
29	[BUG]  [BUGGY]  ILLINOIS  =  method.getReturnState();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getReturnState();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getReturnState();	  ILLINOIS    =    method.getInitialState();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
30	[BUG]  [BUGGY]  while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  While(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  Method  <?>  method  =  method.getRawClass();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getRawClass();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getRawClass();	  Method    <?>    method    =    method.getName();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
32	[BUG]  [BUGGY]  Method  <?>  method  =  method.getReturnType();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getReturnType();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getReturnType();	  Method    <?>    method    =    method.getName();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
33	[BUG]  [BUGGY]  Method  <?>  method  =  method.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getSimpleName();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getSimpleName();	  Method    <?>    method    =    method.getName();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
34	[BUG]  [BUGGY]  Method  <?>  method  =  method.getDeclaredMethod();  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getDeclaredMethod();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getDeclaredMethod();	  Method    <?>    method    =    method.getName();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
35	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isFunctionDeclaration())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isFunctionDeclaration())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isFunctionDeclaration())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method ",  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method ",  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method ",  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
42	[BUG]  [BUGGY]  safeThan  =  method.allowed;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  =  method.allowed;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  =  method.allowed;	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
43	[BUG]  [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  this.allowed;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  this.allowed;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  <  BaseSecantSolver>  safeThan  =  this.allowed;	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
44	[BUG]  [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  method.allowed;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  method.allowed;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  <  BaseSecantSolver>  safeThan  =  method.allowed;	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
45	[BUG]  [BUGGY]  safeThan  =  method;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  =  method;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  =  method;	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
46	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
47	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  this.allowed  =  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  this.allowed  =  absoluteAccuracy;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions();  this.allowed  =  absoluteAccuracy;	  ILLINOIS    =    method.getAllowedSecantSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  SafeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  safeGet(method.getName())    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	31	None	replace
49	[BUG]  [BUGGY]  this.allowed  =  method.getAllowedSecantSolutions();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getAllowedSecantSolutions();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  method.getAllowedSecantSolutions();	  this.allowed    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
50	[BUG]  [BUGGY]  this.allowed  =  method.getAllowedSolutions();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getAllowedSolutions();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  method.getAllowedSolutions();	  this.allowed    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
51	[BUG]  [BUGGY]  this.allowed  =  method.getAllowSecantSolutions()  -  1;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getAllowSecantSolutions()  -  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  method.getAllowSecantSolutions()  -  1;	  this.allowed    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
52	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isLocal())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInstance())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInstance())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInstance())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isLocal())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
55	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
56	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions()  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions()  +  1;	  ILLINOIS    =    method.getAllowedSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSingletonMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
58	[BUG]  [BUGGY]  allowSecant(method,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  DEFAULT_ABSOLUTE_ACCURACY);	  allowSecant(method);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
59	[BUG]  [BUGGY]  allowSecant(method,  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  REGULA_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  REGULA_FALSI);	  allowSecant(method);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
60	[BUG]  [BUGGY]  allowSecant(this.allowed);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(this.allowed);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(this.allowed);	  allowSecant(method);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
61	[BUG]  [BUGGY]  allowSecant(method,  ILLINOIS);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  ILLINOIS);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  ILLINOIS);	  allowSecant(method);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
62	[BUG]  [BUGGY]  while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }	  While(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
63	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  unclosed  string  literal  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethod(   "method,   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
64	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY, ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY, ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY, ",  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethod(   "method,   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  final  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  For(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
66	[BUG]  [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  For(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
67	[BUG]  [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }	  For(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
68	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialSerialValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialSerialValue()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialSerialValue()  +  1;	  ILLINOIS    =    method.getInitialSerialValue();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
70	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialSerialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialSerialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialSerialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialSerialValue();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
71	[BUG]  [BUGGY]  safeGet(method.getName())>  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  not  a  statement  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeGet(method.getName())>  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeGet(method.getName())>  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  safeGet(method.getName())>    ILLINOIS)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  not  a  statement	32	None	replace
72	[BUG]  [BUGGY]  safeGet(method.getName())>  REGULA_FALSI)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  not  a  statement  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeGet(method.getName())>  REGULA_FALSI)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeGet(method.getName())>  REGULA_FALSI)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  safeGet(method.getName())>    ILLINOIS)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  not  a  statement	32	None	replace
73	[BUG]  [BUGGY]  safeGet(method.getName())>  PEGASUS)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  not  a  statement  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeGet(method.getName())>  PEGASUS)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeGet(method.getName())>  PEGASUS)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  safeGet(method.getName())>    ILLINOIS)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  not  a  statement	32	None	replace
74	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }	  final    for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialSecond()  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialSecond()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialSecond()  +  1;	  ILLINOIS    =    method.getInitialSecond();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  ILLINOIS  =  method.getSecond();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getSecond();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getSecond();	  ILLINOIS    =    method.getInitialSecond();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecantSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
78	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecantSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
79	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  REGULA_FALSI;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  REGULA_FALSI;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  REGULA_FALSI;	  ILLINOIS    =    method.getAllowedSolutions()    *    PEGASUS;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
80	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  /  PEGASUS;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  /  PEGASUS;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  /  PEGASUS;	  ILLINOIS    =    method.getAllowedSolutions()    *    PEGASUS;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
81	[BUG]  [BUGGY]  this.allowed  =  ALLowedSolution.ALLOW_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  ALLowedSolution.ALLOW_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  ALLowedSolution.ALLOW_ACCURACY;	  ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    ALLowedSolution.ALLOW_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
82	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  allowedSolution.ALLOW_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  allowedSolution.ALLOW_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  allowedSolution.ALLOW_ACCURACY;	  ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    ALLowedSolution.ALLOW_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
83	[BUG]  [BUGGY]  this.allowed  =  allowedSolution.ALLOW_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  allowedSolution.ALLOW_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  allowedSolution.ALLOW_ACCURACY;	  ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    ALLowedSolution.ALLOW_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
84	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
85	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  final    for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
86	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  final    for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
87	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getSeconds())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getSeconds())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getSeconds())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  final    for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
88	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
89	[BUG]  [BUGGY]  ILLINOIS  =  this.allowed.getAllowSolver(method);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  this.allowed.getAllowSolver(method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  this.allowed.getAllowSolver(method);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
90	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  allowed);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  allowed);	  ILLINOIS    =    method.getAllowedSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
91	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
92	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  this.allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  this.allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  this.allowed);	  ILLINOIS    =    method.getAllowedSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
93	[BUG]  [BUGGY]  allowSecant(method,  true)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  true)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  true)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  allowSecant(method,    false)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	59	None	replace
94	[BUG]  [BUGGY]  enableSecant(method,  true)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  enableSecant(method,  true)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	enableSecant(method,  true)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  allowSecant(method,    false)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	59	None	replace
95	[BUG]  [BUGGY]  final  For(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  For(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  For(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  For(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
96	[BUG]  [BUGGY]  Method  <?>  method  =  method.getRawMethod();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getRawMethod();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getRawMethod();	  Method    <?>    method    =    method.getMethod();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
97	[BUG]  [BUGGY]  allowSecant(method,  true);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  true);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  true);	  allowSecant(method,    false);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
98	[BUG]  [BUGGY]  allowSecant(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(this.allowed,  false);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(this.allowed,  false);	  allowSecant(method,    false);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
99	[BUG]  [BUGGY]  allowSecant(method,  false,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  false,  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  false,  absoluteAccuracy);	  allowSecant(method,    false);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
100	[BUG]  [BUGGY]  allowSecant(true,  false);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(true,  false);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(true,  false);	  allowSecant(method,    false);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
101	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
102	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
103	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  allowed);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  allowed);	  ILLINOIS    =    method.getAllowSecantSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
104	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  this.allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  this.allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  this.allowed);	  ILLINOIS    =    method.getAllowSecantSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
105	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "returnInitializing ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "returnInitializing ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "returnInitializing ",  DEFAULT_ABSOLUTE_ACCURACY);	  Method    <?>    method    =    method.getMethod(   "initializing   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
106	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "initializing ");  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "initializing ");  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "initializing ");	  Method    <?>    method    =    method.getMethod(   "initializing   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
107	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getAllowedSolutions()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
108	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;	  ILLINOIS    =    method.getAllowedSolutions()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
109	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSecantSolver(absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
110	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSingletonMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
111	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
112	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  unclosed  string  literal  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method,   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
113	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  null,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  unclosed  string  literal  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  null,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  null,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method,   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
114	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY, ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY, ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  DEFAULT_ABSOLUTE_ACCURACY, ",  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method,   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  This.allowed  =  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  This.allowed  =  absoluteAccuracy;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	This.allowed  =  absoluteAccuracy;	  This.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
116	[BUG]  [BUGGY]  This.allowed  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  This.allowed  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	This.allowed  =  absoluteAccuracy  +  DEFAULT_ABSOLUTE_ACCURACY;	  This.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
117	[BUG]  [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  |  REGULA_FALSI;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  |  REGULA_FALSI;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  |  REGULA_FALSI;	  This.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
118	[BUG]  [BUGGY]  safeThan  =  method.safeThan();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  =  method.safeThan();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  =  method.safeThan();	  safeThan    <    BaseSecantSolver>    safeThan    =    method.safeThan();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
119	[BUG]  [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan();	  safeThan    <    BaseSecantSolver>    safeThan    =    method.safeThan();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
120	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }	  final    for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
121	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialValue()  *  1;	  ILLINOIS    =    method.getInitialValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
122	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions();  this.allowed  =  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions();  this.allowed  =  absoluteAccuracy;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions();  this.allowed  =  absoluteAccuracy;	  ILLINOIS    =    method.getAllowedSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
123	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    IllegalArgumentException(   "Missing    method.       ");    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
124	[BUG]  [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    IllegalArgumentException(   "Missing    method.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
125	[BUG]  [BUGGY]  this.allowed  =  method.getAllowSecantSolutions(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getAllowSecantSolutions(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  method.getAllowSecantSolutions(absoluteAccuracy);	  this.allowed    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
126	[BUG]  [BUGGY]  Parchet.checkState(method!=  null  &&  method.isReGULA());  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(method!=  null  &&  method.isReGULA());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method!=  null  &&  method.isReGULA());	  Parchet.checkState(method!=    null);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
127	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "method ");  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "method ");  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "method ");	  Method    <?>    method    =    method.getMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
128	[BUG]  [BUGGY]  validateSecant(method);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  validateSecant(method);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	validateSecant(method);	  allowSecant(method);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
129	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "getMethod ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "getMethod ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "getMethod ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();	  Method    <?>    method    =    method.getMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY).getMethod();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
130	[BUG]  [BUGGY]  Parchet.checkState(method  ==  DEFAULT_ABSOLUTE_FALSI);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(method  ==  DEFAULT_ABSOLUTE_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method  ==  DEFAULT_ABSOLUTE_FALSI);	  Parchet.checkState(method    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
131	[BUG]  [BUGGY]  for(final  Method  method  :  method.getReturnSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getReturnSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getReturnSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
132	[BUG]  [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>();	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
133	[BUG]  [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  method;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  method;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeThan  <  BaseSecantSolver>  safeThan  =  method;	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
134	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  false);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  false);	  ILLINOIS    =    method.getAllowSecantSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
135	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialState()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialState()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialState()  +  1;	  ILLINOIS    =    method.getInitialState();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
136	[BUG]  [BUGGY]  ILLINOIS  =  method.getLeastSuperclass();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getLeastSuperclass();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getLeastSuperclass();	  ILLINOIS    =    method.getInitialState();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
137	[BUG]  [BUGGY]  ILLINOIS  =  method.getNativeMethod(UNKNOWN_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getNativeMethod(UNKNOWN_SYNTHETIC);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getNativeMethod(UNKNOWN_SYNTHETIC);	  ILLINOIS    =    method.getLeastSuperclassSolver();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
138	[BUG]  [BUGGY]  ILLINOIS  =  method.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getFirstChild();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getFirstChild();	  ILLINOIS    =    method.getLeastSuperclassSolver();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
139	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
140	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
141	[BUG]  [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
142	[BUG]  [BUGGY]  this.allowed  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  Double.POSITIVE_INFINITY;	  this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
143	[BUG]  [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  This.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
144	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  method);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  method);	  ILLINOIS    =    method.getAllowSecantSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
145	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSecantSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
146	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSecantSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
147	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  false);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  false);	  ILLINOIS    =    method.getAllowSecantSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
148	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isFunction())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isFunction())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isFunction())  {  throw  new  RuntimeException( " ");  }	  final    for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
149	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  default ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  default ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method,  default ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method,   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
150	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
151	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isAllowedMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isAllowedMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isAllowedMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
152	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  method);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy,  method);	  ILLINOIS    =    method.getAllowedSolver(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
153	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSingletonMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
154	[BUG]  [BUGGY]  safeThan  =  method.safeSecantSolver();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeThan  =  method.safeSecantSolver();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  =  method.safeSecantSolver();	  safeThan    <    BaseSecantSolver>    safeThan    =    method.safeThan();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
155	[BUG]  [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
156	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
157	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  false);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(this.allowed,  false);	  ILLINOIS    =    method.getAllowedSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
158	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "returning ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "returning ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "returning ",  DEFAULT_ABSOLUTE_ACCURACY);	  Method    <?>    method    =    method.getMethod(   "initializing   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
159	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
160	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  final    for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
161	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  ILLINOIS    =    method.getAllowedSolutions()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
162	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  AllowedSolution.ALLOW_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  AllowedSolution.ALLOW_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  AllowedSolution.ALLOW_ACCURACY;	  ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    ALLowedSolution.ALLOW_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
163	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getRequiredSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getRequiredSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getRequiredSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  final    for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
164	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getRawParameters())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  for(final  Method  method  :  method.getRawParameters())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getRawParameters())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  final    for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
165	[BUG]  [BUGGY]  For(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  For(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getMethods())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  For(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
166	[BUG]  [BUGGY]  For(final  Method  method  :  method.getRawParameters())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  For(final  Method  method  :  method.getRawParameters())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getRawParameters())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	  For(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
167	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method,  null,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  unclosed  string  literal  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method,  null,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethod( "method,  null,  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethod(   "method,   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
168	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
169	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  false);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  false);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
170	[BUG]  [BUGGY]  Method  <?>  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [CE]  not  a  statement  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }	  Method    {    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  not  a  statement	55	None	replace
171	[BUG]  [BUGGY]  Method  <?>  method  =  method.getRawParameterType(0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getRawParameterType(0);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getRawParameterType(0);	  Method    <?>    method    =    method.getName();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
172	[BUG]  [BUGGY]  Method  <?>  method  =  method.getParameterType(0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getParameterType(0);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getParameterType(0);	  Method    <?>    method    =    method.getName();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
173	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver(this.allowed);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver(this.allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSecantSolver(this.allowed);	  ILLINOIS    =    method.getAllowedSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
174	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isAllowedMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isAllowedMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isAllowedMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
175	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "Missing    method.       ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
176	[BUG]  [BUGGY]  Iterator  <  Method>  it  =  method.getAllowedSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Iterator  <  Method>  it  =  method.getAllowedSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Iterator  <  Method>  it  =  method.getAllowedSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getAllowedSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  enableSecant(method,  true);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  enableSecant(method,  true);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	enableSecant(method,  true);	  allowSecant(method,    false);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
178	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
179	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.exception);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.exception);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.exception);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
180	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
181	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  this.exception);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  this.exception);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  this.exception);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
182	[BUG]  [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
183	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowSecantSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
184	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  this.exception);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  this.exception);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(this.allowed,  this.exception);	  ILLINOIS    =    method.getAllowSecantSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
185	[BUG]  [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getMethods())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
186	[BUG]  [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isSimpleMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
187	[BUG]  [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getMethods())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSingletonMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
188	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  not  a  statement  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  While(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
189	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowedSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
190	[BUG]  [BUGGY]  Method  <  Object>  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [CE]  not  a  statement  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <  Object>  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <  Object>  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }	  Method    {    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null..   ");    }    	non-compiled	[CE]  not  a  statement	56	None	replace
191	[BUG]  [BUGGY]  Method  <?>  method  =  method.getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);	  Method    <?>    method    =    method.getName();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
192	[BUG]  [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  -  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  -  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  -  1;	  this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
193	[BUG]  [BUGGY]  this.allowed  =  method.getAllowSecantSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getAllowSecantSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  method.getAllowSecantSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;	  this.allowed    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
194	[BUG]  [BUGGY]  this.allowed  =  method.getAllowSecantSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getAllowSecantSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  method.getAllowSecantSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;	  this.allowed    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
195	[BUG]  [BUGGY]  while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	while(method!=  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }	  While(method!=    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
196	[BUG]  [BUGGY]  Parchet.checkState(method!=  null,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(method!=  null,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method!=  null,  DEFAULT_ABSOLUTE_ACCURACY);	  Parchet.checkState(method!=    null);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
197	[BUG]  [BUGGY]  Parchet.checkState(method!=  null  &&  method.isAllowed());  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Parchet.checkState(method!=  null  &&  method.isAllowed());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method!=  null  &&  method.isAllowed());	  Parchet.checkState(method!=    null);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
198	[BUG]  [BUGGY]  safeGet(method.getName(),  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeGet(method.getName(),  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeGet(method.getName(),  DEFAULT_ABSOLUTE_ACCURACY)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  safeGet(method.getName())    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	31	None	replace
199	[BUG]  [BUGGY]  safeAccess(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  safeAccess(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeAccess(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  safeGet(method.getName())    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	31	None	replace
200	[BUG]  [BUGGY]  allowSecant(method,  false,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  false,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  false,  DEFAULT_ABSOLUTE_ACCURACY);	  allowSecant(method,    false);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
201	[BUG]  [BUGGY]  allowSecant(method,  false,  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  allowSecant(method,  false,  REGULA_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  false,  REGULA_FALSI);	  allowSecant(method,    false);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
202	[BUG]  [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>(safe);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>(safe);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>(safe);	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
203	[BUG]  [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>(method.getName());  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>(method.getName());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeThan  <  BaseSecantSolver>  safeThan  =  new  SafeThan  <  BaseSecantSolver>(method.getName());	  safeThan    <    BaseSecantSolver>    safeThan    =    method;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
204	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getAllowedSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
205	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValues ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValues ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "returnValues ",  DEFAULT_ABSOLUTE_ACCURACY);	  Method    <?>    method    =    method.getMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
206	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValue ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValue ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "returnValue ",  DEFAULT_ABSOLUTE_ACCURACY);	  Method    <?>    method    =    method.getMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
207	[BUG]  [BUGGY]  ILLINOIS  =  method.getMean();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getMean();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getMean();	  ILLINOIS    =    method.getLeastSuperclassSolver();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
208	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValueBasedOnSide ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Method  <?>  method  =  method.getMethod( "returnValueBasedOnSide ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "returnValueBasedOnSide ",  DEFAULT_ABSOLUTE_ACCURACY);	  Method    <?>    method    =    method.getMethod(   "initializing   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
209	[BUG]  [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isLocal())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
210	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isLocal())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isLocal())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(method.isLocal())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isLocal())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
211	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialStandardValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialStandardValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialStandardValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialStandardValue();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
212	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowSecantSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
213	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  this.exception);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  this.exception);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(this.allowed,  this.exception);	  ILLINOIS    =    method.getAllowSecantSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
214	[BUG]  [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  -  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  -  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY  -  1;	  This.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
215	[BUG]  [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan(safeAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  SafeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan(safeAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	SafeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan(safeAccuracy);	  safeThan    <    BaseSecantSolver>    safeThan    =    method.safeThan();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
216	[BUG]  [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  for(final  Method  method  :  method.getMethods())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getMethods())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }	  for(final    Method    method    :    method.getAllowedSolutions())    {    if(!method.isSingletonMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
