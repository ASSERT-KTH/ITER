bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	8	None	replace
2	[BUG]  [BUGGY]  While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	8	None	replace
3	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  RuntimeException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  RuntimeException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions();	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	      ILLINOIS    =    method.getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "Missing    method.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSecantSolver();	      ILLINOIS    =    method.getAllowSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethod( "method, ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	      ILLINOIS    =    method.getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(0).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	      ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy);	      ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialState();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialState();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialState();	      ILLINOIS    =    method.getInitialValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialSecond();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialSecond();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialSecond();	      ILLINOIS    =    method.getInitialValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  	6	None	replace
21	[BUG]  [BUGGY]  While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method);  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  	6	None	replace
22	[BUG]  [BUGGY]  While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	While(method  ==  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  	7	None	replace
23	[BUG]  [BUGGY]  While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	While(method!=  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  	7	None	replace
24	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	final  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isUnknownMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isLocal())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;	      ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;	      ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions();  this.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;	      ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  safeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  safeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	8	None	replace
32	[BUG]  [BUGGY]  safeGet(method.getName())>  ILLINOIS)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  not  a  statement  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  safeGet(method.getName())>  ILLINOIS)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeGet(method.getName())>  ILLINOIS)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  safeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  [CE]  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  safeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeGet(method.getName())  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	8	None	replace
34	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  ALLowedSolution.ALLOW_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  ALLowedSolution.ALLOW_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions();  this.allowed  =  ALLowedSolution.ALLOW_ACCURACY;	      ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod();  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Method  <?>  method  =  method.getMethod();  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod();	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan();  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  <  BaseSecantSolver>  safeThan  =  method.safeThan();	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  method;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  safeThan  <  BaseSecantSolver>  safeThan  =  method;  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  <  BaseSecantSolver>  safeThan  =  method;	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  safeThan  <  BaseSecantSolver>  false  =  false;  [CE]  not  a  statement  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  safeThan  <  BaseSecantSolver>  false  =  false;  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	safeThan  <  BaseSecantSolver>  false  =  false;	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
39	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialValue()  +  1;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialValue()  +  1;	      ILLINOIS    =    method.getInitialValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialSerialValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialSerialValue();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialSerialValue();	      ILLINOIS    =    method.getInitialValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(this.allowed);	      ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  ILLINOIS  =  method.getLeastSuperclassSolver();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getLeastSuperclassSolver();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getLeastSuperclassSolver();	      ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  For(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  For(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(this.allowed);	      ILLINOIS    =    method.getAllowSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  Parchet.checkState(method!=  null);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Parchet.checkState(method!=  null);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method!=  null);	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  Parchet.checkState(method  ==  null);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Parchet.checkState(method  ==  null);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Parchet.checkState(method  ==  null);	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  allowSecant(method);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  allowSecant(method);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method);	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  allowSecant(method,  false);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  allowSecant(method,  false);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  false);	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);	      ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  ILLINOIS  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed);	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed);	      ILLINOIS    =    method.getAllowSolver();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getDeclaredMethods().get(1).getDeclaredMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getDeclaredMethods().get(0).getDeclaredMethod(   "method   ",    DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy);	      ILLINOIS    =    method.getAllowSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null. ");  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
56	[BUG]  [BUGGY]  Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null.. ");  }  [CE]  not  a  statement  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null.. ");  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  {  null)  {  throw  new  IllegalArgumentException( "Method  cannot  be  null.. ");  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    cannot    be    null.   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
57	[BUG]  [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	For(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isInitializingMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isInitializingMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  PEGASUS;  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  PEGASUS;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  PEGASUS;	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  allowSecant(method,  false)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  allowSecant(method,  false)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	allowSecant(method,  false)  {  throw  new  IllegalArgumentException( "Method  not  initialized  for  method: "  +  method.getName());  }	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  	8	None	replace
60	[BUG]  [BUGGY]  Method  <?>  method  =  method.getName();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Method  <?>  method  =  method.getName();  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getName();	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY);	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method.getName());    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);	      ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  this.allowed  =  method.getAllowSecantSolutions();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  this.allowed  =  method.getAllowSecantSolutions();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	this.allowed  =  method.getAllowSecantSolutions();	      ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	This.allowed  =  DEFAULT_ABSOLUTE_ACCURACY;	      ILLINOIS    =    method.getAllowSecantSolutions();    this.allowed    =    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  RuntimeException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  RuntimeException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( "Missing  method.   ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "Missing    method.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(this.allowed);	      ILLINOIS    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSimpleMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	for(final  Method  method  :  method.getAllowedSolutions())  {  if(!method.isSingletonMethod())  {  throw  new  IllegalArgumentException( " ");  }	      for(final    Method    ILLINOIS    :    method.getAllowedSolutions())    {    if(!method.isUnknownMethod())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
71	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialStandardValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialStandardValue();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	ILLINOIS  =  method.getInitialStandardValue();	      ILLINOIS    =    method.getInitialValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
72	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "method ",  DEFAULT_ABSOLUTE_ACCURACY).getMethod();	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  Method  <?>  method  =  method.getMethod( "initializing ",  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Method  <?>  method  =  method.getMethod( "initializing ",  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	72	72	1	replace	Method  <?>  method  =  method.getMethod( "initializing ",  DEFAULT_ABSOLUTE_ACCURACY);	  if(method    ==    null)    {    throw    new    IllegalArgumentException(   "Method    not    initialized    for    method:   "    +    method);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
