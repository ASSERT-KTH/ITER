bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(f0  <  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0)  {  return  x0;  }	      if(f0    ==    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  if(f0  ==  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  ==  0.0)  {  return  f0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  0.0)  {  return  f0;  }	      if(f0    ==    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  if(f0  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0)  {	  if(f0    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  if(f0  >  0.0  ||  f1  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >  0.0  ||  f1  >  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  ||  f1  >  0.0)  {	  if(f0    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  if(f0  >=  0.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >=  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0)  {	  if(f0    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  if(f0!=  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0!=  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0!=  0.0)  {  return  x0;  }	      if(f0    ==    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  if(f0  ==  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  ==  0.0)  {  return  x1;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  0.0)  {  return  x1;  }	      if(f0    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
8	[BUG]  [BUGGY]  f0  =  getMax();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f0  =  getMax();  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getMax();	      f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  f0  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f0  =  getFunctionValue();  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFunctionValue();	      f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  f0  =  getField();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f0  =  getField();  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getField();	      f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  f1  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f1  =  computeFunctionValue(x1);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFunctionValue(x1);	      f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  f1  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f1  =  computeObjectiveValue(x0);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeObjectiveValue(x0);	      f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  f1  =  computeFloatValue(x1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f1  =  computeFloatValue(x1);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFloatValue(x1);	      f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  return  x0;  }	      if(f0    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  if(f0  >=  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >=  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0)  {  return  x0;  }	      if(f0    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x2);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  double  f1  =  computeFunctionValue(x2);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x2);	      double    f1    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  Double  f1  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  Double  f1  =  computeFunctionValue(x1);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	Double  f1  =  computeFunctionValue(x1);	      double    f1    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(f0  >  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  f1)  {  if(f1  <  0.0)  {  return  x0;  }	      if(f0    >    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  if(f0  >=  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >=  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }	      if(f0    >    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x1)+  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  double  f1  =  computeFunctionValue(x1)+  1;  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x1)+  1;	      double    f1    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  <  =  0.0)  {	  if(f0    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  =  0.0  ||  f1  >  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  >  0.0)  {	  if(f0    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  double  f1  =  computeIntegerValue(x0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  double  f1  =  computeIntegerValue(x0);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeIntegerValue(x0);	      double    f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  double  f1  =  computeIntegerValue(x1);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  double  f1  =  computeIntegerValue(x1);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeIntegerValue(x1);	      double    f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  >  0.0)  {	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  if(f0  >=  0.0  ||  f1  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >=  0.0  ||  f1  ==  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0  ||  f1  ==  0.0)  {	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  if(f0  >  0.0  ||  f1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >  0.0  ||  f1  <  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  ||  f1  <  0.0)  {	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  if(f0  >  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0)  {  return  x0;  }	      if(f0    >=    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  if(f0  >=  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >=  0.0)  {  return  f0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0)  {  return  f0;  }	      if(f0    ==    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  if(f0  <  =  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  =  0.0)  {  return  f0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0)  {  return  f0;  }	      if(f0    ==    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
31	[BUG]  [BUGGY]  f1  =  computeObjectiveValue(x2);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f1  =  computeObjectiveValue(x2);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeObjectiveValue(x2);	      f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  if(f0  >  f1)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >  f1)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  f1)  {  return  x0;  }	      if(f0    ==    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  f0  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  f0  =  getFunctionValueAccuracy();  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFunctionValueAccuracy();	      f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  if(f0  <  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }	      if(f0    >    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  double  f1  =  computeObjectiveValue(x3);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  double  f1  =  computeObjectiveValue(x3);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeObjectiveValue(x3);	      double    f1    =    computeObjectiveValue(x2);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  =  0.0  ||  f1  >  1.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  >  1.0)  {	  if(f0    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  f0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  f0;  }	      if(f0    ==    0.0)    {    return    x0;    }    if(f1    ==    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  <  =  0.0  ||  f1  ==  0.0)  {  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  ==  0.0)  {	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  x0;  }  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  x0;  }	      if(f0    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x3);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  double  f1  =  computeFunctionValue(x3);  [BUGGY]    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x3);	      double    f1    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  if(f0  >  f1)  {  if(f1  >  f2)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);        [BUGGY]  if(f0  >  f1)  {  if(f1  >  f2)  {  return  f0;  }  [BUGGY]    return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  f1)  {  if(f1  >  f2)  {  return  f0;  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
