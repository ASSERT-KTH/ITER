bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0)  {  return  x0;  }  [CE]  ';'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  >  0.0)  {  return  x0;  }	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
2	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  ==  0.0)  {  return  x0;  }  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  ||  f1  ==  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  ==  0.0)  {  return  x0;  }	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
3	[BUG]  [BUGGY]  if(f0  >=  0.0  ||  f1  ==  0.0)  {  return  x0;  }  [CE]  ';'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  0.0  ||  f1  ==  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0  ||  f1  ==  0.0)  {  return  x0;  }	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
4	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  >  1.0)  {  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  >  1.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  >  1.0)  {	  if(f0    <    =    0.0    ||    f1    >    1.0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
5	[BUG]  [BUGGY]  if(f0  >  0.0  ||  f1  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0  ||  f1  >  1.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  ||  f1  >  1.0)  {	  if(f0    <    =    0.0    ||    f1    >    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
6	[BUG]  [BUGGY]  if(f0  >=  0.0  ||  f1  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  0.0  ||  f1  >  1.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0  ||  f1  >  1.0)  {	  if(f0    <    =    0.0    ||    f1    >    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
7	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  <  =  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  <  =  0.0)  {	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
8	[BUG]  [BUGGY]  if(f0  >=  0.0  ||  f1  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  0.0  ||  f1  <  =  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0  ||  f1  <  =  0.0)  {	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  if(f0  >  0.0  ||  f1  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0  ||  f1  <  =  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  ||  f1  <  =  0.0)  {	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  if(f0  <  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  f1)  {  if(f1  <  0.0)  {  return  x0;  }	  if(f0    <    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
11	[BUG]  [BUGGY]  if(f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f1  <  =  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f1  <  =  0.0)  {  return  x0;  }	  if(f0    <    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
12	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  <  =  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  <  =  0.0)  {  return  x0;  }	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  >  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  ||  f1  >  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  >  0.0)  {  return  x0;  }	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  if(f1  <  =  0.0  ||  f0  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f1  <  =  0.0  ||  f0  <  =  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f1  <  =  0.0  ||  f0  <  =  0.0)  {  return  x0;  }	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  if(f0  <  =  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  f1)  {  if(f1  <  0.0)  {  return  x0;  }	  if(f0    >    f1)    {    if(f1    <    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  if(f0  >  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0)  {  return  f0;  }	  if(f0    >=    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  if(f0  ==  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  ==  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  f1)  {  if(f1  <  =  0.0)  {  return  x0;  }	  if(f0    >=    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
18	[BUG]  [BUGGY]  f1  =  computeFunctionValue(x2);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeFunctionValue(x2);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFunctionValue(x2);	  f1    =    computeObjectiveValue(x2);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
19	[BUG]  [BUGGY]  f0  =  getMax()  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getMax()  +  1;  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getMax()  +  1;	  f0    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  if(f0  <  f1)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  f1)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  f1)  {  return  x0;  }	  if(f0    >    f1)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
21	[BUG]  [BUGGY]  if(f0  <  =  f1)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  f1)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  f1)  {  return  x0;  }	  if(f0    >    f1)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
22	[BUG]  [BUGGY]  if(f0  ==  f1)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  ==  f1)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  f1)  {  return  x0;  }	  if(f0    >    f1)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
23	[BUG]  [BUGGY]  double  f1  =  computeIntegerValue(x2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeIntegerValue(x2);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeIntegerValue(x2);	  double    f1    =    computeIntegerValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
24	[BUG]  [BUGGY]  double  f1  =  computeFloatValue(x1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeFloatValue(x1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFloatValue(x1);	  double    f1    =    computeIntegerValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
25	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  ==  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  ==  0.0)  {	  if(f0    <    =    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
26	[BUG]  [BUGGY]  f1  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeFunctionValue(x0);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFunctionValue(x0);	  f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  f1  =  computeIntegerValue(x0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeIntegerValue(x0);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeIntegerValue(x0);	  f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  >  0.0)  {  return  f0;  }	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
29	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  ==  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  ||  f1  ==  0.0)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  ==  0.0)  {  return  f0;  }	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
30	[BUG]  [BUGGY]  f1  =  computeFunctionValue(f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeFunctionValue(f0);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFunctionValue(f0);	  f1    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  f1  =  computeFunctionValue(f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeFunctionValue(f1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFunctionValue(f1);	  f1    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  if(f0  <  =  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0)  {  return  x1;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0)  {  return  x1;  }	  if(f0    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  double  f1  =  computeNumberValue(x1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeNumberValue(x1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeNumberValue(x1);	  double    f1    =    computeIntegerValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
34	[BUG]  [BUGGY]  f0  =  getField().doubleValue();  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getField().doubleValue();  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getField().doubleValue();	  f0    =    getField();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  f0  =  getField(f1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getField(f1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getField(f1);	  f0    =    getField();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  <  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  <  0.0)  {	  if(f0    >    0.0    ||    f1    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
37	[BUG]  [BUGGY]  if(f0  >  f1)  {  if(f1  <  f2)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  f1)  {  if(f1  <  f2)  {  return  f0;  }  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  f1)  {  if(f1  <  f2)  {  return  f0;  }	  if(f0    >    f1)    {    if(f1    >    f2)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
38	[BUG]  [BUGGY]  if(f0  <  f1)  {  if(f1  >  f2)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  f1)  {  if(f1  >  f2)  {  return  f0;  }  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  f1)  {  if(f1  >  f2)  {  return  f0;  }	  if(f0    >    f1)    {    if(f1    >    f2)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
39	[BUG]  [BUGGY]  if(f0  <  =  f1)  {  if(f1  >  f2)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  f1)  {  if(f1  >  f2)  {  return  f0;  }  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  f1)  {  if(f1  >  f2)  {  return  f0;  }	  if(f0    >    f1)    {    if(f1    >    f2)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
40	[BUG]  [BUGGY]  if(f0  >=  f1)  {  if(f1  >  f2)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  f1)  {  if(f1  >  f2)  {  return  f0;  }  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  f1)  {  if(f1  >  f2)  {  return  f0;  }	  if(f0    >    f1)    {    if(f1    >    f2)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
41	[BUG]  [BUGGY]  f0  =  getFunctionValue(f1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getFunctionValue(f1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFunctionValue(f1);	  f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  f0  =  getFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getFunctionValue(x1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFunctionValue(x1);	  f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  f0  =  getFunctionValue(1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getFunctionValue(1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFunctionValue(1);	  f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  if(f0  >=  0.0  ||  f1  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  0.0  ||  f1  >  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0  ||  f1  >  0.0)  {	  if(f0    <    =    0.0    ||    f1    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
45	[BUG]  [BUGGY]  f1  =  computeFloatValue(x0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeFloatValue(x0);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFloatValue(x0);	  f1    =    computeFloatValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  f1  =  computeFloatValue(x2);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeFloatValue(x2);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFloatValue(x2);	  f1    =    computeFloatValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x1)/  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeFunctionValue(x1)/  1;  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x1)/  1;	  double    f1    =    computeFunctionValue(x1)+    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
48	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x1)+  2;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeFunctionValue(x1)+  2;  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x1)+  2;	  double    f1    =    computeFunctionValue(x1)+    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
49	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x1)-  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeFunctionValue(x1)-  1;  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x1)-  1;	  double    f1    =    computeFunctionValue(x1)+    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
50	[BUG]  [BUGGY]  f0  =  getFunctionValueAccuracy(f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getFunctionValueAccuracy(f1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFunctionValueAccuracy(f1);	  f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
51	[BUG]  [BUGGY]  f0  =  getFunctionValueAccuracy(x1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getFunctionValueAccuracy(x1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFunctionValueAccuracy(x1);	  f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
52	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  <  =  0.0)  {  return  f0;  }	  if(f0    <    =    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0  ||  f0  >  max)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  >  0.0  ||  f0  >  max)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  >  0.0  ||  f0  >  max)  {	  if(f0    <    0.0    ||    f1    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  Double  f1  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  Double  f1  =  computeFunctionValue(x0);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	Double  f1  =  computeFunctionValue(x0);	  Double    f1    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
55	[BUG]  [BUGGY]  if(f0!=  0.0)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0!=  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0!=  0.0)  {	  if(f0    >=    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  if(f0  >  f1)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  f1)  {  return  x1;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  f1)  {  return  x1;  }	  if(f0    >    f1)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
57	[BUG]  [BUGGY]  if(f0  <  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0)  {  return  f0;  }	  if(f0    <    =    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
58	[BUG]  [BUGGY]  if(f0  <  =  0.0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0)  {  return  f1;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0)  {  return  f1;  }	  if(f0    <    =    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
59	[BUG]  [BUGGY]  if(f0  >  0.0  &&  f1  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0  &&  f1  >  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  &&  f1  >  0.0)  {	  if(f0    >    0.0    ||    f1    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  double  f1  =  computeObjectiveValue(x1)+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeObjectiveValue(x1)+  1;  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeObjectiveValue(x1)+  1;	  double    f1    =    computeFunctionValue(x1)+    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  if(f0  <  f1)  {  if(f1  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  f1)  {  if(f1  ==  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  f1)  {  if(f1  ==  0.0)  {  return  x0;  }	  if(f0    <    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
62	[BUG]  [BUGGY]  if(f0  >  0.0  ||  f1  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0  ||  f1  ==  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  ||  f1  ==  0.0)  {	  if(f0    >=    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
63	[BUG]  [BUGGY]  if(f1  >  f0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f1  >  f0)  {  return  f0;  }  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f1  >  f0)  {  return  f0;  }	  if(f0    >    f1)    {    if(f1    >    f2)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
64	[BUG]  [BUGGY]  Double  f1  =  computeFunctionValue(x2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  Double  f1  =  computeFunctionValue(x2);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	Double  f1  =  computeFunctionValue(x2);	  Double    f1    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  >  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  ||  f1  >  0.0)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  >  0.0)  {  return  f0;  }	  if(f0    ==    0.0    ||    f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
66	[BUG]  [BUGGY]  if(f0  >  0.0  &&  f1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0  &&  f1  <  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  &&  f1  <  0.0)  {	  if(f0    >    0.0    ||    f1    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
67	[BUG]  [BUGGY]  if(f0  >=  0.0  ||  f1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  0.0  ||  f1  <  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  0.0  ||  f1  <  0.0)  {	  if(f0    >    0.0    ||    f1    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
68	[BUG]  [BUGGY]  f0  =  getFullValue();  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getFullValue();  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFullValue();	  f0    =    getField();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  f0  =  getFieldType();  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  getFieldType();  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  getFieldType();	  f0    =    getField();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
70	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(f1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  computeObjectiveValue(f1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  computeObjectiveValue(f1);	  f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  f0  =  computeFunctionValue(f1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  computeFunctionValue(f1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  computeFunctionValue(f1);	  f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  if(f0  >=  f1)  {  if(f1  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  f1)  {  if(f1  ==  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  f1)  {  if(f1  ==  0.0)  {  return  x0;  }	  if(f0    >=    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  if(f0  >  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0)  {  return  x1;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0)  {  return  x1;  }	  if(f0    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  if(f0  <  0.0  ||  f1  <  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  0.0  ||  f1  <  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  0.0  ||  f1  <  0.0)  {  return  x0;  }	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
75	[BUG]  [BUGGY]  if(f0  <  =  0.0  &&  f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  &&  f1  <  =  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  &&  f1  <  =  0.0)  {  return  x0;  }	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
76	[BUG]  [BUGGY]  if(f1  ==  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f1  ==  0.0)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f1  ==  0.0)  {  return  f0;  }	  if(f0    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  if(f0  ==  0.0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  ==  0.0)  {  return  f1;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  0.0)  {  return  f1;  }	  if(f0    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  if(f0  >  0.0  &&  f1  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  0.0  &&  f1  >  1.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  0.0  &&  f1  >  1.0)  {	  if(f0    <    =    0.0    ||    f1    >    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
79	[BUG]  [BUGGY]  if(f0  >=  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >=  f1)  {  if(f1  <  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >=  f1)  {  if(f1  <  0.0)  {  return  x0;  }	  if(f0    >    f1)    {    if(f1    <    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
80	[BUG]  [BUGGY]  f1  =  computeFloatValue(x3);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeFloatValue(x3);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeFloatValue(x3);	  f1    =    computeFloatValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  if(f0  <  1.0  ||  f1  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  1.0  ||  f1  >  1.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  1.0  ||  f1  >  1.0)  {	  if(f0    <    =    0.0    ||    f1    >    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
82	[BUG]  [BUGGY]  if(f1  >  f0)  {  if(f1  <  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f1  >  f0)  {  if(f1  <  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f1  >  f0)  {  if(f1  <  0.0)  {  return  x0;  }	  if(f0    >    f1)    {    if(f1    <    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
83	[BUG]  [BUGGY]  f1  =  computeObjectiveValue(x3);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f1  =  computeObjectiveValue(x3);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f1  =  computeObjectiveValue(x3);	  f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
84	[BUG]  [BUGGY]  if(f0  >  f1)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  f1)  {  return  f0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  f1)  {  return  f0;  }	  if(f0    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
85	[BUG]  [BUGGY]  if(f0  ==  0.0  ||  f0  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  ==  0.0  ||  f0  ==  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  ==  0.0  ||  f0  ==  0.0)  {  return  x0;  }	  if(f0    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
86	[BUG]  [BUGGY]  if(f0  >  f1)  {  if(f1  <  =  f2)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  >  f1)  {  if(f1  <  =  f2)  {  return  f0;  }  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  >  f1)  {  if(f1  <  =  f2)  {  return  f0;  }	  if(f0    >    f1)    {    if(f1    >    f2)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
87	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x1)+  3;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeFunctionValue(x1)+  3;  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x1)+  3;	  double    f1    =    computeFunctionValue(x1)+    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
88	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  f0  =  computeFunctionValue(x1);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	f0  =  computeFunctionValue(x1);	  f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  ||  f1  <  0.0)  {  [BUGGY]      return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  <  0.0)  {	  if(f0    >    0.0    ||    f1    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
90	[BUG]  [BUGGY]  if(f0  <  =  0.0  ||  f1  >=  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f0  <  =  0.0  ||  f1  >=  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f0  <  =  0.0  ||  f1  >=  0.0)  {  return  x0;  }	  if(f0    <    =    0.0    ||    f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
91	[BUG]  [BUGGY]  if(f1  >=  f0)  {  if(f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  if(f1  >=  f0)  {  if(f1  <  =  0.0)  {  return  x0;  }  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	if(f1  >=  f0)  {  if(f1  <  =  0.0)  {  return  x0;  }	  if(f0    >=    f1)    {    if(f1    <    =    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x4);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);          [BUGGY]  double  f1  =  computeFunctionValue(x4);  [BUGGY]      if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	139	139	1	replace	double  f1  =  computeFunctionValue(x4);	  double    f1    =    computeFunctionValue(x3);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
