bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f1),  inverted);	  fx    =    Math.max(FastMath.abs(f1),    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  fx  =  Math.abs(FastMath.abs(fx1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.abs(FastMath.abs(fx1));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.abs(FastMath.abs(fx1));	  fx    =    Math.abs(fx0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fx);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f0),  fx);	  fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  fx  =  Math.abs(x1  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.abs(x1  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.abs(x1  +  1);	  fx    =    Math.abs(fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  fx  =  Math.abs(x0  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.abs(x0  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.abs(x0  +  1);	  fx    =    Math.abs(fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  max);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx.length,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx.length,  max);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
7	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx.length,  allowedSolution  +  1);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
8	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted));	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  inverted);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  inverted);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x),  inverted,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x),  inverted,  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x),  inverted,  absoluteAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted),  relativeAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0,  absoluteAccuracy),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0,  absoluteAccuracy),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x0,  absoluteAccuracy),  relativeAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  f1  =  fx.getEndValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getEndValue();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getEndValue();	  f1    =    fx.getStartValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  f1  =  fx.getStartValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getStartValue()  +  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getStartValue()  +  1;	  f1    =    fx.getStartValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
15	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  relativeAccuracy);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  relativeAccuracy);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
16	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  inverted);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  inverted);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  inverted);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
17	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
18	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy));	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x0),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
19	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);	  fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
20	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  inverted);	  fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  fTol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  fTol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f1),  fTol);	  fx    =    Math.min(FastMath.abs(f1),    fTol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
22	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted,  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted,  absoluteAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
23	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted),  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted),  absoluteAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
24	[BUG]  [BUGGY]  f1  =  x.next  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  x.next  +  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  x.next  +  1;	  f1    =    x.next;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
25	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  inverted  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f1),  inverted  +  1);	  fx    =    Math.min(FastMath.abs(f1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
26	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx.length,  allowedSolution.length  -  1);	  fx    =    Math.max(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
27	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx,  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx,  allowedSolution.length);	  fx    =    Math.max(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
28	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx.length,  allowedSolution.length  +  1);	  fx    =    Math.max(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
29	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  max  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  max  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f1),  max  +  1);	  fx    =    Math.max(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
30	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f0),  max);	  fx    =    Math.max(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
31	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
32	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  -  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  -  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  allowedSolution.length  -  2);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
33	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(max,  allowedSolution.length  -  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
34	[BUG]  [BUGGY]  f1  =  f.next;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f.next;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f.next;	  f1    =    f;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max  +  2);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max  +  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f1),  max  +  2);	  fx    =    Math.min(FastMath.abs(f1),    max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
36	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max  +  1,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max  +  1,  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f1),  max  +  1,  allowedSolution);	  fx    =    Math.min(FastMath.abs(f1),    max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
37	[BUG]  [BUGGY]  f1  =  x.next  +  2;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  x.next  +  2;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  x.next  +  2;	  f1    =    fx.next    +    2;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
38	[BUG]  [BUGGY]  f1  =  fx.getNext()  +  2;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getNext()  +  2;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getNext()  +  2;	  f1    =    fx.next    +    2;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
39	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx),  max);	  fx    =    Math.min(FastMath.abs(f2),    max);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
40	[BUG]  [BUGGY]  f1  =  Math.min(f1.length(),  allowedSolution.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length(),  allowedSolution.length()  -  1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length(),  allowedSolution.length()  -  1);	  f1    =    Math.min(f1.length(),    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
41	[BUG]  [BUGGY]  f1  =  Math.min(f1.length(),  allowedSolution.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length(),  allowedSolution.length()  +  1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length(),  allowedSolution.length()  +  1);	  f1    =    Math.min(f1.length(),    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  f1  =  Math.min(FastMath.abs(f1),  allowedSolution.length());  [CE]  illegal  start  of  expression  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(FastMath.abs(f1),  allowedSolution.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(FastMath.abs(f1),  allowedSolution.length());	  f1    =    Math.min(f1.length(),    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
43	[BUG]  [BUGGY]  f1  =  Math.min(f1.length,  allowedSolution.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length,  allowedSolution.length()  -  1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length,  allowedSolution.length()  -  1);	  f1    =    Math.min(f1.length,    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
44	[BUG]  [BUGGY]  f1  =  Math.min(f1,  allowedSolution.length());  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1,  allowedSolution.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1,  allowedSolution.length());	  f1    =    Math.min(f1.length,    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
45	[BUG]  [BUGGY]  f1  =  Math.min(f1.length,  allowedSolution.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length,  allowedSolution.length()  +  1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length,  allowedSolution.length()  +  1);	  f1    =    Math.min(f1.length,    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
46	[BUG]  [BUGGY]  f1  =  f0  +  2;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f0  +  2;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f0  +  2;	  f1    =    f0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
47	[BUG]  [BUGGY]  f1  =  f0  +  3;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f0  +  3;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f0  +  3;	  f1    =    f0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
48	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  leftedSolution.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  leftedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  leftedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
49	[BUG]  [BUGGY]  fx  =  Math.min(fx,  leftedSolution.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx,  leftedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx,  leftedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
50	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  leftedSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx.length,  leftedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx.length,  leftedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
51	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(leftedSolution.length,  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(leftedSolution.length,  allowedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
52	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx,  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx,  allowedSolution);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
53	[BUG]  [BUGGY]  fx  =  Math.min(fx,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx,  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx,  allowedSolution);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
54	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  leftSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  leftSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx),  leftSolution);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
55	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  leftSolution);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  leftSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx)/  leftSolution);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
56	[BUG]  [BUGGY]  x1  =  Math.abs(f0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  x1  =  Math.abs(f0);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	x1  =  Math.abs(f0);	  x1    =    Math.abs(f1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  x1  =  Math.abs(f2);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  x1  =  Math.abs(f2);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	x1  =  Math.abs(f2);	  x1    =    Math.abs(f1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
58	[BUG]  [BUGGY]  x1  =  Math.abs(f1)-  1;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  x1  =  Math.abs(f1)-  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	x1  =  Math.abs(f1)-  1;	  x1    =    Math.abs(f1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy  +  1);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
60	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  2);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
61	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy  +  1);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
62	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  max,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  max,  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0),  max,  allowedSolution);	  fx    =    Math.min(FastMath.abs(f0),    max);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
63	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  fTol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  fTol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx),  fTol);	  fx    =    Math.min(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
64	[BUG]  [BUGGY]  f1  =  Math.min(f1,  f1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1,  f1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1,  f1);	  f1    =    Math.min(f1.length(),    f1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  f1  =  Math.min(f1,  f1.length());  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1,  f1.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1,  f1.length());	  f1    =    Math.min(f1.length(),    f1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  f1  =  Math.min(f1.length(),  max);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length(),  max);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length(),  max);	  f1    =    Math.min(f1.length(),    f1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
67	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  allowed);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f0),  allowed);	  fx    =    Math.max(FastMath.abs(f1),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  f1  =  fx.getStartToken()  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getStartToken()  +  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getStartToken()  +  1;	  f1    =    fx.nextToken()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
69	[BUG]  [BUGGY]  f1  =  fx.getToken()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getToken()  +  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getToken()  +  1;	  f1    =    fx.nextToken()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0),  allowedSolution);	  fx    =    Math.min(FastMath.abs(f0),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
71	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f0),  allowedSolution);	  fx    =    Math.min(FastMath.abs(f0),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
72	[BUG]  [BUGGY]  f1  =  fx.getInitialValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getInitialValue();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getInitialValue();	  f1    =    fx.getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
73	[BUG]  [BUGGY]  f1  =  fx.getParent();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getParent();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getParent();	  f1    =    fx.getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
74	[BUG]  [BUGGY]  f1  =  fx.next();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.next();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.next();	  f1    =    fx.getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
75	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  ftol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f0),  ftol);	  fx    =    Math.min(FastMath.abs(f0),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
76	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx),  allowedSolution);	  fx    =    Math.min(FastMath.abs(fx),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
77	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx),  allowedSolution);	  fx    =    Math.min(FastMath.abs(fx),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
78	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  ftol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  ftol);	  fx    =    Math.min(FastMath.abs(fx),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
79	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2,  ftol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2,  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  2,  ftol);	  fx    =    Math.min(FastMath.abs(fx),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
80	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  +  2);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  +  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  allowedSolution.length  +  2);	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
81	[BUG]  [BUGGY]  f1  =  fx.nextToken  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.nextToken  +  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.nextToken  +  1;	  f1    =    fx.nextToken;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
82	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
83	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx),  allowedSolution.length);	  fx    =    Math.min(allowedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
84	[BUG]  [BUGGY]  fx  =  Math.min(fx,  max);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx,  max);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
85	[BUG]  [BUGGY]  fx  =  Math.min(fx,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx,  allowedSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx,  allowedSolution.length  -  1);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
86	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  allowed);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  allowed);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  allowed);	  fx    =    Math.min(FastMath.abs(fx),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
87	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowed);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx),  allowed);	  fx    =    Math.min(FastMath.abs(fx),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
88	[BUG]  [BUGGY]  f1  =  Math.max(f0,  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(f0,  f1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(f0,  f1);	  f1    =    Math.max(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
89	[BUG]  [BUGGY]  f1  =  Math.max(f1,  f2);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(f1,  f2);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(f1,  f2);	  f1    =    Math.max(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
90	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  break;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  break;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  break;	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    break;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
91	[BUG]  [BUGGY]  f1  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  break;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  break;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  break;	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    break;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
92	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  break;  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  break;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  break;	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    break;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
93	[BUG]  [BUGGY]  fx  =  Math.min(max,  fx.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(max,  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(max,  fx.length);	  fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
94	[BUG]  [BUGGY]  fx  =  Math.max(max,  fx.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(max,  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(max,  fx.length);	  fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
95	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  max  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  max  +  1);	  fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
96	[BUG]  [BUGGY]  f1  =  Math.abs(f2);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.abs(f2);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.abs(f2);	  f1    =    Math.abs(f1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
97	[BUG]  [BUGGY]  f1  =  Math.abs(f1)-  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.abs(f1)-  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.abs(f1)-  1;	  f1    =    Math.abs(f1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
98	[BUG]  [BUGGY]  f1  =  Math.abs(f0);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.abs(f0);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.abs(f0);	  f1    =    Math.abs(f1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
99	[BUG]  [BUGGY]  f1  =  Math.max(f1.length,  f1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(f1.length,  f1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(f1.length,  f1);	  f1    =    Math.min(f1.length,    f1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
100	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution,  max);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  allowedSolution,  max);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
101	[BUG]  [BUGGY]  f1  =  x0  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  x0  +  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  x0  +  1;	  f1    =    x    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
102	[BUG]  [BUGGY]  f1  =  x  +  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  x  +  2;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  x  +  2;	  f1    =    x    +    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
103	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x0),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
104	[BUG]  [BUGGY]  f1  =  f.nextToken()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f.nextToken()  +  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f.nextToken()  +  1;	  f1    =    f.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  f1  =  f.next();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f.next();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f.next();	  f1    =    f.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  f1  =  f1.nextToken();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f1.nextToken();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f1.nextToken();	  f1    =    f.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
107	[BUG]  [BUGGY]  f1  =  x  +  1L;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  x  +  1L;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  x  +  1L;	  f1    =    fx    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
108	[BUG]  [BUGGY]  f1  =  fy  +  1L;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fy  +  1L;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fy  +  1L;	  f1    =    fx    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
109	[BUG]  [BUGGY]  f1  =  fx  *  2;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx  *  2;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx  *  2;	  f1    =    fx    +    2;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
110	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  inverted);	  fx    =    Math.min(FastMath.abs(fx),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
111	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx),  inverted);	  fx    =    Math.min(FastMath.abs(fx),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
112	[BUG]  [BUGGY]  fx  =  Math.max(len,  fx.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(len,  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(len,  fx.length);	  fx    =    Math.max(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
113	[BUG]  [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(allowedSolution.length,  fx.length  -  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
114	[BUG]  [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(leftSolution.length,  fx.length  -  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
115	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  leftSolution.length  -  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
116	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  atol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  atol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  atol);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
117	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);	  fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
118	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
119	[BUG]  [BUGGY]  f1  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
120	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  ftol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f2),  ftol);	  fx    =    Math.max(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
121	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  ftol  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  ftol  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f1),  ftol  +  1);	  fx    =    Math.min(FastMath.abs(f1),    max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
122	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fTol  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fTol  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f1),  fTol  +  1);	  fx    =    Math.min(FastMath.abs(f1),    max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
123	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  max  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  max  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0),  max  +  1);	  fx    =    Math.min(FastMath.abs(f1),    max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
124	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  max  +  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  max  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f2),  max  +  1);	  fx    =    Math.min(FastMath.abs(f1),    max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
125	[BUG]  [BUGGY]  f1  =  Math.min(f1.length,  f1.length());  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length,  f1.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length,  f1.length());	  f1    =    Math.min(f1.length,    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
126	[BUG]  [BUGGY]  f1  =  Math.min(f1.length,  f2.length());  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length,  f2.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length,  f2.length());	  f1    =    Math.min(f1.length,    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
127	[BUG]  [BUGGY]  f1  =  Math.min(allowedSolution.length(),  f1.length());  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(allowedSolution.length(),  f1.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(allowedSolution.length(),  f1.length());	  f1    =    Math.min(f1.length,    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
128	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  inverted);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
129	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  fTol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  fTol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0),  fTol);	  fx    =    Math.min(FastMath.abs(f1),    fTol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
130	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  fTol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  fTol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f2),  fTol);	  fx    =    Math.min(FastMath.abs(f1),    fTol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
131	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  atol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  atol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  atol);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x0),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  fx  =  Math.min(FAST_SIDE,  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FAST_SIDE,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FAST_SIDE,  max);	  fx    =    Math.min(fx.length,    max);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
133	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  fx);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0)/  fx);	  fx    =    Math.min(FastMath.abs(f0),    fx);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
134	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x)/  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x)/  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x)/  absoluteAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
135	[BUG]  [BUGGY]  f1  =  Math.min(f1.length(),  f1.length());  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length(),  f1.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length(),  f1.length());	  f1    =    Math.min(f1.length(),    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
136	[BUG]  [BUGGY]  f1  =  Math.min(f1.length(),  f2.length());  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length(),  f2.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length(),  f2.length());	  f1    =    Math.min(f1.length(),    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
137	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x)/  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x)/  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x)/  inverted);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
138	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)-  1,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)-  1,  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)-  1,  inverted);	  fx    =    Math.min(FastMath.abs(fx),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
139	[BUG]  [BUGGY]  f1  =  fx.getToken();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getToken();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getToken();	  f1    =    fx.nextToken()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
140	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(leftedSolution.length,  fx.length  -  1);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
141	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(leftedSolution.length,  leftSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(leftedSolution.length,  leftSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
142	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(leftedSolution.length,  fx.length  +  1);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
143	[BUG]  [BUGGY]  fx  =  Math.abs(fx0  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.abs(fx0  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.abs(fx0  -  1);	  fx    =    Math.abs(fx0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
144	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  atol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  atol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  atol);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
145	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  inverted);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
146	[BUG]  [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(leftSolution.length,  fx.length  +  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
147	[BUG]  [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(allowedSolution.length,  fx.length  +  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
148	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  leftSolution.length  +  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
149	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(max,  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(max,  allowedSolution.length);	  fx    =    Math.min(allowedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
150	[BUG]  [BUGGY]  fx  =  Math.abs(fx  *  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.abs(fx  *  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.abs(fx  *  1);	  fx    =    Math.abs(fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
151	[BUG]  [BUGGY]  f1  =  fx.getStart();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getStart();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getStart();	  f1    =    fx.getStartValue();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
152	[BUG]  [BUGGY]  f1  =  Math.min(f1.length,  f2);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length,  f2);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length,  f2);	  f1    =    Math.min(f1.length,    f1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
153	[BUG]  [BUGGY]  f1  =  f.nextDouble();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f.nextDouble();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f.nextDouble();	  f1    =    f.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
154	[BUG]  [BUGGY]  f1  =  Math.min(f1.length(),  f2);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(f1.length(),  f2);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(f1.length(),  f2);	  f1    =    Math.min(f1.length(),    f1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
155	[BUG]  [BUGGY]  f1  =  Math.max(f1.length(),  f1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(f1.length(),  f1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(f1.length(),  f1);	  f1    =    Math.min(f1.length(),    f1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
156	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(max,  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(max,  allowedSolution);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
157	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  ftol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0)/  ftol);	  fx    =    Math.min(FastMath.abs(f0),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
158	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f2),  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f2),  ftol);	  fx    =    Math.min(FastMath.abs(f0),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
159	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  f1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  f1);	  fx    =    Math.min(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
160	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)+  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)+  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)+  1);	  fx    =    Math.min(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
161	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)-  1,  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)-  1,  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)-  1,  ftol);	  fx    =    Math.min(FastMath.abs(fx),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
162	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  ftol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx),  ftol);	  fx    =    Math.min(FastMath.abs(fx),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
163	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f2),  allowedSolution);	  fx    =    Math.max(FastMath.abs(f1),    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
164	[BUG]  [BUGGY]  f1  =  fx.getRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getRelativeAccuracy();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getRelativeAccuracy();	  f1    =    fx.getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
165	[BUG]  [BUGGY]  fx  =  Math.min(fx,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx,  leftSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx,  leftSolution.length);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
166	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  max);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f2),  max);	  fx    =    Math.max(FastMath.abs(f1),    max);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
167	[BUG]  [BUGGY]  fx  =  Math.abs(fx1  -  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.abs(fx1  -  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.abs(fx1  -  ftol);	  fx    =    Math.abs(fx1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
168	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0)/  max);	  fx    =    Math.min(FastMath.abs(f0),    max);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
169	[BUG]  [BUGGY]  fx  =  Math.max(leftSolution,  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(leftSolution,  fx);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(leftSolution,  fx);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
170	[BUG]  [BUGGY]  fx  =  Math.max(fx,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx,  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx,  inverted);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
171	[BUG]  [BUGGY]  fx  =  Math.max(fx,  leftSolution,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx,  leftSolution,  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx,  leftSolution,  allowedSolution);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
172	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  fx);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f2),  fx);	  fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
173	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  inverted);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0),  inverted);	  fx    =    Math.min(FastMath.abs(f1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
174	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy  +  1);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
175	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  3);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  3);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  3);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
176	[BUG]  [BUGGY]  f1  =  Math.max(FastMath.abs(f1),  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(FastMath.abs(f1),  f1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(FastMath.abs(f1),  f1);	  f1    =    Math.max(f1,    f1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
177	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
178	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  relativeAccuracy);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x0),  relativeAccuracy);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
179	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx));	  fx    =    Math.min(FastMath.abs(fx),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
180	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx1),  allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx1),  allowed);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx1),  allowed);	  fx    =    Math.min(FastMath.abs(fx),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
181	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2,  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  2,  inverted);	  fx    =    Math.min(FastMath.abs(fx),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
182	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(fx)/  ftol);	  fx    =    Math.min(FastMath.abs(fx),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
183	[BUG]  [BUGGY]  fx  =  Math.max(lensedSolution.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(lensedSolution.length,  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(lensedSolution.length,  fx.length);	  fx    =    Math.max(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
184	[BUG]  [BUGGY]  f1  =  f.getCurrentToken();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f.getCurrentToken();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f.getCurrentToken();	  f1    =    f.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
185	[BUG]  [BUGGY]  f1  =  f.getFunctionValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  f.getFunctionValue();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  f.getFunctionValue();	  f1    =    f.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
186	[BUG]  [BUGGY]  fx  =  Math.abs(fx1  -  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.abs(fx1  -  fx);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.abs(fx1  -  fx);	  fx    =    Math.abs(fx1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
187	[BUG]  [BUGGY]  fx  =  Math.max(fx,  ftol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx,  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx,  ftol);	  fx    =    Math.max(fx,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
188	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  allowed);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(f0)/  allowed);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(f0)/  allowed);	  fx    =    Math.min(FastMath.abs(f0),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
189	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy),  relativeAccuracy);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x0),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
190	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowed);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx,  allowed);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx,  allowed);	  fx    =    Math.max(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
191	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length)+  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length)+  1;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  allowedSolution.length)+  1;	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
192	[BUG]  [BUGGY]  f1  =  ftol  *  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  ftol  *  1;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  ftol  *  1;	  f1    =    ftol    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
193	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  2);	  fx    =    Math.min(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
194	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2,  f1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx)/  2,  f1);	  fx    =    Math.min(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
195	[BUG]  [BUGGY]  f1  =  fx  *  1L;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx  *  1L;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx  *  1L;	  f1    =    fx    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
196	[BUG]  [BUGGY]  f1  =  Math.min(leftSolution.length(),  f1.length());  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.min(leftSolution.length(),  f1.length());  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.min(leftSolution.length(),  f1.length());	  f1    =    Math.min(f1.length(),    allowedSolution.length());    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
197	[BUG]  [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy,  inverted);	  fx    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
198	[BUG]  [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  1);	  f1    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
199	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1),  inverted  +  1);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
200	[BUG]  [BUGGY]  f1  =  ftol  +  2;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  ftol  +  2;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  ftol  +  2;	  f1    =    fx    +    2;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
201	[BUG]  [BUGGY]  f1  =  fx.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  fx.getFirstChild();  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  fx.getFirstChild();	  f1    =    fx.getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
202	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  fx));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  fx));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  fx));	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
203	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted,  relativeAccuracy));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted,  relativeAccuracy));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x1,  inverted,  relativeAccuracy));	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
204	[BUG]  [BUGGY]  f1  =  Math.abs(f1)/;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  f1  =  Math.abs(f1)/;  [BUGGY]          if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	f1  =  Math.abs(f1)/;	  f1    =    Math.abs(f1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
205	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx1),  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx1),  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx1),  max);	  fx    =    Math.min(FastMath.abs(f0),    max);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
206	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  ftol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  ftol);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
207	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx.length,  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx.length,  fx.length);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
208	[BUG]  [BUGGY]  fx  =  Math.max(lensedSolution,  fx.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(lensedSolution,  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(lensedSolution,  fx.length);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
209	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(fx.length,  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(fx.length,  ftol);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
210	[BUG]  [BUGGY]  fx  =  Math.min(fx,  ftol.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx,  ftol.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx,  ftol.length);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
211	[BUG]  [BUGGY]  fx  =  Math.min(fx,  flen);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(fx,  flen);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(fx,  flen);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
212	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx1),  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx1),  fx);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx1),  fx);	  fx    =    Math.min(FastMath.abs(f0),    fx);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
213	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(FastMath.abs(fx));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(FastMath.abs(fx));	  fx    =    Math.min(FastMath.abs(f0),    fx);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
214	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  ftol  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  ftol  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(FastMath.abs(f1),  ftol  +  1);	  fx    =    Math.min(FastMath.abs(f1),    max    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
215	[BUG]  [BUGGY]  fx  =  Math.min(leniedSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.min(leniedSolution.length,  fx.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.min(leniedSolution.length,  fx.length  -  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
216	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        break;  default:  throw  new  MathInternalError();  }  }  x1  =  x;      [BUGGY]  fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  if  (inverted)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	197	197	1	replace	fx  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	  fx    =    Math.max(relativeAccuracy    *    Math.abs(x0),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
