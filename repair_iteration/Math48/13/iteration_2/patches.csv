bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  f0  =  Math.min(fx,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(fx,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(fx,  inverted);	  f0    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
2	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  fx  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  fx  +  1);	  f0    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
3	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  max);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  max);	  f0    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
4	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  inverted  +  1)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  inverted  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  inverted  +  1)  {	  switch(method.getRelatedSolution(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  0.5)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  0.5)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  0.5)  {	  switch(method.getRelatedSolution(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  switch(method.doSolve()  ||!inverted)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve()  ||!inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve()  ||!inverted)  {	  switch(method.doSolve()    &&!inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
7	[BUG]  [BUGGY]  switch(method.doSolve()  ||  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve()  ||  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve()  ||  inverted)  {	  switch(method.doSolve()    &&!inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
8	[BUG]  [BUGGY]  f0  *=  0.5  /  (f1  *  fx);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  *=  0.5  /  (f1  *  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  *=  0.5  /  (f1  *  fx);  break;	  f0    =    f0;    break;    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
9	[BUG]  [BUGGY]  f0  =  fx;  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  fx;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  fx;  break;	  f0    =    f0;    break;    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
10	[BUG]  [BUGGY]  fx  =  Math.min(fx0,  inverted);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(fx0,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(fx0,  inverted);	  fx    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
11	[BUG]  [BUGGY]  fx  =  Math.min(inverted,  max);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(inverted,  max);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(inverted,  max);	  fx    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
12	[BUG]  [BUGGY]  f0  =  Math.max(fx,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(fx,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(fx,  inverted);	  f0    =    Math.max(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
13	[BUG]  [BUGGY]  f0  =  Math.max(inverted,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(inverted,  fx  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(inverted,  fx  +  1);	  f0    =    Math.max(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
14	[BUG]  [BUGGY]  f0  =  Math.max(inverted,  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(inverted,  max);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(inverted,  max);	  f0    =    Math.max(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
15	[BUG]  [BUGGY]  f0  =  Math.min(f0,  fx  +  1,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  fx  +  1,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  fx  +  1,  inverted);	  f0    =    Math.min(f0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
16	[BUG]  [BUGGY]  f0  =  Math.min(f0,  fx  *  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  fx  *  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  fx  *  1);	  f0    =    Math.min(f0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
17	[BUG]  [BUGGY]  switch(fx.getDeclaredMethods(),  method)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(fx.getDeclaredMethods(),  method)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(fx.getDeclaredMethods(),  method)  {	  switch(method.getDeclaredMethods(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
18	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  f0)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  f0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  f0)  {	  switch(method.getDeclaredMethods(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
19	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  fx  +  1)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  fx  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  fx  +  1)  {	  switch(method.getDeclaredMethods(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
20	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx)/  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx)/  1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx)/  1;	  f0    =    f1    /(f1    +    fx)+    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
21	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx)/  2;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx)/  2;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx)/  2;	  f0    =    f1    /(f1    +    fx)+    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
22	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx)+  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx)+  1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx)+  1;	  f0    =    f1    /(f1    +    fx)+    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
23	[BUG]  [BUGGY]  switch(fx.getNativeType(UNKNOWN_TYPE))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(fx.getNativeType(UNKNOWN_TYPE))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(fx.getNativeType(UNKNOWN_TYPE))  {	  switch(method.getNativeType(UNKNOWN_TYPE,    fx))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
24	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE,  DEFAULT_ABSOLUTE_ACCURACY))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE,  DEFAULT_ABSOLUTE_ACCURACY))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE,  DEFAULT_ABSOLUTE_ACCURACY))  {	  switch(method.getNativeType(UNKNOWN_TYPE,    fx))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
25	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE,  fx  +  1))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE,  fx  +  1))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE,  fx  +  1))  {	  switch(method.getNativeType(UNKNOWN_TYPE,    fx))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
26	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE,  fx),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE,  fx),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE,  fx),  inverted)  {	  switch(method.getNativeType(UNKNOWN_TYPE,    fx))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
27	[BUG]  [BUGGY]  fx  =  Math.min(inverted,  f0  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(inverted,  f0  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(inverted,  f0  +  1);	  fx    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
28	[BUG]  [BUGGY]  fx  =  Math.min(f0,  inverted  +  1  *  fx);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(f0,  inverted  +  1  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(f0,  inverted  +  1  *  fx);	  fx    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
29	[BUG]  [BUGGY]  fx  =  Math.min(f0,  inverted  +  1,  fx);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(f0,  inverted  +  1,  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(f0,  inverted  +  1,  fx);	  fx    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
30	[BUG]  [BUGGY]  switch(method.doSolve(),  inverted  +  1)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve(),  inverted  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve(),  inverted  +  1)  {	  switch(method.doSolve(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
31	[BUG]  [BUGGY]  switch(method.doSolve(),  inverted,  fx)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve(),  inverted,  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve(),  inverted,  fx)  {	  switch(method.doSolve(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
32	[BUG]  [BUGGY]  switch(method.getSolve(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolve(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolve(),  inverted)  {	  switch(method.doSolve(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
33	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx  +  fx);  break;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx  +  fx);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx  +  fx);  break;	  f0    =    f1    /(f1    *    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx  +  1);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx  +  1);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx  +  1);  break;	  f0    =    f1    /(f1    *    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  f0  =  f1  *(f1  *  fx);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  *  fx);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  *  fx);  break;	  f0    =    f1    /(f1    *    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  fx  =  Math.max(fx,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(fx,  inverted  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(fx,  inverted  +  1);	  fx    =    Math.max(fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
37	[BUG]  [BUGGY]  fx  =  Math.max(fx,  inverted,  0.5);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(fx,  inverted,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(fx,  inverted,  0.5);	  fx    =    Math.max(fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
38	[BUG]  [BUGGY]  case  ILLINOIS:  f0  *=  0.5;  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  case  ILLINOIS:  f0  *=  0.5;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	case  ILLINOIS:  f0  *=  0.5;  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5;    break;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
39	[BUG]  [BUGGY]  if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5;  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5;    break;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
40	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  true)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  true)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  true)  {	  switch(method.getDeclaredMethods(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
41	[BUG]  [BUGGY]  switch(method.getDeclaredSolutions(),  false)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredSolutions(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredSolutions(),  false)  {	  switch(method.getDeclaredMethods(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
42	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx,  inverted);	  f0    =    f1    /(f1    +    fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx,  inverted  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx,  inverted  +  1);	  f0    =    f1    /(f1    +    fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  f0  =  inverted  /(f1  +  fx,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  inverted  /(f1  +  fx,  f1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  inverted  /(f1  +  fx,  f1);	  f0    =    f1    /(f1    +    fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  switch(method.toLowerCase(),  0.5)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toLowerCase(),  0.5)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toLowerCase(),  0.5)  {	  switch(method.toLowerCase(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
46	[BUG]  [BUGGY]  switch(method.toUpperCase(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toUpperCase(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toUpperCase(),  inverted)  {	  switch(method.toLowerCase(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
47	[BUG]  [BUGGY]  switch(method.toLowerCase(),  inverted  +  1)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toLowerCase(),  inverted  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toLowerCase(),  inverted  +  1)  {	  switch(method.toLowerCase(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
48	[BUG]  [BUGGY]  if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
49	[BUG]  [BUGGY]  if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
50	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  f0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  f0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE),  f0)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
51	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  inverted,  fx)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  inverted,  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE),  inverted,  fx)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
52	[BUG]  [BUGGY]  f0  =  f1;  f1  =  f1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1;  f1  =  f1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1;  f1  =  f1;	  if(f0    *    fx    <    0)    {    f0    =    f1;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
53	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f0    *    fx    <    0)    {    f0    =    f1;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
54	[BUG]  [BUGGY]  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1;  f1  =  f1;  inverted  =!inverted;	  if(f0    *    fx    <    0)    {    f0    =    f1;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
55	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f0;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f0;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f0;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f0    *    fx    <    0)    {    f0    =    f1;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
56	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx)+  1;  break;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx)+  1;  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx)+  1;  break;	  f0    =    f1    /(f1    +    fx)+    1;    break;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
57	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx)/  1;  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx)/  1;  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx)/  1;  break;	  f0    =    f1    /(f1    +    fx)+    1;    break;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
58	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx)/  2;  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx)/  2;  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx)/  2;  break;	  f0    =    f1    /(f1    +    fx)+    1;    break;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
59	[BUG]  [BUGGY]  switch(method.getSolution(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolution(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolution(),  inverted)  {	  switch(method.getSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
60	[BUG]  [BUGGY]  switch(method.getLocalFunction())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLocalFunction())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLocalFunction())  {	  switch(method.getSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
61	[BUG]  [BUGGY]  f0  =  Math.max(f0,  inverted  +  1);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(f0,  inverted  +  1);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(f0,  inverted  +  1);  break;	  f0    =    Math.max(f0,    inverted);    break;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
62	[BUG]  [BUGGY]  f0  =  Math.max(inverted,  f0);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(inverted,  f0);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(inverted,  f0);  break;	  f0    =    Math.max(f0,    inverted);    break;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
63	[BUG]  [BUGGY]  switch(method.doSecantSolve(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSecantSolve(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSecantSolve(),  inverted)  {	  switch(method.doSecantSolve())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
64	[BUG]  [BUGGY]  switch(method.doSecantSolver())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSecantSolver())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSecantSolver())  {	  switch(method.doSecantSolve())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
65	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)&&  method.getNativeType(UNKNOWN_TYPE))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)&&  method.getNativeType(UNKNOWN_TYPE))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE)&&  method.getNativeType(UNKNOWN_TYPE))  {	  switch(method.getNativeType(UNKNOWN_TYPE)||    method.getNativeType(UNKNOWN_TYPE))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)||  method.getInstanceType(UNKNOWN_TYPE))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)||  method.getInstanceType(UNKNOWN_TYPE))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE)||  method.getInstanceType(UNKNOWN_TYPE))  {	  switch(method.getNativeType(UNKNOWN_TYPE)||    method.getNativeType(UNKNOWN_TYPE))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  switch(method.getNativeType(NO_TYPE)||  method.getNativeType(NO_TYPE))  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(NO_TYPE)||  method.getNativeType(NO_TYPE))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(NO_TYPE)||  method.getNativeType(NO_TYPE))  {	  switch(method.getNativeType(UNKNOWN_TYPE)||    method.getNativeType(UNKNOWN_TYPE))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
68	[BUG]  [BUGGY]  switch(method.toUpperCase(),  false)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toUpperCase(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toUpperCase(),  false)  {	  switch(method.toLowerCase(),    true)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
69	[BUG]  [BUGGY]  switch(method.toUpperCase(),  true)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toUpperCase(),  true)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toUpperCase(),  true)  {	  switch(method.toLowerCase(),    true)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
70	[BUG]  [BUGGY]  switch(f1.toLowerCase(),  true)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(f1.toLowerCase(),  true)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(f1.toLowerCase(),  true)  {	  switch(method.toLowerCase(),    true)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
71	[BUG]  [BUGGY]  f0  =  Math.max(0.5,  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(0.5,  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(0.5,  fx);	  f0    =    Math.max(f0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
72	[BUG]  [BUGGY]  f0  =  Math.max(f0,  inverted  +  1  *  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(f0,  inverted  +  1  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(f0,  inverted  +  1  *  fx);	  f0    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
73	[BUG]  [BUGGY]  f0  =  Math.max(f0,  inverted  +  1  -  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(f0,  inverted  +  1  -  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(f0,  inverted  +  1  -  fx);	  f0    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
74	[BUG]  [BUGGY]  f0  =  Math.max(f0,  inverted  +  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(f0,  inverted  +  2);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(f0,  inverted  +  2);	  f0    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
75	[BUG]  [BUGGY]  switch(method.doSolve(),  true)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve(),  true)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve(),  true)  {	  switch(method.doSolve(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  switch(method.doSecantSolve(),  false)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSecantSolve(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSecantSolve(),  false)  {	  switch(method.doSolve(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
77	[BUG]  [BUGGY]  switch(method.getSolve(),  false)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolve(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolve(),  false)  {	  switch(method.doSolve(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
78	[BUG]  [BUGGY]  switch(method.doSecond(),  false)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSecond(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSecond(),  false)  {	  switch(method.doSolve(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
79	[BUG]  [BUGGY]  fx  =  Math.max(inverted,  f0,  0.5);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(inverted,  f0,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(inverted,  f0,  0.5);	  fx    =    Math.max(f0,    inverted,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
80	[BUG]  [BUGGY]  fx  =  Math.max(0.5,  inverted,  0.5);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.5,  inverted,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.5,  inverted,  0.5);	  fx    =    Math.max(f0,    inverted,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
81	[BUG]  [BUGGY]  fx  =  Math.max(f0,  inverted,  2.0);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(f0,  inverted,  2.0);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(f0,  inverted,  2.0);	  fx    =    Math.max(f0,    inverted,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
82	[BUG]  [BUGGY]  f0  =  Math.min(F0,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(F0,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(F0,  inverted);	  f0    =    Math.min(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
83	[BUG]  [BUGGY]  if(f1  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    x0    =    x0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
84	[BUG]  [BUGGY]  if(f1  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    x0    =    x0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  if(f1  >  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    x0    =    x0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
86	[BUG]  [BUGGY]  fx  =  Math.max(inverted,  f0  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(inverted,  f0  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(inverted,  f0  +  1);	  fx    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
87	[BUG]  [BUGGY]  fx  =  Math.max(f0,  inverted  +  1  *  fx);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(f0,  inverted  +  1  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(f0,  inverted  +  1  *  fx);	  fx    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
88	[BUG]  [BUGGY]  fx  =  Math.max(f0,  inverted  *  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(f0,  inverted  *  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(f0,  inverted  *  1);	  fx    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
89	[BUG]  [BUGGY]  f0  =  f1  *(f1  /  fx);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  /  fx);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  /  fx);  break;	  f0    =    f1    *(f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
90	[BUG]  [BUGGY]  f0  =  f0  *(f1  +  fx);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f0  *(f1  +  fx);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f0  *(f1  +  fx);  break;	  f0    =    f1    *(f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
91	[BUG]  [BUGGY]  f0  =  f1  *(f1  /  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  /  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  /  fx);	  f0    =    f1    *(f1    +    fx);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
92	[BUG]  [BUGGY]  f0  =  f1  *(f0  +  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f0  +  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f0  +  fx);	  f0    =    f1    *(f1    +    fx);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
93	[BUG]  [BUGGY]  f0  =  f0  *(f1  +  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f0  *(f1  +  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f0  *(f1  +  fx);	  f0    =    f1    *(f1    +    fx);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
94	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx  +  1);	  f0    =    f1    /(f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
95	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx  +  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx  +  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx  +  fx);	  f0    =    f1    /(f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
96	[BUG]  [BUGGY]  f0  =  f1  *(f1  *  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  *  fx);	  f0    =    f1    /(f1    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
97	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  true)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  true)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  true)  {	  switch(method.getRelativeAccuracy(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
98	[BUG]  [BUGGY]  switch(f1.getRelativeAccuracy(),  false)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(f1.getRelativeAccuracy(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(f1.getRelativeAccuracy(),  false)  {	  switch(method.getRelativeAccuracy(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
99	[BUG]  [BUGGY]  Switch(method.getRelativeAccuracy(),  true)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  Switch(method.getRelativeAccuracy(),  true)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	Switch(method.getRelativeAccuracy(),  true)  {	  switch(method.getRelativeAccuracy(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
100	[BUG]  [BUGGY]  f0  =  Math.min(f0,  inverted  *  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  inverted  *  fx  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  inverted  *  fx  +  1);	  f0    =    Math.min(f0,    inverted    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
101	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  f0  *  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  f0  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  f0  *  fx);	  f0    =    Math.min(f0,    inverted    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
102	[BUG]  [BUGGY]  f0  =  Math.min(f0,  inverted  /  fx);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  inverted  /  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  inverted  /  fx);	  f0    =    Math.min(f0,    inverted    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
103	[BUG]  [BUGGY]  f0  =  f0;  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f0;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f0;  break;	  f0    =    x0;    break;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
104	[BUG]  [BUGGY]  f0  =  f1;  break;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1;  break;	  f0    =    x0;    break;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
105	[BUG]  [BUGGY]  x0  =  x1  *  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x1  *  fx;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x1  *  fx;	  x0    =    x1    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
106	[BUG]  [BUGGY]  x0  =  x1  +  fx  *  inverted;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x1  +  fx  *  inverted;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x1  +  fx  *  inverted;	  x0    =    x1    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
107	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  DEFAULT_ABSOLUTE_ACCURACY),  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  DEFAULT_ABSOLUTE_ACCURACY),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  DEFAULT_ABSOLUTE_ACCURACY),  inverted)  {	  switch(method.getDeclaredMethods(),    DEFAULT_ABSOLUTE_ACCURACY)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
108	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  DEFAULT_ABSOLUTE_ACCURACY,  inverted)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  DEFAULT_ABSOLUTE_ACCURACY,  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  DEFAULT_ABSOLUTE_ACCURACY,  inverted)  {	  switch(method.getDeclaredMethods(),    DEFAULT_ABSOLUTE_ACCURACY)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
109	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f0    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
110	[BUG]  [BUGGY]  switch(fx.getNativeType(UNKNOWN_TYPE),  method)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(fx.getNativeType(UNKNOWN_TYPE),  method)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(fx.getNativeType(UNKNOWN_TYPE),  method)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
111	[BUG]  [BUGGY]  if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
112	[BUG]  [BUGGY]  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
113	[BUG]  [BUGGY]  if(f1  <  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  <  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  <  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
114	[BUG]  [BUGGY]  if(f1  >  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f0    >    0.5)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
115	[BUG]  [BUGGY]  if(f1  >  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f0    >    0.5)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
116	[BUG]  [BUGGY]  fx  =  Math.max(inverted,  0.5);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(inverted,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(inverted,  0.5);	  fx    =    Math.max(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
117	[BUG]  [BUGGY]  fx  =  Math.max(inverted,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(inverted,  max);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(inverted,  max);	  fx    =    Math.max(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
118	[BUG]  [BUGGY]  if(f0  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
119	[BUG]  [BUGGY]  fx  =  Math.max(0.5,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.5,  inverted  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.5,  inverted  +  1);	  fx    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
120	[BUG]  [BUGGY]  fx  =  Math.max(0.5,  inverted  +  2);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.5,  inverted  +  2);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.5,  inverted  +  2);	  fx    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
121	[BUG]  [BUGGY]  fx  =  Math.max(0.5,  inverted  +  5);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.5,  inverted  +  5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.5,  inverted  +  5);	  fx    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
122	[BUG]  [BUGGY]  f0  =  Math.min(f0,  inverted  +  1);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  inverted  +  1);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  inverted  +  1);  break;	  f0    =    Math.min(f0,    inverted);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
123	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  f0);  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  f0);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  f0);  break;	  f0    =    Math.min(f0,    inverted);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
124	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  fx);  break;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  fx);  break;	  f0    =    Math.min(f0,    inverted);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
125	[BUG]  [BUGGY]  f0  =  fx;  f1  =  f1;  inverted  =!inverted;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  fx;  f1  =  f1;  inverted  =!inverted;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  fx;  f1  =  f1;  inverted  =!inverted;	  f0    =    f0;    f1    =    f1;    inverted    =!inverted;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
126	[BUG]  [BUGGY]  f0  =  f1;  f1  =  f0;  inverted  =!inverted;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1;  f1  =  f0;  inverted  =!inverted;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1;  f1  =  f0;  inverted  =!inverted;	  f0    =    f0;    f1    =    f1;    inverted    =!inverted;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
127	[BUG]  [BUGGY]  f0  =  x0;  f1  =  f1;  inverted  =!inverted;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  x0;  f1  =  f1;  inverted  =!inverted;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  x0;  f1  =  f1;  inverted  =!inverted;	  f0    =    f0;    f1    =    f1;    inverted    =!inverted;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
128	[BUG]  [BUGGY]  switch(method.getAllowedSolutions(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getAllowedSolutions(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getAllowedSolutions(),  inverted)  {	  switch(method.getAllowedSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
129	[BUG]  [BUGGY]  switch(method.getAllowedSolutions(),  false)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getAllowedSolutions(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getAllowedSolutions(),  false)  {	  switch(method.getAllowedSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
130	[BUG]  [BUGGY]  switch(method.getAllowedSolutions(),  fx)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getAllowedSolutions(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getAllowedSolutions(),  fx)  {	  switch(method.getAllowedSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
131	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx  *  1);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx  *  1);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx  *  1);  break;	  f0    =    f1    /(f1    +    fx    +    1);    break;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
132	[BUG]  [BUGGY]  f0  =  Math.max(inverted,  0.5);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(inverted,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(inverted,  0.5);	  f0    =    Math.max(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
133	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  0.5)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  0.5)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  0.5)  {	  switch(method.getDeclaredMethods(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
134	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  inverted,  fx)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  inverted,  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  inverted,  fx)  {	  switch(method.getDeclaredMethods(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
135	[BUG]  [BUGGY]  switch(method.allowSolution(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.allowSolution(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.allowSolution(),  inverted)  {	  switch(method.allowSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
136	[BUG]  [BUGGY]  switch(method.allowSecondSolution())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.allowSecondSolution())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.allowSecondSolution())  {	  switch(method.allowSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
137	[BUG]  [BUGGY]  switch(method.allowAllowedSolution())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.allowAllowedSolution())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.allowAllowedSolution())  {	  switch(method.allowSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
138	[BUG]  [BUGGY]  switch(fx.getRelativeAccuracy(),  method)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(fx.getRelativeAccuracy(),  method)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(fx.getRelativeAccuracy(),  method)  {	  switch(method.getRelativeAccuracy(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
139	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  fx  +  1)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  fx  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  fx  +  1)  {	  switch(method.getRelativeAccuracy(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
140	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  fx),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  fx),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  fx),  inverted)  {	  switch(method.getRelativeAccuracy(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
141	[BUG]  [BUGGY]  f0  =  Math.min(f0,  inverted  +  1,  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  inverted  +  1,  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  inverted  +  1,  fx);	  f0    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
142	[BUG]  [BUGGY]  f0  =  Math.min(f0,  inverted  +  1  *  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  inverted  +  1  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  inverted  +  1  *  fx);	  f0    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
143	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  f0  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  f0  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  f0  +  1);	  f0    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
144	[BUG]  [BUGGY]  f0  =  f1;  f1  =  f0;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1;  f1  =  f0;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1;  f1  =  f0;	  f0    =    f0;    f1    =    f1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
145	[BUG]  [BUGGY]  f0  =  fx;  f1  =  f1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  fx;  f1  =  f1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  fx;  f1  =  f1;	  f0    =    f0;    f1    =    f1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
146	[BUG]  [BUGGY]  f0  =  f0;  f1  =  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f0;  f1  =  fx;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f0;  f1  =  fx;	  f0    =    f0;    f1    =    f1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
147	[BUG]  [BUGGY]  fx  =  Math.max(inverted,  FALSE_FALSI);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(inverted,  FALSE_FALSI);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(inverted,  FALSE_FALSI);	  fx    =    Math.max(FALSE_FALSI,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
148	[BUG]  [BUGGY]  fx  =  Math.max(FALSE_FALSI,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(FALSE_FALSI,  inverted  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(FALSE_FALSI,  inverted  +  1);	  fx    =    Math.max(FALSE_FALSI,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
149	[BUG]  [BUGGY]  fx  =  Math.min(FALSE_FALSI,  inverted);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(FALSE_FALSI,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(FALSE_FALSI,  inverted);	  fx    =    Math.max(FALSE_FALSI,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
150	[BUG]  [BUGGY]  switch(method.getAllowedSolution(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getAllowedSolution(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getAllowedSolution(),  inverted)  {	  switch(method.getAllowedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
151	[BUG]  [BUGGY]  switch(method.getAllowedSolution(),  false)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getAllowedSolution(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getAllowedSolution(),  false)  {	  switch(method.getAllowedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
152	[BUG]  [BUGGY]  x0  =  f1  *  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f1  *  fx;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f1  *  fx;	  x0    =    f1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
153	[BUG]  [BUGGY]  x0  =  f1  +  fx;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f1  +  fx;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f1  +  fx;	  x0    =    f1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
154	[BUG]  [BUGGY]  if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  <  0.5)  {  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
155	[BUG]  [BUGGY]  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	case  ILLINOIS:  f0  *=  0.5  +  fx;  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    +    fx;    break;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
156	[BUG]  [BUGGY]  if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  >  0)  {  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    +    fx;    break;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
157	[BUG]  [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  fx;  break;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  fx;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  fx;  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    +    fx;    break;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
158	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  PEGASUS)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  PEGASUS)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  PEGASUS)  {	  switch(method.getRelatedSolution(),    allowedSolution)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
159	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  allowedSolution),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  allowedSolution),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  allowedSolution),  inverted)  {	  switch(method.getRelatedSolution(),    allowedSolution)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
160	[BUG]  [BUGGY]  x0  =  x2;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x2;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x2;	  x0    =    f0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
161	[BUG]  [BUGGY]  fx  =  Math.min(f0,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(f0,  max);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(f0,  max);	  fx    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
162	[BUG]  [BUGGY]  switch(method.getDeclaredSolutions(),  allowedSolution)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredSolutions(),  allowedSolution)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredSolutions(),  allowedSolution)  {	  switch(method.getDeclaredSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
163	[BUG]  [BUGGY]  switch(method.getDeclaredSolutions(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredSolutions(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredSolutions(),  inverted)  {	  switch(method.getDeclaredSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
164	[BUG]  [BUGGY]  f0  =  f1  /(f1  *  fx  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  *  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  *  fx  -  1);	  f0    =    f1    /(f1    +    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
165	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx  *  fx  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx  *  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx  *  fx  -  1);	  f0    =    f1    /(f1    +    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
166	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx  *  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx  *  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx  *  1);	  f0    =    f1    /(f1    +    fx    -    1);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
167	[BUG]  [BUGGY]  fx  =  Math.min(fx,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(fx,  inverted  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(fx,  inverted  +  1);	  fx    =    Math.min(fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
168	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy()  /  fx)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy()  /  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy()  /  fx)  {	  switch(method.getRelativeAccuracy()    +    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
169	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy()  *  fx)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy()  *  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy()  *  fx)  {	  switch(method.getRelativeAccuracy()    +    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
170	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy()  +  fx,  inverted)  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy()  +  fx,  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy()  +  fx,  inverted)  {	  switch(method.getRelativeAccuracy()    +    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
171	[BUG]  [BUGGY]  switch(method.getNativeType(NULL_TYPE))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(NULL_TYPE))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(NULL_TYPE))  {	  switch(method.getNativeType(NO_TYPE))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
172	[BUG]  [BUGGY]  switch(f1.toLowerCase(),  false)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(f1.toLowerCase(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(f1.toLowerCase(),  false)  {	  switch(method.toLowerCase(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
173	[BUG]  [BUGGY]  switch(fx.toLowerCase(),  false)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(fx.toLowerCase(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(fx.toLowerCase(),  false)  {	  switch(method.toLowerCase(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
174	[BUG]  [BUGGY]  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x0;  f1  =  f1;  inverted  =!inverted;	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
175	[BUG]  [BUGGY]  switch(method.getLeastRelatedSolution(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLeastRelatedSolution(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLeastRelatedSolution(),  inverted)  {	  switch(method.getLeastRelatedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
176	[BUG]  [BUGGY]  switch(method.getLeastRelatedSolution(),  allowedSolution)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLeastRelatedSolution(),  allowedSolution)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLeastRelatedSolution(),  allowedSolution)  {	  switch(method.getLeastRelatedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
177	[BUG]  [BUGGY]  switch(method.getLastRelatedSolution())  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLastRelatedSolution())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLastRelatedSolution())  {	  switch(method.getLeastRelatedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
178	[BUG]  [BUGGY]  x0  =  f1;  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f1;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f1;  break;	  x0    =    x1;    break;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
179	[BUG]  [BUGGY]  x0  =  x1  *  fx;  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x1  *  fx;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x1  *  fx;  break;	  x0    =    x1;    break;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
180	[BUG]  [BUGGY]  x0  =  fx;  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  fx;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  fx;  break;	  x0    =    x1;    break;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
181	[BUG]  [BUGGY]  switch(method.getSecantSolution())  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSecantSolution())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSecantSolution())  {	  switch(method.getSolve())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
182	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  inverted  +  1)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  inverted  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  inverted  +  1)  {	  switch(method.getRelativeAccuracy(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
183	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  double)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  double)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  double)  {	  switch(method.getRelativeAccuracy(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
184	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  inverted  +  fx)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  inverted  +  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  inverted  +  fx)  {	  switch(method.getRelativeAccuracy(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
185	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx  *  PEGASUS);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx  *  PEGASUS);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx  *  PEGASUS);  break;	  f0    =    f1    /(f1    +    fx    *    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  f0  =  f1  *(f1  +  fx  *  fx);  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  +  fx  *  fx);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  +  fx  *  fx);  break;	  f0    =    f1    /(f1    +    fx    *    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
187	[BUG]  [BUGGY]  switch(method.doSolve()  &&  inverted  +  1)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve()  &&  inverted  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve()  &&  inverted  +  1)  {	  switch(method.doSolve()    &&    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
188	[BUG]  [BUGGY]  x0  =  x2;  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x2;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x2;  break;	  x0    =    x0;    break;    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
189	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  }	  if(f1    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    PEGASUS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
190	[BUG]  [BUGGY]  x0  =  x1.x1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x1.x1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x1.x1;	  x0    =    f1.x1;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
191	[BUG]  [BUGGY]  fx  =  Math.max(fx0,  inverted);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(fx0,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(fx0,  inverted);	  fx    =    Math.max(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
192	[BUG]  [BUGGY]  switch(method.getDeclaredSolution(),  inverted)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredSolution(),  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredSolution(),  inverted)  {	  switch(method.getDeclaredSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
193	[BUG]  [BUGGY]  switch(method.getDeclaredSolution(),  allowedSolution)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredSolution(),  allowedSolution)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredSolution(),  allowedSolution)  {	  switch(method.getDeclaredSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
194	[BUG]  [BUGGY]  f0  =  f1  *(f1  +  fx)+  1;  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  +  fx)+  1;  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  +  fx)+  1;  break;	  f0    =    f1    *(f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
195	[BUG]  [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  }  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
196	[BUG]  [BUGGY]  switch(method.getSolutions())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolutions())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolutions())  {	  switch(method.getDeclaredSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
197	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)/  fx)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)/  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE)/  fx)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
198	[BUG]  [BUGGY]  if(f0  *  fx  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  *  fx  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  *  fx  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
199	[BUG]  [BUGGY]  if(f1  *  fx  >  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  >  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  >  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
200	[BUG]  [BUGGY]  if(f1  *  fx  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0.5)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
201	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    x0    =    x0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
202	[BUG]  [BUGGY]  if(f1  >  0.5)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0.5)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0.5)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    x0    =    x0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
203	[BUG]  [BUGGY]  f0  =  Math.max(inverted,  f0  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(inverted,  f0  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(inverted,  f0  +  1);	  f0    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
204	[BUG]  [BUGGY]  f0  =  Math.max(f0,  inverted  *  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(f0,  inverted  *  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(f0,  inverted  *  1);	  f0    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
205	[BUG]  [BUGGY]  switch(method.toLowerCase(),  fx)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toLowerCase(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toLowerCase(),  fx)  {	  switch(method.toLowerCase(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
206	[BUG]  [BUGGY]  switch(method.toLowerCase(),  0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toLowerCase(),  0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toLowerCase(),  0)  {	  switch(method.toLowerCase(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
207	[BUG]  [BUGGY]  switch(method.toLowerCase(),  f0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toLowerCase(),  f0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toLowerCase(),  f0)  {	  switch(method.toLowerCase(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
208	[BUG]  [BUGGY]  f0  =  Math.min(f0,  f1  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  f1  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  f1  +  1);	  f0    =    Math.min(f0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
209	[BUG]  [BUGGY]  f0  =  Math.min(f0,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  fx  -  1);	  f0    =    Math.min(f0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
210	[BUG]  [BUGGY]  fx  =  Math.max(f0,  inverted,  0.5  +  fx);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(f0,  inverted,  0.5  +  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(f0,  inverted,  0.5  +  fx);	  fx    =    Math.max(f0,    inverted,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
211	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  fx)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  fx)  {	  switch(method.getRelatedSolution(),    allowedSolution)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
212	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  0)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  0)  {	  switch(method.getRelatedSolution(),    allowedSolution)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
213	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx  *  2);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx  *  2);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx  *  2);  break;	  f0    =    f1    /(f1    +    fx    *    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
214	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx  *  4);  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx  *  4);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx  *  4);  break;	  f0    =    f1    /(f1    +    fx    *    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
215	[BUG]  [BUGGY]  switch(method.doSolve(),  fx)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve(),  fx)  {	  switch(method.doSolve(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
216	[BUG]  [BUGGY]  switch(method.doSolve(),  f0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve(),  f0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve(),  f0)  {	  switch(method.doSolve(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
217	[BUG]  [BUGGY]  switch(method.doSolve(),  0.5)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSolve(),  0.5)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSolve(),  0.5)  {	  switch(method.doSolve(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
218	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx)/  4;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx)/  4;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx)/  4;	  f0    =    f1    /(f1    +    fx)+    1;    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
219	[BUG]  [BUGGY]  f0  =  Math.min(f0,  fx);  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  fx);  break;	  f0    =    Math.min(f0,    inverted);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
220	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE),  0)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
221	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE));  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE));	  switch(method.getNativeType(UNKNOWN_TYPE),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
222	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  0.5)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  0.5)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE),  0.5)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
223	[BUG]  [BUGGY]  if(f0  *  fx  >  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  *  fx  >  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  *  fx  >  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f0    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
224	[BUG]  [BUGGY]  fx  =  Math.min(inverted,  0.5);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(inverted,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(inverted,  0.5);	  fx    =    Math.min(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
225	[BUG]  [BUGGY]  fx  =  Math.min(FX0,  inverted);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(FX0,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(FX0,  inverted);	  fx    =    Math.min(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
226	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  fx  -  1);	  f0    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
227	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  DEFAULT_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  DEFAULT_ABSOLUTE_ACCURACY)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  DEFAULT_ABSOLUTE_ACCURACY)  {	  switch(method.getRelativeAccuracy(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
228	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  0.5)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  0.5)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  0.5)  {	  switch(method.getRelativeAccuracy(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
229	[BUG]  [BUGGY]  f0  =  Math.max(f0,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(f0,  f1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(f0,  f1);	  f0    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
230	[BUG]  [BUGGY]  f0  =  Math.max(inverted,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(inverted,  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(inverted,  fx  -  1);	  f0    =    Math.max(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
231	[BUG]  [BUGGY]  x0  =  x1  +  fx;  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x1  +  fx;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x1  +  fx;  break;	  x0    =    x1;    break;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
232	[BUG]  [BUGGY]  x0  =  f0;  break;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f0;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f0;  break;	  x0    =    x1;    break;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
233	[BUG]  [BUGGY]  switch(method.getSolve()  &&  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolve()  &&  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolve()  &&  inverted)  {	  switch(method.doSolve()    &&    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
234	[BUG]  [BUGGY]  switch(method.getSeconds())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSeconds())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSeconds())  {	  switch(method.getSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
235	[BUG]  [BUGGY]  f0  =  Math.min(f0,  inverted  *  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  inverted  *  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  inverted  *  1);	  f0    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
236	[BUG]  [BUGGY]  switch(method.doLowerCase(),  false)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doLowerCase(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doLowerCase(),  false)  {	  switch(method.toLowerCase(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
237	[BUG]  [BUGGY]  switch(method.toSolve(),  false)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.toSolve(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.toSolve(),  false)  {	  switch(method.doSolve(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
238	[BUG]  [BUGGY]  switch(method.allowSolution(),  false)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.allowSolution(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.allowSolution(),  false)  {	  switch(method.doSolve(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
239	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx)/  4;  break;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx)/  4;  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx)/  4;  break;	  f0    =    f1    /(f1    +    fx)+    1;    break;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
240	[BUG]  [BUGGY]  f0  =  x1;  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  x1;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  x1;  break;	  f0    =    x0;    break;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
241	[BUG]  [BUGGY]  fx  =  Math.min(fx,  f0);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(fx,  f0);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(fx,  f0);	  fx    =    Math.min(fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
242	[BUG]  [BUGGY]  fx  =  Math.max(FALSE_FALSI,  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(FALSE_FALSI,  f0);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(FALSE_FALSI,  f0);	  fx    =    Math.max(FALSE_FALSI,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
243	[BUG]  [BUGGY]  fx  =  Math.max(FALSE_FALSI,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(FALSE_FALSI,  f1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(FALSE_FALSI,  f1);	  fx    =    Math.max(FALSE_FALSI,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
244	[BUG]  [BUGGY]  x0  =  0.5;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  0.5;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  0.5;	  x0    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
245	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  0)  {	  switch(method.getDeclaredMethods(),    DEFAULT_ABSOLUTE_ACCURACY)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
246	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  DEFAULT_ILLINOIS)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  DEFAULT_ILLINOIS)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  DEFAULT_ILLINOIS)  {	  switch(method.getDeclaredMethods(),    DEFAULT_ABSOLUTE_ACCURACY)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
247	[BUG]  [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5;  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5;  break;  }  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5;  break;  }	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5;    break;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
248	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  double)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  double)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  double)  {	  switch(method.getRelatedSolution(),    inverted)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
249	[BUG]  [BUGGY]  f0  =  Math.min(f0,  f1  *  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  f1  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  f1  *  fx);	  f0    =    Math.min(f0,    inverted    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
250	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  f1  *  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  f1  *  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  f1  *  fx);	  f0    =    Math.min(f0,    inverted    *    fx);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
251	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  x0)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  x0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  x0)  {	  switch(method.getDeclaredMethods(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
252	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  x)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  x)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  x)  {	  switch(method.getDeclaredMethods(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
253	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  break;  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  break;  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  }  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f0;  break;  case  ILLINOIS:  f0  *=  0.5  /  (f1  +  fx);  break;  }	  f0    =    f0;    break;    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
254	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  break;  }  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f0;  break;  }	  f0    =    f0;    break;    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
255	[BUG]  [BUGGY]  switch(method.getRelatedSolutions())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolutions())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolutions())  {	  switch(method.getAllowedSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
256	[BUG]  [BUGGY]  if(f0  >=  0.5)  {  if(f1  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  >=  0.5)  {  if(f1  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  >=  0.5)  {  if(f1  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
257	[BUG]  [BUGGY]  fx  =  Math.min(f0,  inverted  *  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(f0,  inverted  *  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(f0,  inverted  *  1);	  fx    =    Math.min(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
258	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break	  if(f1    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
259	[BUG]  [BUGGY]  switch(method.getSolver())  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolver())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolver())  {	  switch(method.getSolve())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
260	[BUG]  [BUGGY]  fx  =  Math.max(0.5,  inverted,  f0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.5,  inverted,  f0);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.5,  inverted,  f0);	  fx    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
261	[BUG]  [BUGGY]  fx  =  Math.max(0.0,  inverted);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.0,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.0,  inverted);	  fx    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
262	[BUG]  [BUGGY]  f0  =  Math.max(F0,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(F0,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(F0,  inverted);	  f0    =    Math.max(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
263	[BUG]  [BUGGY]  f0  *=  0.5  /  (f1  +  fx,  inverted);  break;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  *=  0.5  /  (f1  +  fx,  inverted);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  *=  0.5  /  (f1  +  fx,  inverted);  break;	  f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
264	[BUG]  [BUGGY]  f0  *=  0.5  /  (f1  +  fx)+  1;  break;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  *=  0.5  /  (f1  +  fx)+  1;  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  *=  0.5  /  (f1  +  fx)+  1;  break;	  f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
265	[BUG]  [BUGGY]  fx  =  Math.max(f0,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(f0,  f1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(f0,  f1);	  fx    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
266	[BUG]  [BUGGY]  fx  =  Math.min(f0,  f1)-  1;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(f0,  f1)-  1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(f0,  f1)-  1;	  fx    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
267	[BUG]  [BUGGY]  f0  =  f1  *(f1  +  fx  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  +  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  +  fx  -  1);	  f0    =    f1    *(f1    +    fx);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
268	[BUG]  [BUGGY]  if(f0  *  fx  <  0)  {  f1  =  f0;  f1  =  f1;  inverted  =!inverted;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  *  fx  <  0)  {  f1  =  f0;  f1  =  f1;  inverted  =!inverted;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  *  fx  <  0)  {  f1  =  f0;  f1  =  f1;  inverted  =!inverted;  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
269	[BUG]  [BUGGY]  x0  =  f1.x1  +  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f1.x1  +  fx;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f1.x1  +  fx;	  x0    =    f1.x1;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
270	[BUG]  [BUGGY]  x0  =  f1.x0;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f1.x0;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f1.x0;	  x0    =    f1.x1;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
271	[BUG]  [BUGGY]  fx  =  Math.min(inverted,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(inverted,  fx  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(inverted,  fx  +  1);	  fx    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
272	[BUG]  [BUGGY]  fx  =  Math.min(inverted,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(inverted,  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(inverted,  fx  -  1);	  fx    =    Math.min(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
273	[BUG]  [BUGGY]  fx  =  Math.max(f0,  inverted  +  1  -  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(f0,  inverted  +  1  -  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(f0,  inverted  +  1  -  fx);	  fx    =    Math.max(f0,    inverted    +    1);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
274	[BUG]  [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;  }  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  +  fx;  break;  }	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    +    fx;    break;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
275	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx,!inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx,!inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx,!inverted);	  f0    =    f1    /(f1    +    fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
276	[BUG]  [BUGGY]  f0  =  f1  /(f1  +  fx,  0.5);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  /(f1  +  fx,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  /(f1  +  fx,  0.5);	  f0    =    f1    /(f1    +    fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
277	[BUG]  [BUGGY]  switch(method.getNativeType(ALL_TYPE))  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(ALL_TYPE))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(ALL_TYPE))  {	  switch(method.getNativeType(NO_TYPE))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
278	[BUG]  [BUGGY]  fx  =  Math.max(F0,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(F0,  inverted);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(F0,  inverted);	  fx    =    Math.max(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
279	[BUG]  [BUGGY]  switch(method.allowSeconds())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.allowSeconds())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.allowSeconds())  {	  switch(method.allowSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
280	[BUG]  [BUGGY]  f0  =  f1;  f0  =  f0;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1;  f0  =  f0;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1;  f0  =  f0;	  f0    =    f0;    f1    =    f1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
281	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  x0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  x0)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  x0)  {	  switch(method.getRelativeAccuracy(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
282	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  x)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  x)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  x)  {	  switch(method.getRelativeAccuracy(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
283	[BUG]  [BUGGY]  switch(method.getSolver(),  false)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolver(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolver(),  false)  {	  switch(method.getRelativeAccuracy(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
284	[BUG]  [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  *  fx  <  0)  {  f0  =  f1;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break	  if(f0    *    fx    <    0)    {    f0    =    f1;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
285	[BUG]  [BUGGY]  x0  =  x1  +  fx  -  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  x1  +  fx  -  1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  x1  +  fx  -  1;	  x0    =    x1    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
286	[BUG]  [BUGGY]  f0  =  Math.min(inverted,  f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(inverted,  f1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(inverted,  f1);	  f0    =    Math.min(inverted,    f0);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
287	[BUG]  [BUGGY]  switch(method.getLowerCase())  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLowerCase())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLowerCase())  {	  switch(method.toUpperCase())    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
288	[BUG]  [BUGGY]  switch(method.getLargerSolution())  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLargerSolution())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLargerSolution())  {	  switch(method.getAllowedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
289	[BUG]  [BUGGY]  switch(method.getLeastSuperclassSolution())  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLeastSuperclassSolution())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLeastSuperclassSolution())  {	  switch(method.getAllowedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
290	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy()  +  fx,  false)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy()  +  fx,  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy()  +  fx,  false)  {	  switch(method.getRelativeAccuracy(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
291	[BUG]  [BUGGY]  if(f0  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }	  if(f1    *    fx    <    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
292	[BUG]  [BUGGY]  if(f0  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  *  fx  <  0)  {  f0  =  f0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    f0    =    f0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    PEGASUS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
293	[BUG]  [BUGGY]  fx  =  Math.max(inverted,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(inverted,  fx  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(inverted,  fx  +  1);	  fx    =    Math.max(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
294	[BUG]  [BUGGY]  fx  =  Math.max(inverted,  fx  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(inverted,  fx  -  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(inverted,  fx  -  1);	  fx    =    Math.max(inverted,    fx);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
295	[BUG]  [BUGGY]  fx  =  Math.max(fx,  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(fx,  f0);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(fx,  f0);	  fx    =    Math.max(fx,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
296	[BUG]  [BUGGY]  f0  =  f1  *(f1  +  fx  +  1);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  f1  *(f1  +  fx  +  1);  break;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  f1  *(f1  +  fx  +  1);  break;	  f0    =    f1    /(f1    +    fx    +    1);    break;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
297	[BUG]  [BUGGY]  switch(method.getLeastRelatedSolution(),  fx)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLeastRelatedSolution(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLeastRelatedSolution(),  fx)  {	  switch(method.getLeastRelatedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
298	[BUG]  [BUGGY]  switch(method.getLeastRelatedSolution()  +  fx)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLeastRelatedSolution()  +  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLeastRelatedSolution()  +  fx)  {	  switch(method.getLeastRelatedSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
299	[BUG]  [BUGGY]  switch(method.getDeclaredMethods(),  fx  -  1)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredMethods(),  fx  -  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredMethods(),  fx  -  1)  {	  switch(method.getDeclaredMethods(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
300	[BUG]  [BUGGY]  f0  =  Math.min(f0,  f1,  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.min(f0,  f1,  fx  +  1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.min(f0,  f1,  fx  +  1);	  f0    =    Math.min(f0,    fx    +    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
301	[BUG]  [BUGGY]  switch(method.getDeclaredStandardSolutions(),  false)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredStandardSolutions(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredStandardSolutions(),  false)  {	  switch(method.getDeclaredMethods(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
302	[BUG]  [BUGGY]  switch(method.getRelatedSolution(),  this.inverted)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelatedSolution(),  this.inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelatedSolution(),  this.inverted)  {	  switch(method.getRelatedSolution(),    allowedSolution)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
303	[BUG]  [BUGGY]  x0  =!inverted;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =!inverted;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =!inverted;	  x0    =    inverted;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
304	[BUG]  [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  *  fx);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  *  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f1  >  0)  {  case  ILLINOIS:  f0  *=  0.5  /  (f1  *  fx);  break;	  if(f1    >    0)    {    case    ILLINOIS:    f0    *=    0.5    /    (f1    +    fx);    break;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
305	[BUG]  [BUGGY]  x0  =  f0  +  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f0  +  fx;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f0  +  fx;	  x0    =    x1    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
306	[BUG]  [BUGGY]  x0  =  f1  +  x1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f1  +  x1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f1  +  x1;	  x0    =    x1    +    fx;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
307	[BUG]  [BUGGY]  f0  =  Math.max(inverted,  fx);  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  =  Math.max(inverted,  fx);  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  =  Math.max(inverted,  fx);  break;	  f0    =    Math.max(f0,    inverted);    break;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
308	[BUG]  [BUGGY]  fx  =  Math.max(0.5,  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.5,  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.5,  fx);	  fx    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
309	[BUG]  [BUGGY]  fx  =  Math.max(0.5,  inverted,  fx);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(0.5,  inverted,  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(0.5,  inverted,  fx);	  fx    =    Math.max(0.5,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
310	[BUG]  [BUGGY]  f0  *=  f1  /(f1  +  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  f0  *=  f1  /(f1  +  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	f0  *=  f1  /(f1  +  fx);	  f0    =    f1    *(f1    +    fx);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
311	[BUG]  [BUGGY]  x0  =  0.5;  break;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  0.5;  break;  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  0.5;  break;	  x0    =    x1;    break;    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
312	[BUG]  [BUGGY]  fx  =  Math.min(fx,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.min(fx,  f1);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.min(fx,  f1);	  fx    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
313	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  fx  +  1)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  fx  +  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE),  fx  +  1)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
314	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  fx  -  1)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE),  fx  -  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE),  fx  -  1)  {	  switch(method.getNativeType(UNKNOWN_TYPE),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
315	[BUG]  [BUGGY]  x0  =  f0  *  f1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  x0  =  f0  *  f1;  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	x0  =  f0  *  f1;	  x0    =    f0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
316	[BUG]  [BUGGY]  switch(method.doSecantSolve()  &&  inverted)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.doSecantSolve()  &&  inverted)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.doSecantSolve()  &&  inverted)  {	  switch(method.doSecantSolve())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
317	[BUG]  [BUGGY]  fx  =  Math.max(FALSE_FALSI,  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(FALSE_FALSI,  fx);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(FALSE_FALSI,  fx);	  fx    =    Math.max(FALSE_FALSI,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
318	[BUG]  [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)/  ||  method.getNativeType(UNKNOWN_TYPE))  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getNativeType(UNKNOWN_TYPE)/  ||  method.getNativeType(UNKNOWN_TYPE))  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getNativeType(UNKNOWN_TYPE)/  ||  method.getNativeType(UNKNOWN_TYPE))  {	  switch(method.getNativeType(UNKNOWN_TYPE)||    method.getNativeType(UNKNOWN_TYPE))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
319	[BUG]  [BUGGY]  fx  =  Math.max(fx0,  inverted,  0.5);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  fx  =  Math.max(fx0,  inverted,  0.5);  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	fx  =  Math.max(fx0,  inverted,  0.5);	  fx    =    Math.max(f0,    inverted,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
320	[BUG]  [BUGGY]  switch(method.allowStatement())  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.allowStatement())  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.allowStatement())  {	  switch(method.allowSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
321	[BUG]  [BUGGY]  switch(method.getDeclaredSolutions(),  fx)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredSolutions(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredSolutions(),  fx)  {	  switch(method.getDeclaredSolutions())    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
322	[BUG]  [BUGGY]  switch(method.getRelativeAccuracy(),  fx  -  1)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getRelativeAccuracy(),  fx  -  1)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getRelativeAccuracy(),  fx  -  1)  {	  switch(method.getRelativeAccuracy(),    fx)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
323	[BUG]  [BUGGY]  switch(method.getLowerCase(),  false)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getLowerCase(),  false)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getLowerCase(),  false)  {	  switch(method.toLowerCase(),    false)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
324	[BUG]  [BUGGY]  switch(method.getSolution(),  fx)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getSolution(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getSolution(),  fx)  {	  switch(method.getSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
325	[BUG]  [BUGGY]  switch(method.getDeclaredSolution(),  fx)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  switch(method.getDeclaredSolution(),  fx)  {  [BUGGY]      case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	switch(method.getDeclaredSolution(),  fx)  {	  switch(method.getDeclaredSolution())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
326	[BUG]  [BUGGY]  if(f0  *  fx  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  }  else  {      [BUGGY]  if(f0  *  fx  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }  [BUGGY]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:    break;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	179	179	1	replace	if(f0  *  fx  <  0)  {  x0  =  x0;  f1  =  f1;  inverted  =!inverted;  }  else  {  case  ILLINOIS:  f0  *=  f1  /  (f1  +  fx);  break;  }	  if(f1    >    0)    {    x0    =    x0;    f1    =    f1;    inverted    =!inverted;    }    else    {    case    ILLINOIS:    f0    *=    f1    /    (f1    +    fx);    break;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
