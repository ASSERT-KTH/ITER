bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  rtol  =  computeRelativeValue(x,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeRelativeValue(x,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeRelativeValue(x,  inverted);	  final    double    rtol    =    computeRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  final  double  rtol  =  computeRelativeValue(x0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeRelativeValue(x0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeRelativeValue(x0);	  final    double    rtol    =    computeRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRelativeValue(x);	  final    double    rtol    =    computeRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionValue(x,  rtol);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
5	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionValue(x0);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
6	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionValue(x0,  rtol);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
7	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFullValue(rtol,  x0);	  final    double    fx    =    computeFullValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
8	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(x0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFullValue(x0);	  final    double    fx    =    computeFullValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
9	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(!inverted)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(!inverted)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol  *  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol  *  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol  *  1);	  final    double    f0    =    computeObjectiveValue(x,    rtol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x,  rtol  +  1);	  final    double    f0    =    computeObjectiveValue(x,    rtol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  x  +  1);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  x  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol,  x  +  1);	  final    double    f0    =    computeObjectiveValue(x,    rtol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  inverted);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
14	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  max);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x,  max);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
15	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  rtol))/(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  rtol))/(f1  -  x0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  -((  f1  *  rtol))/(f1  -  x0));	  final    double    fx    =    x1    -((    f1    *    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
16	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  x0))/(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  x0))/(f1  -  x0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol  -((  f1  *  x0))/(f1  -  x0));	  final    double    fx    =    x1    -((    f1    *    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
17	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getRelativeAccuracy().doubleValue()  +  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getRelativeAccuracy().doubleValue()  +  1;	  final    double    f0    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
18	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy().doubleValue()  *  rtol;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getRelativeAccuracy().doubleValue()  *  rtol;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getRelativeAccuracy().doubleValue()  *  rtol;	  final    double    f0    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
19	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy().longValue();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getRelativeAccuracy().longValue();  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getRelativeAccuracy().longValue();	  final    double    f0    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
20	[BUG]  [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeObjectiveValue(x,  rtol);	  final    double    rtol    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
21	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeObjectiveValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRelativeAccuracy().computeObjectiveValue(rtol);	  final    double    rtol    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
22	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  <  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(x  <  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    <    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(x  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(x  <  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(rtol);  if(x  <  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    <    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(x  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(x  <  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(x  <  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    <    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  <  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(x  <  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    <    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFullValue(x);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFullValue(x,  rtol);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFullValue(rtol);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  final  double  fx  =  calculateFullyValue(x);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullyValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFullyValue(x);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  >=  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  >=  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(x  >=  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >=    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  ==  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  ==  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(x  ==  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >=    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x!=  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x!=  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(x!=  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >=    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeAccuracy(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeAccuracy(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeAccuracy(x);	  final    double    fx    =    computeRelativeAccuracy(rtol);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
34	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeAccuracy(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeAccuracy(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeAccuracy(x,  rtol);	  final    double    fx    =    computeRelativeAccuracy(rtol);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
35	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeAccuracy(rtol);	  final    double    fx    =    computeRelativeAccuracy(rtol);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
36	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeAccuracy(x);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeAccuracy(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateRelativeAccuracy(x);	  final    double    fx    =    computeRelativeAccuracy(rtol);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
37	[BUG]  [BUGGY]  final  double  f0  =  calculateFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateFunctionValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  calculateFunctionValue(x);	  final    double    f0    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
38	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(rtol,  x,  inverted);	  final    double    fx    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
39	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(x,  inverted);	  final    double    fx    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
40	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  relativeAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  relativeAccuracy);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
41	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  max);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  max);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  max);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
42	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(x,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunction(x,  rtol);	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunction(rtol);	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
44	[BUG]  [BUGGY]  final  double  f0  =  calculateFullValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateFullValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  calculateFullValue(x);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
45	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x,  rtol,  inverted);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
46	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x,  rtol  +  1);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
47	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(rtol,  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(rtol,  x);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
48	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  inverted,  rtol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  inverted,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(x,  inverted,  rtol);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
49	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  f0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  f0);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  inverted,  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  inverted,  max);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  inverted,  max);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeObjectiveValue(x,  0);	  final    double    rtol    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  0.0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  0.0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeObjectiveValue(x,  0.0);	  final    double    rtol    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  1.0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  1.0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeObjectiveValue(x,  1.0);	  final    double    rtol    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionObjective(x);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionObjective(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionObjective(x);	  final    double    fx    =    computeFunctionObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionObjective(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionObjective(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionObjective(x,  rtol);	  final    double    fx    =    computeFunctionObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionObjective(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionObjective(rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionObjective(rtol,  inverted);	  final    double    fx    =    computeFunctionObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
57	[BUG]  [BUGGY]  final  double  fx  =  getFunctionObjective(rtol);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionObjective(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionObjective(rtol);	  final    double    fx    =    computeFunctionObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
58	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getFunctionValue().doubleValue();  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getFunctionValue().doubleValue();	  final    double    f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
59	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(inverted)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(inverted)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
60	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(inverted)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(inverted)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
61	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(inverted)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(rtol);  if(inverted)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
62	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(rtol,  x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeValue(rtol,  x,  inverted);	  final    double    fx    =    computeRelativeValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
63	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateRelativeValue(x,  rtol);	  final    double    fx    =    computeRelativeValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
64	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeValue(x0,  rtol);	  final    double    fx    =    computeRelativeValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
65	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateRelativeValue(x);	  final    double    fx    =    computeRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
66	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x,  f1);	  final    double    f0    =    computeObjectiveValue(x,    f1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
67	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol,  f1);	  final    double    f0    =    computeObjectiveValue(x,    f1);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
68	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateRelativeValue(x0,  rtol);	  final    double    fx    =    calculateRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
69	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(!inverted)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(rtol);  if(!inverted)  {  return  x;  }	  final    double    f0    =    computeFunctionValue(x);    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
70	[BUG]  [BUGGY]  final  double  rtol  =  computeObjective(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeObjective(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeObjective(x);	  final    double    rtol    =    computeObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
71	[BUG]  [BUGGY]  final  double  rtol  =  computeRelativeAccuracy(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeRelativeAccuracy(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeRelativeAccuracy(rtol);	  final    double    rtol    =    computeObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
72	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeObjective(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeObjective(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRelativeAccuracy().computeObjective(rtol);	  final    double    rtol    =    computeObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
73	[BUG]  [BUGGY]  final  double  fx  =  rtol.getValue();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol.getValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol.getValue();	  final    double    fx    =    x.getValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
74	[BUG]  [BUGGY]  final  double  fx  =  x0.getValue();  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0.getValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0.getValue();	  final    double    fx    =    x.getValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
75	[BUG]  [BUGGY]  final  double  fx  =  x.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.getValue()  +  1;  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x.getValue()  +  1;	  final    double    fx    =    x.getValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
76	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeValue(x,  rtol,  inverted);	  final    double    fx    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
77	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateRelativeValue(x,  rtol,  inverted);	  final    double    fx    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
78	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFullValue(x,  rtol);	  final    double    fx    =    getFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
79	[BUG]  [BUGGY]  final  double  f0  =  getRelativeFunctionValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getRelativeFunctionValue().doubleValue();  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getRelativeFunctionValue().doubleValue();	  final    double    f0    =    getRelativeFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
80	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFullValue(rtol,  x,  inverted);	  final    double    fx    =    computeFullValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
81	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFullValue(x0,  rtol);	  final    double    fx    =    computeFullValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
83	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
84	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  (rtol  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  (rtol  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  -((  f1  *  (rtol  -  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
85	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  x,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(rtol,  x,  inverted);	  final    double    f0    =    computeFunctionValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
86	[BUG]  [BUGGY]  final  double  f0  =  calculateFunctionValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateFunctionValue(x,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  calculateFunctionValue(x,  rtol);	  final    double    f0    =    computeFunctionValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
87	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  x1));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  x1));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  x1));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    rtol));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
88	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  x0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  x0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    rtol));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
89	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  >  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  >  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(f0  >  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
90	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  <  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  <  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(f0  <  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
91	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  >=  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  >=  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(f0  >=  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
92	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  >  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  >  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(f0  >  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
93	[BUG]  [BUGGY]  final  double  fx  =  computeObjective(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjective(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjective(x,  rtol,  inverted);	  final    double    fx    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
94	[BUG]  [BUGGY]  final  double  fx  =  computeObjective(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjective(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjective(rtol,  x);	  final    double    fx    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
95	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  ==  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(f0  ==  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(f0  ==  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    ==    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
96	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  ==  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  ==  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(f0  ==  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    ==    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
97	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRelativeValue(rtol);	  final    double    fx    =    getRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
98	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue(x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeValue(x0);	  final    double    fx    =    getRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
99	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue(x1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue(x1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeValue(x1);	  final    double    fx    =    getRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
100	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(x  ==  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(x  ==  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(rtol);  if(x  ==  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    ==    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
101	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getFunctionValueAccuracy(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getFunctionValueAccuracy(x);	  final    double    f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
102	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  y1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  y1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x,  y1);	  final    double    f0    =    computeObjectiveValue(x,    y1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
103	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  y0);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  y0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  y0);	  final    double    f0    =    computeObjectiveValue(x,    y1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
104	[BUG]  [BUGGY]  final  double  fx  =  rtol.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol.doubleValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol.doubleValue();	  final    double    fx    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
105	[BUG]  [BUGGY]  final  double  fx  =  x.doubleValue()  *  rtol;  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.doubleValue()  *  rtol;  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x.doubleValue()  *  rtol;	  final    double    fx    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
106	[BUG]  [BUGGY]  final  double  fx  =  x.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.doubleValue()  +  1;  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x.doubleValue()  +  1;	  final    double    fx    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
107	[BUG]  [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy();  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRawRelativeAccuracy();	  final    double    rtol    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
108	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeAccuracy().doubleValue();  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRelativeAccuracy().doubleValue();	  final    double    rtol    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  +  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRelativeAccuracy()  +  1;	  final    double    rtol    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x1,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x1,  absoluteAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x1,  absoluteAccuracy);	  final    double    f0    =    Math.max(x    *    relativeAccuracy,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
111	[BUG]  [BUGGY]  final  double  f0  =  Math.max(x  *  rtol,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(x  *  rtol,  absoluteAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.max(x  *  rtol,  absoluteAccuracy);	  final    double    f0    =    Math.max(x    *    relativeAccuracy,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
112	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  x0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  x0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
113	[BUG]  [BUGGY]  final  double  x  =  getFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  getFunctionValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  x  =  getFunctionValue(rtol);	  final    double    fx    =    getFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
114	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionValue(rtol,  x);	  final    double    fx    =    getFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
115	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionValue();	  final    double    fx    =    getFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
116	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  inverted,  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  inverted,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  inverted,  rtol);	  final    double    f0    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
117	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol,  f1);	  final    double    f0    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
118	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  0,  inverted);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  0,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol,  0,  inverted);	  final    double    f0    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
119	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol  -((  f1  *  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
120	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  rtol))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  rtol))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  -((  f1  *  rtol))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
121	[BUG]  [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  f0));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
122	[BUG]  [BUGGY]  final  double  fx  =  x1  +((  f1  *(x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  +((  f1  *(x1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  +((  f1  *(x1  -  x0))/(f1  -  f0));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
123	[BUG]  [BUGGY]  final  double  fx  =  x1  +((  f1  *(x2  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  +((  f1  *(x2  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  +((  f1  *(x2  -  x0))/(f1  -  f0));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
124	[BUG]  [BUGGY]  final  double  x  =  getRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  getRelativeValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  x  =  getRelativeValue(rtol);	  final    double    fx    =    getRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
125	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeValue(rtol,  x);	  final    double    fx    =    getRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
126	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(rtol,  inverted);	  final    double    fx    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  >  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  >  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(x  >  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
128	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(x  >  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(x  >  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(x  >  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
129	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  >  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol);  if(x  >  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(rtol);  if(x  >  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
130	[BUG]  [BUGGY]  final  double  fx  =  computeInteger(x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeInteger(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeInteger(x);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
131	[BUG]  [BUGGY]  final  double  fx  =  computeFloat(rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFloat(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFloat(rtol);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
132	[BUG]  [BUGGY]  final  double  fx  =  computeInteger(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeInteger(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeInteger(x,  rtol);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
133	[BUG]  [BUGGY]  final  double  fx  =  computeLong(rtol);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeLong(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeLong(rtol);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
134	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
135	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x,  rtol);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
136	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().compute(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().compute(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeAccuracy().compute(x,  rtol);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
137	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeFunctionValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeAccuracy().computeFunctionValue(x);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
138	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(rtol,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(rtol,  f1);	  final    double    f0    =    computeFullValue(x,    f1);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
139	[BUG]  [BUGGY]  final  double  f0  =  calculateFullValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateFullValue(x,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  calculateFullValue(x,  rtol);	  final    double    f0    =    computeFullValue(x,    f1);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
140	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(x,  rtol,  inverted);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
141	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(x0,  rtol);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
142	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  <  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  <  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(f0  <  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    <    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
143	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(f0  <  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(rtol);  if(f0  <  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(rtol);  if(f0  <  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    <    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
144	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  >=  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(f0  >=  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(f0  >=  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >=    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
145	[BUG]  [BUGGY]  final  double  fx  =  rtol  +((  f1  *  (x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  +((  f1  *  (x1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol  +((  f1  *  (x1  -  x0))/(f1  -  f0));	  final    double    fx    =    x    +((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
146	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFullValue(x,  rtol,  inverted);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
147	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFullValue(x,  rtol  +  1);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
148	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(rtol,  x,  inverted);	  final    double    fx    =    computeFunctionValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
149	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(rtol,  x0);	  final    double    fx    =    computeFunctionValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
150	[BUG]  [BUGGY]  final  double  fx  =  calculateFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunctionValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFunctionValue(x);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
151	[BUG]  [BUGGY]  final  double  fx  =  calculateFunctionValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunctionValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFunctionValue(x,  rtol);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
152	[BUG]  [BUGGY]  final  double  fx  =  calculateFunctionValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunctionValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFunctionValue(x0,  rtol);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
153	[BUG]  [BUGGY]  final  double  fx  =  computeObjective(x,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjective(x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjective(x,  inverted);	  final    double    fx    =    computeObjective(rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
154	[BUG]  [BUGGY]  final  double  fx  =  computeFunction(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunction(rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunction(rtol,  inverted);	  final    double    fx    =    computeObjective(rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
155	[BUG]  [BUGGY]  final  double  fx  =  computeFunction(x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunction(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunction(x);	  final    double    fx    =    computeFunction(rtol);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
156	[BUG]  [BUGGY]  final  double  fx  =  computeFunction(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunction(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunction(x,  rtol);	  final    double    fx    =    computeFunction(rtol);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
157	[BUG]  [BUGGY]  final  double  fx  =  getFunction(rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunction(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunction(rtol);	  final    double    fx    =    computeFunction(rtol);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
158	[BUG]  [BUGGY]  final  double  f0  =  calculateObjectiveValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateObjectiveValue(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  calculateObjectiveValue(x,  rtol,  inverted);	  final    double    f0    =    calculateObjectiveValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
159	[BUG]  [BUGGY]  final  double  f0  =  computeObjective(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjective(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjective(x,  rtol,  inverted);	  final    double    f0    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
160	[BUG]  [BUGGY]  final  double  f0  =  computeObjective(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjective(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjective(x,  rtol  +  1);	  final    double    f0    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
161	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x,  rtol,  inverted);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
162	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x,  rtol,  f1);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
163	[BUG]  [BUGGY]  final  double  fx  =  computeLocal(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeLocal(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeLocal(x);	  final    double    fx    =    computeObjective(x);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
164	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  f1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(rtol,  f1);	  final    double    fx    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
165	[BUG]  [BUGGY]  final  double  fx  =  computeFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFallThrough(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFallThrough(rtol);	  final    double    fx    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
166	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    computeFullValue(x,    f1);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
167	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  ObjectiveValue.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  ObjectiveValue.FUNCTION);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x,  ObjectiveValue.FUNCTION);	  final    double    f0    =    computeFullValue(x,    f1);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
168	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(x1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(x1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFullValue(x1);	  final    double    fx    =    getFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
169	[BUG]  [BUGGY]  final  double  f0  =  getRelativeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getRelativeFunctionValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getRelativeFunctionValue(x);	  final    double    f0    =    getRelativeFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
170	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(rtol,  x  +  1);	  final    double    fx    =    computeFunctionValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
171	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  >=  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  >=  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(f0  >=  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >=    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
172	[BUG]  [BUGGY]  final  double  f0  =  computeLongValue(x);  if(f0  >=  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeLongValue(x);  if(f0  >=  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeLongValue(x);  if(f0  >=  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >=    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
173	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeValue();	  final    double    fx    =    getRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
174	[BUG]  [BUGGY]  final  double  rtol  =  computeSolve(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeSolve(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeSolve(rtol);	  final    double    rtol    =    computeObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
175	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  ==  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  ==  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(f0  ==  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    ==    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
176	[BUG]  [BUGGY]  final  double  f0  =  computeLongValue(x);  if(f0  ==  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeLongValue(x);  if(f0  ==  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeLongValue(x);  if(f0  ==  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    ==    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
177	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getRelativeValue(x,  rtol);	  final    double    fx    =    getRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
178	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
179	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  totalAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  totalAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x,  totalAccuracy);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
180	[BUG]  [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  f1));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  f1));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
181	[BUG]  [BUGGY]  final  double  fx  =  x1  +((  f1  *(x1  -  x0))/(f1  -  fx0));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  +((  f1  *(x1  -  x0))/(f1  -  fx0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  +((  f1  *(x1  -  x0))/(f1  -  fx0));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
182	[BUG]  [BUGGY]  final  double  fx  =  computeFallThrough(x0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFallThrough(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFallThrough(x0);	  final    double    fx    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
183	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeAccuracy(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeAccuracy(rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeAccuracy(rtol,  inverted);	  final    double    fx    =    computeObjective(rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
184	[BUG]  [BUGGY]  final  double  fx  =  x.getFullValue();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.getFullValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x.getFullValue();	  final    double    fx    =    x.getValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
185	[BUG]  [BUGGY]  final  double  fx  =  x.getRawValue();  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.getRawValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x.getRawValue();	  final    double    fx    =    x.getValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
186	[BUG]  [BUGGY]  final  double  fx  =  computeDouble(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeDouble(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeDouble(rtol);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
187	[BUG]  [BUGGY]  final  double  fx  =  computeInteger(0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeInteger(0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeInteger(0);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
188	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  false);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  false);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  false);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
189	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  0,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  0,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  0,  inverted);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
190	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(rtol);  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(rtol);  if(!inverted)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(rtol);  if(!inverted)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(rtol);    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
191	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(x,  rtol  +  1);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
192	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  <  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  <  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(f0  <  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    <    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
193	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(!inverted)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(!inverted)  {  return  f0;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(!inverted)  {  return  f0;  }	  final    double    f0    =    computeFunctionValue(x);    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
194	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(x,  rtol  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeValue(x,  rtol  +  1);	  final    double    fx    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
195	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
196	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  Object.class);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  Object.class);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x,  Object.class);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
197	[BUG]  [BUGGY]  final  double  f0  =  computeLongValue(x);  if(x  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeLongValue(x);  if(x  <  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeLongValue(x);  if(x  <  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    <    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
198	[BUG]  [BUGGY]  final  double  rtol  =  computeRelativeValue(x1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeRelativeValue(x1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeRelativeValue(x1);	  final    double    rtol    =    computeRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
199	[BUG]  [BUGGY]  final  double  rtol  =  computeRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeRelativeValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeRelativeValue(rtol);	  final    double    rtol    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
200	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f1));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f1));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    rtol));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
201	[BUG]  [BUGGY]  final  double  fx  =  calculateFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFallThrough(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFallThrough(rtol);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
202	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getFunctionValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getFunctionValue(x);	  final    double    f0    =    getFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
203	[BUG]  [BUGGY]  final  double  fx  =  computeObjective(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjective(x,  rtol  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjective(x,  rtol  +  1);	  final    double    fx    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
204	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  f1));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  f1));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
205	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (f1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (f1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (f1  -  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
206	[BUG]  [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeObjectiveValue(x,  f0);	  final    double    rtol    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
207	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(inverted)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(inverted)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
208	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(rtol,  x  +  1);	  final    double    fx    =    computeObjectiveValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
209	[BUG]  [BUGGY]  final  double  f0  =  computeNullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeNullValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeNullValue(rtol);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
210	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  false);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  false);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol,  false);	  final    double    f0    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
211	[BUG]  [BUGGY]  final  double  fx  =  x1  +((  f1  *  (f1  -  f0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  +((  f1  *  (f1  -  f0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  +((  f1  *  (f1  -  f0))/(f1  -  f0));	  final    double    fx    =    x    +((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
212	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  rtol,  inverted);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
213	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(x)+  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(x)+  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunction(x)+  1;	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
214	[BUG]  [BUGGY]  final  double  rtol  =  getFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getFunctionValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getFunctionValue(rtol);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
215	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(rtol,  f1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionValue(rtol,  f1);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
216	[BUG]  [BUGGY]  final  double  rtol  =  computeRelativeAccuracy(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeRelativeAccuracy(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeRelativeAccuracy(x);	  final    double    rtol    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
217	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFullValue(rtol,  x  +  1);	  final    double    fx    =    computeFullValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
218	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  >  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  >  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(x  >  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
219	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x);  if(f0  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x);  if(f0  <  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x);  if(f0  <  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
220	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  ==  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  ==  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(x  ==  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    ==    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
221	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  (f1  -  f0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  (f1  -  f0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  -((  f1  *  (f1  -  f0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
222	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  >  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(f0  >  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(f0  >  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
223	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(rtol,  inverted);	  final    double    fx    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
224	[BUG]  [BUGGY]  final  double  f0  =  computeFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFallThrough(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFallThrough(rtol);	  final    double    f0    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
225	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  >=  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x);  if(x  >=  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x);  if(x  >=  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >=    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
226	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy  +  1);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
227	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getRelativeAccuracy().computeValue(x);	  final    double    rtol    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
228	[BUG]  [BUGGY]  final  double  fx  =  getObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getObjectiveValue(x1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getObjectiveValue(x1);	  final    double    fx    =    getObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
229	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(x1);	  final    double    fx    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
230	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  Object.class);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  Object.class);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFullValue(x,  Object.class);	  final    double    f0    =    computeFullValue(x,    f1);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
231	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  y2);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  y2);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  y2);	  final    double    f0    =    computeObjectiveValue(x,    y1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
232	[BUG]  [BUGGY]  final  double  f0  =  Math.max(x  *  relativeAccuracy,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(x  *  relativeAccuracy,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  Math.max(x  *  relativeAccuracy,  inverted);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
233	[BUG]  [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx0));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
234	[BUG]  [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx1));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx1));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx1));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
235	[BUG]  [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  +((  f1  *(x1  -  x0))/(f1  -  fx));	  final    double    fx    =    x    +((    f1    *(x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
236	[BUG]  [BUGGY]  final  double  fx  =  calculateFunction(x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunction(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFunction(x);	  final    double    fx    =    computeFunction(rtol);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
237	[BUG]  [BUGGY]  final  double  rtol  =  computeFullValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeFullValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeFullValue(x,  rtol);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
238	[BUG]  [BUGGY]  final  double  rtol  =  computeFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeFullValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeFullValue(rtol);	  final    double    fx    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
239	[BUG]  [BUGGY]  if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  <  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  <  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  <  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    <    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
240	[BUG]  [BUGGY]  final  double  f0  =  calculateObjectiveValue(x,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateObjectiveValue(x,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  calculateObjectiveValue(x,  f1);	  final    double    f0    =    calculateObjectiveValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
241	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getFunctionValue(x1);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
242	[BUG]  [BUGGY]  if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  ==  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  ==  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  ==  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    ==    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
243	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  x0))/(f1  -  fx0));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  x0))/(f1  -  fx0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  -((  f1  *  x0))/(f1  -  fx0));	  final    double    fx    =    x1    -((    f1    *    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
244	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(f1  -  fx0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(f1  -  fx0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(f1  -  fx0));	  final    double    fx    =    x1    -((    f1    *    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
245	[BUG]  [BUGGY]  final  double  rtol  =  computeFunctionObjective(rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeFunctionObjective(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeFunctionObjective(rtol);	  final    double    fx    =    computeFunctionObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
246	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
247	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx1));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx1));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx1));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
248	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  fx0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    x0));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
249	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(x  >=  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x);  if(x  >=  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunctionValue(x);  if(x  >=  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >=    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
250	[BUG]  [BUGGY]  final  double  f0  =  computeObjective(x,  f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjective(x,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjective(x,  f1);	  final    double    f0    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
251	[BUG]  [BUGGY]  final  double  f0  =  computeFallThrough(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFallThrough(rtol,  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFallThrough(rtol,  x);	  final    double    f0    =    computeFunctionValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
252	[BUG]  [BUGGY]  final  double  f0  =  computeLongValue(x);  if(x  >  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeLongValue(x);  if(x  >  0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeLongValue(x);  if(x  >  0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(x    >    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
253	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(x,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(x,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeFunction(x,  f1);	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
254	[BUG]  [BUGGY]  final  double  rtol  =  calculateRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  calculateRelativeValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  calculateRelativeValue(rtol);	  final    double    fx    =    calculateRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
255	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateRelativeValue(x0);	  final    double    fx    =    calculateRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
256	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  fx);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  fx);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
257	[BUG]  [BUGGY]  final  double  rtol  =  calculateFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  calculateFullValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  calculateFullValue(rtol);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
258	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  calculateFullValue(x0);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
259	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  fx);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunctionValue(x,  fx);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
260	[BUG]  [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  x);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeObjectiveValue(x,  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeObjectiveValue(x,  x);	  final    double    rtol    =    computeObjectiveValue(x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
261	[BUG]  [BUGGY]  final  double  rtol  =  computeRelativeValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeRelativeValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeRelativeValue(x,  rtol);	  final    double    fx    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
262	[BUG]  [BUGGY]  final  double  fx  =  x.getText();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.getText();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x.getText();	  final    double    fx    =    x.getValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
263	[BUG]  [BUGGY]  final  double  fx  =  x.getLongValue();  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.getLongValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x.getLongValue();	  final    double    fx    =    x.getValue();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
264	[BUG]  [BUGGY]  final  double  rtol  =  getObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getObjectiveValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  getObjectiveValue(rtol);	  final    double    fx    =    getObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
265	[BUG]  [BUGGY]  final  double  rtol  =  computeInteger(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeInteger(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  computeInteger(rtol);	  final    double    rtol    =    computeObjective(rtol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
266	[BUG]  [BUGGY]  final  double  fx  =  computeObjective(x0,  x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjective(x0,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjective(x0,  x);	  final    double    fx    =    computeObjective(x);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
267	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(f1  -  fx));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(f1  -  fx));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(f1  -  fx));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
268	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(x1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFullValue(x1);	  final    double    fx    =    computeFullValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
269	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol  -  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol  -  1);	  final    double    f0    =    computeObjectiveValue(x,    rtol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
270	[BUG]  [BUGGY]  final  double  fx  =  getInteger(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getInteger(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  getInteger(rtol);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
271	[BUG]  [BUGGY]  final  double  fx  =  computeDouble(x);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeDouble(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeDouble(x);	  final    double    fx    =    computeInteger(rtol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
272	[BUG]  [BUGGY]  final  double  fx  =  computeFunction(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunction(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeFunction(rtol,  x);	  final    double    fx    =    computeObjective(rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
273	[BUG]  [BUGGY]  final  double  fx  =  computeObjective(rtol,  x0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjective(rtol,  x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeObjective(rtol,  x0);	  final    double    fx    =    computeObjective(rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
274	[BUG]  [BUGGY]  final  double  rtol  =  calculateFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  calculateFunctionValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  rtol  =  calculateFunctionValue(rtol);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
275	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(rtol,  x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(rtol,  x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  computeRelativeValue(rtol,  x0);	  final    double    fx    =    computeRelativeValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
276	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  rtol));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  rtol));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  fx  =  x0  -((  f1  *  (x1  -  x0))/(f1  -  rtol));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    rtol));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
277	[BUG]  [BUGGY]  if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  >  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  >  0.0)  {  return  x;  }  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	if(inverted)  {  final  double  f0  =  computeObjectiveValue(x);  if(f0  >  0.0)  {  return  x;  }	  final    double    f0    =    computeObjectiveValue(x);    if(f0    >    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
278	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy().floatValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getRelativeAccuracy().floatValue();  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  getRelativeAccuracy().floatValue();	  final    double    f0    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
279	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  f1,  inverted);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  f1,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol,  f1,  inverted);	  final    double    f0    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
280	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  f0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	162	162	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol,  f0);	  final    double    f0    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
