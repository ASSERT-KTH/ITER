bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x0  =  getMax();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x0  =  getMax();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x0  =  getMax();	      x0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  x0  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x0  =  getFunctionValue();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x0  =  getFunctionValue();	      x0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  x0  =  getMin()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x0  =  getMin()  +  1;  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x0  =  getMin()  +  1;	      x0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  double  f0  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeFunctionValue(x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeFunctionValue(x1);	  double    f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  double  f0  =  getFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  getFunctionValue(x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  getFunctionValue(x1);	  double    f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  double  f0  =  computeFullValue(x1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeFullValue(x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeFullValue(x1);	  double    f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  x1  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x1  =  getFunctionValue();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x1  =  getFunctionValue();	      x1    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  double  x1  =  getMin();  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  x1  =  getMin();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  x1  =  getMin();	      x1    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  if(x0  ==  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  ==  0.0)  {  return  x1;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  ==  0.0)  {  return  x1;  }	      if(x0    ==    0.0)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  if(x0  <  =  0.0)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  =  0.0)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  =  0.0)  {  return  max;  }	      if(x0    ==    0.0)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  if(x0!=  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0!=  0.0)  {  return  x1;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0!=  0.0)  {  return  x1;  }	      if(x0    ==    0.0)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  double  f0  =  computeFunctionValue(x2);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeFunctionValue(x2);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeFunctionValue(x2);	  double    f0    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  Double  f0  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  Double  f0  =  computeFunctionValue(x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	Double  f0  =  computeFunctionValue(x1);	  double    f0    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  if(x1  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x1  ==  0.0)  {  return  x0;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x1  ==  0.0)  {  return  x0;  }	      if(x1    ==    0.0)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  if(x1  <  =  0.0)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x1  <  =  0.0)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x1  <  =  0.0)  {  return  max;  }	      if(x1    ==    0.0)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  double  f0  =  getMax();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  getMax();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  getMax();	      double    f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  double  f0  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  getFunctionValue();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  getFunctionValue();	      double    f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  double  f0  =  getFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  getFunctionValue(x0);  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  getFunctionValue(x0);	      double    f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  double  f0  =  computeFunctionValue(x0,  x1);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeFunctionValue(x0,  x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeFunctionValue(x0,  x1);	  double    f0    =    computeObjectiveValue(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x0,  x1);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x0,  x1);  }  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x0,  x1);  }	  double    f0    =    computeObjectiveValue(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x0,  x1);  }  else  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x0,  x1);  }  else  {  return  x0;  }  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x0,  x1);  }  else  {  return  x0;  }	  double    f0    =    computeObjectiveValue(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  double  f0  =  computeFullValue(x2);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeFullValue(x2);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeFullValue(x2);	  double    f0    =    computeFullValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  Double  f0  =  computeFullValue(x1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  Double  f0  =  computeFullValue(x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	Double  f0  =  computeFullValue(x1);	  double    f0    =    computeFullValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x2);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x2);  }  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  ==  0.0)  {  double  f0  =  computeObjectiveValue(x2);  }	  double    f0    =    computeObjectiveValue(x2);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  if(x0  <  =  max)  {  if(x1  <  =  0.0)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  =  max)  {  if(x1  <  =  0.0)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  =  max)  {  if(x1  <  =  0.0)  {  return  max;  }	      if(x0    >    max)    {    if(x1    <    =    0.0)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  if(x0  >  x1)  {  if(x1  <  =  0.0)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  >  x1)  {  if(x1  <  =  0.0)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  >  x1)  {  if(x1  <  =  0.0)  {  return  max;  }	      if(x0    >    max)    {    if(x1    <    =    0.0)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  x1  =  getMax()  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x1  =  getMax()  +  1;  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x1  =  getMax()  +  1;	      x1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(x0  <  min  ||  x1  <  max)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  min  ||  x1  <  max)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  min  ||  x1  <  max)  {  return  max;  }	      if(x0    <    min)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  if(x0  <  min)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  min)  {  return  x1;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  min)  {  return  x1;  }	      if(x0    <    min)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  if(x1  <  min)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x1  <  min)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x1  <  min)  {  return  max;  }	      if(x0    <    min)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x1);  [CE]  ';'  expected  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f1  =  computeFunctionValue(x1);  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f1  =  computeFunctionValue(x1);	      double    f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  ';'  expected	5	None	replace
32	[BUG]  [BUGGY]  if(x1!=  0.0)  {  double  f1  =  computeObjectiveValue(x1);  }  [CE]  ';'  expected  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x1!=  0.0)  {  double  f1  =  computeObjectiveValue(x1);  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x1!=  0.0)  {  double  f1  =  computeObjectiveValue(x1);  }	      double    f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  ';'  expected	5	None	replace
33	[BUG]  [BUGGY]  if(x1  ==  0.0)  {  double  f1  =  computeObjectiveValue(x1);  }  [CE]  ';'  expected  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x1  ==  0.0)  {  double  f1  =  computeObjectiveValue(x1);  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x1  ==  0.0)  {  double  f1  =  computeObjectiveValue(x1);  }	      double    f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  ';'  expected	5	None	replace
34	[BUG]  [BUGGY]  double  f1  =  computeFunctionValue(x0);  [CE]  ';'  expected  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f1  =  computeFunctionValue(x0);  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f1  =  computeFunctionValue(x0);	      double    f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  ';'  expected	2	None	replace
35	[BUG]  [BUGGY]  double  f0  =  computeObjectiveValue(x0,  x2);  [CE]  ';'  expected  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeObjectiveValue(x0,  x2);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeObjectiveValue(x0,  x2);	  double    f0    =    computeObjectiveValue(x0,    x1);    	non-compiled	[CE]  ';'  expected	12	None	replace
36	[BUG]  [BUGGY]  Double  f0  =  computeObjectiveValue(x0,  x1);  [CE]  ';'  expected  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  Double  f0  =  computeObjectiveValue(x0,  x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	Double  f0  =  computeObjectiveValue(x0,  x1);	  double    f0    =    computeObjectiveValue(x0,    x1);    	non-compiled	[CE]  ';'  expected	12	None	replace
37	[BUG]  [BUGGY]  double  f0  =  computeIntegerValue(x1);  [CE]  ';'  expected  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeIntegerValue(x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeIntegerValue(x1);	  double    f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  ';'  expected	6	None	replace
38	[BUG]  [BUGGY]  if(x1!=  0.0)  {  return  max;  }  [CE]  ';'  expected  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x1!=  0.0)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x1!=  0.0)  {  return  max;  }	      if(x1    ==    0.0)    {    return    max;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
39	[BUG]  [BUGGY]  if(x0  >=  min)  {  return  max;  }  [CE]  ';'  expected  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  >=  min)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  >=  min)  {  return  max;  }	      if(x0    <    min)    {    return    max;    }    	non-compiled	[CE]  ';'  expected	15	None	replace
40	[BUG]  [BUGGY]  Double  f0  =  computeObjectiveValue(x0);  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  Double  f0  =  computeObjectiveValue(x0);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	Double  f0  =  computeObjectiveValue(x0);	  double    f0    =    computeObjectiveValue(x2);    	non-compiled	[CE]  ';'  expected	9	None	replace
41	[BUG]  [BUGGY]  if(x0  >  max)  {  if(x1  <  0.0)  {  return  max;  }  [CE]  ';'  expected  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  >  max)  {  if(x1  <  0.0)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  >  max)  {  if(x1  <  0.0)  {  return  max;  }	      if(x0    >    max)    {    if(x1    <    =    0.0)    {    return    max;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
42	[BUG]  [BUGGY]  if(x0  <  max)  {  if(x1  <  =  0.0)  {  return  max;  }  [CE]  ';'  expected  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  max)  {  if(x1  <  =  0.0)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  max)  {  if(x1  <  =  0.0)  {  return  max;  }	      if(x0    >    max)    {    if(x1    <    =    0.0)    {    return    max;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
43	[BUG]  [BUGGY]  if(x0  ==  0.0)  {  return  x0;  }  [CE]  ';'  expected  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  ==  0.0)  {  return  x0;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  ==  0.0)  {  return  x0;  }	      if(x0    ==    0.0)    {    return    max;    }    	non-compiled	[CE]  ';'  expected	11	None	replace
44	[BUG]  [BUGGY]  double  f0  =  computeFullValue(x0,  x1);  [CE]  ';'  expected  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  computeFullValue(x0,  x1);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  computeFullValue(x0,  x1);	  double    f0    =    computeFullValue(x0);    	non-compiled	[CE]  ';'  expected	8	None	replace
45	[BUG]  [BUGGY]  x0  =  getmax();  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x0  =  getmax();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x0  =  getmax();	      x0    =    getMin();    	non-compiled	[CE]  ';'  expected	4	None	replace
46	[BUG]  [BUGGY]  x1  =  getMin()  +  1;  [CE]  ';'  expected  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x1  =  getMin()  +  1;  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x1  =  getMin()  +  1;	      x1    =    getMin();    	non-compiled	[CE]  ';'  expected	1	None	replace
47	[BUG]  [BUGGY]  double  f1  =  computeObjectiveValue(x2);  [CE]  ';'  expected  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f1  =  computeObjectiveValue(x2);  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f1  =  computeObjectiveValue(x2);	      double    f1    =    computeObjectiveValue(x1);    	non-compiled	[CE]  ';'  expected	5	None	replace
48	[BUG]  [BUGGY]  double  x0  =  getMin();  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  x0  =  getMin();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  x0  =  getMin();	      x0    =    getMin();    	non-compiled	[CE]  ';'  expected	4	None	replace
49	[BUG]  [BUGGY]  Double  f0  =  computeFullValue(x0);  [CE]  ';'  expected  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  Double  f0  =  computeFullValue(x0);  [BUGGY]    double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	Double  f0  =  computeFullValue(x0);	  double    f0    =    computeFullValue(x0);    	non-compiled	[CE]  ';'  expected	8	None	replace
50	[BUG]  [BUGGY]  if(x0  <  min)  {  double  f1  =  computeObjectiveValue(x0);  }  [CE]  ';'  expected  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  min)  {  double  f1  =  computeObjectiveValue(x0);  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  min)  {  double  f1  =  computeObjectiveValue(x0);  }	      double    f1    =    computeObjectiveValue(x0);    	non-compiled	[CE]  ';'  expected	2	None	replace
51	[BUG]  [BUGGY]  x1  =  getmax();  [CE]  ';'  expected  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  x1  =  getmax();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	x1  =  getmax();	      x1    =    getMin();    	non-compiled	[CE]  ';'  expected	1	None	replace
52	[BUG]  [BUGGY]  double  f0  =  getFull();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  f0  =  getFull();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  f0  =  getFull();	      double    f0    =    getMin();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  if(x0  <  min  ||  x1  <  =  max)  {  return  max;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  min  ||  x1  <  =  max)  {  return  max;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  min  ||  x1  <  =  max)  {  return  max;  }	      if(x0    <    min)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  if(x0  <  min)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  if(x0  <  min)  {  return  x0;  }  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	if(x0  <  min)  {  return  x0;  }	      if(x0    <    min)    {    return    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
55	[BUG]  [BUGGY]  double  x1  =  getMax();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    protected  final  double  doSolve()  {  double  x0  =  getMin();  double  x1  =  getMax();    [BUGGY]  double  x1  =  getMax();  [BUGGY]    double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	133	133	1	replace	double  x1  =  getMax();	      x1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
