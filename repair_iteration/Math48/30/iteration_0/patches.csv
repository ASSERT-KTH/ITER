bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  double  f1  =  getMax();  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    final  double  f1  =  getMax();  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    final  double  f1  =  getMax();		non-compiled	[CE]  illegal  start  of  expression	62	None	add
2	[BUG]  [BUGGY]    if(f1  ==  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    if(f1  ==  0.0)  {  return  x1;  }  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    if(f1  ==  0.0)  {  return  x1;  }		non-compiled	[CE]  illegal  start  of  expression	62	None	add
3	[BUG]  [BUGGY]    if(f1  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    if(f1  ==  0.0)  {  return  x0;  }  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    if(f1  ==  0.0)  {  return  x0;  }		non-compiled	[CE]  illegal  start  of  expression	62	None	add
4	[BUG]  [BUGGY]    x1  =  getMax();  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    x1  =  getMax();  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    x1  =  getMax();		non-compiled	[CE]  illegal  start  of  expression	62	None	add
5	[BUG]  [BUGGY]    double  f1  =  getMax();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    double  f1  =  getMax();  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    double  f1  =  getMax();		non-compiled	[CE]  illegal  start  of  expression	62	None	add
6	[BUG]  [BUGGY]  if  (f1  ==  0.0  ||  f0  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]  if  (f1  ==  0.0  ||  f0  ==  0.0)  {  [BUGGY]  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f1  ==  0.0  ||  f0  ==  0.0)  {	if  (f1  ==  0.0)  {  	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
7	[BUG]  [BUGGY]    if(f1  ==  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    if(f1  ==  0.0)  {  return  f0;  }  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    if(f1  ==  0.0)  {  return  f0;  }		non-compiled	[CE]  illegal  start  of  expression	62	None	add
8	[BUG]  [BUGGY]    if(f0  >  0.0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    if(f0  >  0.0)  {  return  f1;  }  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    if(f0  >  0.0)  {  return  f1;  }		non-compiled	[CE]  illegal  start  of  expression	62	None	add
9	[BUG]  [BUGGY]  if  (f1!=  0.0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]  if  (f1!=  0.0)  {  [BUGGY]  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f1!=  0.0)  {	if  (f1  ==  0.0)  {  	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
10	[BUG]  [BUGGY]  if  (f1  ==  0.0  ||  f2  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]  if  (f1  ==  0.0  ||  f2  ==  0.0)  {  [BUGGY]  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f1  ==  0.0  ||  f2  ==  0.0)  {	if  (f1  ==  0.0)  {  	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
11	[BUG]  [BUGGY]    if(f1  <  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    if(f1  <  0.0)  {  return  x1;  }  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    if(f1  <  0.0)  {  return  x1;  }		non-compiled	[CE]  illegal  start  of  expression	62	None	add
12	[BUG]  [BUGGY]    if(f1  >  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]    if(f1  >  0.0)  {  return  x1;  }  [BUGGY]  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	    if(f1  >  0.0)  {  return  x1;  }		non-compiled	[CE]  illegal  start  of  expression	62	None	add
13	[BUG]  [BUGGY]  if(f1  ==  0.0  ||  f1  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]  if(f1  ==  0.0  ||  f1  ==  0.0)  {  [BUGGY]  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  ==  0.0  ||  f1  ==  0.0)  {	if  (f1  ==  0.0)  {  	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
14	[BUG]  [BUGGY]  if(f1  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]  if(f1  <  =  0.0)  {  [BUGGY]  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  =  0.0)  {	if  (f1  ==  0.0)  {  	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
15	[BUG]  [BUGGY]  if(f1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]  double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }  [BUGGY]  if(f1  <  0.0)  {  [BUGGY]  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  0.0)  {	if  (f1  ==  0.0)  {  	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
