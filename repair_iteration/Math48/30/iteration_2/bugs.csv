bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  f1  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  double  f1  =  getFunctionValue();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	double  f1  =  getFunctionValue();	      double    f1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  double  f1  =  getMin();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  double  f1  =  getMin();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	double  f1  =  getMin();	      double    f1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  if(f0  <  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  <  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  <  0.0)  {  return  x1;  }	      if(f1    <    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  if(f1  <  =  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  =  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  =  0.0)  {  return  x1;  }	      if(f1    <    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  if(f0  <  =  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  <  =  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  <  =  0.0)  {  return  x1;  }	      if(f1    <    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  if(f0  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  <  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  <  0.0)  {	  if(f1    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
7	[BUG]  [BUGGY]  if(f1  <  0.0  ||  f0  >  max)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  0.0  ||  f0  >  max)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  0.0  ||  f0  >  max)  {	  if(f1    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  if  (f1  <  0.0  ||  f2  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if  (f1  <  0.0  ||  f2  >  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f1  <  0.0  ||  f2  >  0.0)  {	  if    (f1    ==    0.0    ||    f2    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  if  (f0  ==  0.0  ||  f2  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if  (f0  ==  0.0  ||  f2  ==  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f0  ==  0.0  ||  f2  ==  0.0)  {	  if    (f1    ==    0.0    ||    f2    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  if(f0  <  0.0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  <  0.0)  {  return  f1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  <  0.0)  {  return  f1;  }	      if(f0    >    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  if(f0  ==  0.0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  ==  0.0)  {  return  f1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  ==  0.0)  {  return  f1;  }	      if(f0    >    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(f1  >  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  >  0.0)  {  return  f0;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  >  0.0)  {  return  f0;  }	      if(f0    >    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  if(f0  >  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  >  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  >  0.0)  {  return  x1;  }	      if(f0    >    0.0)    {    return    f1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  if  (f0  ==  0.0  ||  f1  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if  (f0  ==  0.0  ||  f1  ==  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f0  ==  0.0  ||  f1  ==  0.0)  {	  if    (f1    ==    0.0    ||    f0    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  if(f1  <  =  0.0  ||  f0  >  max)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  =  0.0  ||  f0  >  max)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  =  0.0  ||  f0  >  max)  {	  if(f1    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  if(f0  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  <  =  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  <  =  0.0)  {	  if(f1    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  if(f1  <  0.0  ||  f1  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  0.0  ||  f1  >  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  0.0  ||  f1  >  0.0)  {	  if(f1    ==    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  if(f0  ==  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  ==  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  ==  0.0)  {  return  x1;  }	      if(f1    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  ==  0.0  ||  f1  ==  0.0)  {  return  x1;  }	      if(f1    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  if(f0!=  0.0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0!=  0.0)  {  return  f1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0!=  0.0)  {  return  f1;  }	      if(f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  if(f0  <  =  0.0)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  <  =  0.0)  {  return  f1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  <  =  0.0)  {  return  f1;  }	      if(f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  final  double  f1  =  computeObjectiveValue(f0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  final  double  f1  =  computeObjectiveValue(f0);  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	final  double  f1  =  computeObjectiveValue(f0);	      if(f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  x1  =  getMin();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  x1  =  getMin();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	x1  =  getMin();	      x1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  x1  =  getMax()  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  x1  =  getMax()  +  1;  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	x1  =  getMax()  +  1;	      x1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  x1  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  x1  =  getFunctionValue();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	x1  =  getFunctionValue();	      x1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  if(f0!=  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0!=  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0!=  0.0)  {  return  x1;  }	      if(f1    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if(f0  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  ==  0.0)  {  return  x0;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  ==  0.0)  {  return  x0;  }	      if(f1    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  final  double  f1  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  final  double  f1  =  getFunctionValue();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	final  double  f1  =  getFunctionValue();	      final    double    f1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  final  double  f1  =  getMin();  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  final  double  f1  =  getMin();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	final  double  f1  =  getMin();	      final    double    f1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  final  double  f1  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  final  double  f1  =  getFunctionValueAccuracy();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	final  double  f1  =  getFunctionValueAccuracy();	      final    double    f1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  if  (f1!=  0.0  ||  f2  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if  (f1!=  0.0  ||  f2  ==  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f1!=  0.0  ||  f2  ==  0.0)  {	  if    (f1    ==    0.0    ||    f2    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  relativeAccuracy  =  getRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  relativeAccuracy  =  getRelativeAccuracy();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	relativeAccuracy  =  getRelativeAccuracy();	      if(f1    ==    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  final  double  f1  =  getRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  final  double  f1  =  getRelativeAccuracy();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	final  double  f1  =  getRelativeAccuracy();	      final    double    f1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  double  f1  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  double  f1  =  getFunctionValueAccuracy();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	double  f1  =  getFunctionValueAccuracy();	      double    f1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  if  (f1  <  0.0  ||  f0  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if  (f1  <  0.0  ||  f0  >  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if  (f1  <  0.0  ||  f0  >  0.0)  {	  if    (f1    ==    0.0    ||    f0    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  if(f0  ==  f1)  {  return  f1;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f0  ==  f1)  {  return  f1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f0  ==  f1)  {  return  f1;  }	      if(f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  relativeAccuracy  &&  f1  >  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  relativeAccuracy  &&  f1  >  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	relativeAccuracy  &&  f1  >  0.0)  {  return  x1;  }	      if(f1    >    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  x1  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  x1  =  getFunctionValueAccuracy();  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	x1  =  getFunctionValueAccuracy();	      x1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  if(f1  <  0.0  ||  f1  >  0.0)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  0.0  ||  f1  >  0.0)  {  return  x1;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  0.0  ||  f1  >  0.0)  {  return  x1;  }	      if(f1    <    0.0)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  x1  =  getMax()  +  f0;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  x1  =  getMax()  +  f0;  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	x1  =  getMax()  +  f0;	      x1    =    getMax();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  if(f1  <  =  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  =  0.0)  {  return  x0;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  =  0.0)  {  return  x0;  }	      if(f1    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  if(f1  >  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  >  0.0)  {  return  x0;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  >  0.0)  {  return  x0;  }	      if(f1    ==    0.0)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  if(f1  <  =  0.0  ||  f1  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  =  0.0  ||  f1  >  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  =  0.0  ||  f1  >  0.0)  {	  if(f1    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
44	[BUG]  [BUGGY]  if(f1  <  =  0.0  ||  f0  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  =  0.0  ||  f0  >  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  =  0.0  ||  f0  >  0.0)  {	  if(f1    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
45	[BUG]  [BUGGY]  if(f1  >  0.0  ||  f1  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  >  0.0  ||  f1  <  0.0)  {  [BUGGY]    return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  >  0.0  ||  f1  <  0.0)  {	  if(f1    ==    0.0    ||    f1    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  if(f1  <  =  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  =  0.0)  {  return  f0;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  =  0.0)  {  return  f0;  }	      if(f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  if(f1  <  0.0)  {  return  f0;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    double  x1  =  getMax();  double  f0  =  computeObjectiveValue(x0);  double  f1  =  computeObjectiveValue(x1);    if  (f0  ==  0.0)  {  return  x0;  }    [BUGGY]  if(f1  <  0.0)  {  return  f0;  }  [BUGGY]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	142	142	1	replace	if(f1  <  0.0)  {  return  f0;  }	      if(f1    ==    0.0)    {    return    f0;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
