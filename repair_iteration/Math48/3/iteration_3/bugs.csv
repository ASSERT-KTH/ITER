bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  rtol  =  getRoleAccuracy().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  rtol  =  getRoleAccuracy().doubleValue()  +  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRoleAccuracy().doubleValue()  +  1;	  final    double    rtol    =    getRoleAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  final  double  f0  =  Math.max(f0,  f1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.max(f0,  f1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.max(f0,  f1);	  final    double    f0    =    Math.max(f0,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  final  double  f0  =  Math.max(f0,  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.max(f0,  max);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.max(f0,  max);	  final    double    f0    =    Math.max(f0,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  final  double  f1  =  getFunctionValueAccuracy().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getFunctionValueAccuracy().doubleValue()  +  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getFunctionValueAccuracy().doubleValue()  +  1;	  final    double    f1    =    getFunctionValueAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  final  double  f1  =  getInitialFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getInitialFunctionValueAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getInitialFunctionValueAccuracy();	  final    double    f1    =    getInitialValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
6	[BUG]  [BUGGY]  final  double  f0  =  getFastFunctionValueAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getFastFunctionValueAccuracy().doubleValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFastFunctionValueAccuracy().doubleValue();	  final    double    f0    =    getFastFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
7	[BUG]  [BUGGY]  final  double  atol  =  getRelativeAccuracy()  /  ftol;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRelativeAccuracy()  /  ftol;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRelativeAccuracy()  /  ftol;	  final    double    atol    =    getRelativeAccuracy()    +    ftol;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  final  double  atol  =  getRelativeAccuracy()  *  ftol;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRelativeAccuracy()  *  ftol;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRelativeAccuracy()  *  ftol;	  final    double    atol    =    getRelativeAccuracy()    +    ftol;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  final  double  atol  =  getRelativeAccuracy()  +  fx;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRelativeAccuracy()  +  fx;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRelativeAccuracy()  +  fx;	  final    double    atol    =    getRelativeAccuracy()    +    ftol;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRawRelativeAccuracy();	  final    double    rtol    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  final  double  atol  =  getRawAnonymousAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawAnonymousAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawAnonymousAccuracy();	  final    double    atol    =    getAnonymousAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  final  double  atol  =  getRangeAnonymousAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRangeAnonymousAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRangeAnonymousAccuracy();	  final    double    atol    =    getAnonymousAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  final  double  f0  =  getAbsoluteFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getAbsoluteFunctionValueAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getAbsoluteFunctionValueAccuracy();	  final    double    f0    =    getAbsoluteAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  fTol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  fTol);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  fTol);	  final    double    f0    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  ftol)/  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  ftol)/  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  ftol)/  1;	  final    double    f0    =    Math.min(f0,    ftol)-    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
16	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  max)-  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  max)-  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  max)-  1;	  final    double    f0    =    Math.min(f0,    ftol)-    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
17	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  f1)-  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  f1)-  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  f1)-  1;	  final    double    f0    =    Math.min(f0,    ftol)-    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  ftol  *  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  ftol  *  1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  ftol  *  1);	  final    double    f0    =    Math.min(f0,    ftol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
19	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  max  +  1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  max  +  1);	  final    double    f0    =    Math.min(f0,    ftol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
20	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  ftol  +  1,  max);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  ftol  +  1,  max);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  ftol  +  1,  max);	  final    double    f0    =    Math.min(f0,    ftol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().intValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().intValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFunctionValueAccuracy().intValue();	  final    double    f0    =    getFunctionValueAccuracy().longValue();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
22	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().length();  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().length();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFunctionValueAccuracy().length();	  final    double    f0    =    getFunctionValueAccuracy().longValue();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
23	[BUG]  [BUGGY]  final  double  atol  =  getRawAssignedValueAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawAssignedValueAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawAssignedValueAccuracy();	  final    double    atol    =    getAssignedValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
24	[BUG]  [BUGGY]  final  double  rtol  =  getRightAccuracy();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  rtol  =  getRightAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRightAccuracy();	  final    double    rtol    =    getRuleAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
25	[BUG]  [BUGGY]  final  double  f1  =  getRelativeFunctionValueAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getRelativeFunctionValueAccuracy().doubleValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getRelativeFunctionValueAccuracy().doubleValue();	  final    double    f1    =    getRelativeFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  final  double  f1  =  getRelativeAccuracy().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getRelativeAccuracy().doubleValue()  +  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getRelativeAccuracy().doubleValue()  +  1;	  final    double    f1    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  final  double  atol  =  getAllowedSolution();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getAllowedSolution();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getAllowedSolution();	  final    double    atol    =    getAssignedSolution();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  final  double  atol  =  getRawAlternativeAccuracy();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawAlternativeAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawAlternativeAccuracy();	  final    double    atol    =    getAlternativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().doubleValue()  *  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().doubleValue()  *  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFunctionValueAccuracy().doubleValue()  *  1;	  final    double    f0    =    getFunctionValueAccuracy().doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  fx);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  fx);	  final    double    f0    =    Math.min(relativeAccuracy,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
31	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy,  ftol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy,  ftol);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.max(relativeAccuracy,  ftol);	  final    double    f0    =    Math.min(relativeAccuracy,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
32	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  max);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  max);	  final    double    f0    =    Math.min(relativeAccuracy,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
33	[BUG]  [BUGGY]  Final  double  rtol  =  getRoleAccuracy();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  Final  double  rtol  =  getRoleAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	Final  double  rtol  =  getRoleAccuracy();	  final    double    rtol    =    getRoleAccuracy()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  final  double  f0  =  Math.min(max,  f0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(max,  f0);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(max,  f0);	  final    double    f0    =    Math.min(f0,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  max);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  max);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  max);	  final    double    f0    =    Math.min(f0,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  max);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  max);	  final    double    f0    =    Math.min(f0,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  final  double  f0  =  Math.min(max,  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(max,  fx);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(max,  fx);	  final    double    f0    =    Math.min(max,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
38	[BUG]  [BUGGY]  final  double  f0  =  Math.min(max,  f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(max,  f1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(max,  f1);	  final    double    f0    =    Math.min(max,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
39	[BUG]  [BUGGY]  final  double  atol  =  getAbstractAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getAbstractAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getAbstractAccuracy();	  final    double    atol    =    getRawAbstractAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRelativeAccuracy().doubleValue()  +  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRelativeAccuracy().doubleValue()  +  1;	  final    double    f0    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  static  final  double  f0  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  static  final  double  f0  =  getFunctionValueAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	static  final  double  f0  =  getFunctionValueAccuracy();	  final    double    f0    =    getFunctionValueAccuracy()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
42	[BUG]  [BUGGY]  final  double  f0  =  getRawFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRawFunctionValueAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRawFunctionValueAccuracy();	  final    double    f0    =    getRawAbsoluteAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
43	[BUG]  [BUGGY]  final  double  rtol  =  getRoleAccuracy().longValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  rtol  =  getRoleAccuracy().longValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRoleAccuracy().longValue();	  final    double    rtol    =    getRoleAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
44	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  rtol  =  getRelativeAccuracy().doubleValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRelativeAccuracy().doubleValue();	  final    double    rtol    =    getRoleAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
45	[BUG]  [BUGGY]  final  double  f0  =  getLocalFunctionValueAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getLocalFunctionValueAccuracy().doubleValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getLocalFunctionValueAccuracy().doubleValue();	  final    double    f0    =    getLocalFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
46	[BUG]  [BUGGY]  final  double  f0  =  Math.min(ftol,  max);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(ftol,  max);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(ftol,  max);	  final    double    f0    =    Math.min(max,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
47	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  ftol);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  ftol);	  final    double    f0    =    Math.min(max,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  final  double  atol  =  getAlternativeAccuracy()  +  ftol;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getAlternativeAccuracy()  +  ftol;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getAlternativeAccuracy()  +  ftol;	  final    double    atol    =    getAlternativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy,  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy,  f1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FUNctionValueAccuracy,  f1);	  final    double    f0    =    Math.min(f0,    f1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  ftol)-  2;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  ftol)-  2;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  ftol)-  2;	  final    double    f0    =    Math.min(f0,    ftol)-    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
51	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  ftol)-  1L;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  ftol)-  1L;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  ftol)-  1L;	  final    double    f0    =    Math.min(f0,    ftol)-    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
52	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy().longValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRelativeAccuracy().longValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRelativeAccuracy().longValue();	  final    double    f0    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  final  double  atol  =  getRawAbsOLUTEAccuracy()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawAbsOLUTEAccuracy()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawAbsOLUTEAccuracy()  /  DEFAULT_ABSOLUTE_ACCURACY;	  final    double    atol    =    getRawAbsOLUTEAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
54	[BUG]  [BUGGY]  final  double  atol  =  getAbsOLUTEAccuracy();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getAbsOLUTEAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getAbsOLUTEAccuracy();	  final    double    atol    =    getRawAbsOLUTEAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
55	[BUG]  [BUGGY]  final  double  f0  =  getRelativeFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRelativeFunctionValueAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRelativeFunctionValueAccuracy();	  final    double    f1    =    getRelativeFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  final  double  f0  =  Math.max(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  ftol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.max(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  ftol);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.max(FunctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  ftol);	  final    double    f0    =    Math.max(f0,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  final  double  f0  =  Math.max(FunctionValueAccuracy.DEFAULT,  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.max(FunctionValueAccuracy.DEFAULT,  ftol);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.max(FunctionValueAccuracy.DEFAULT,  ftol);	  final    double    f0    =    Math.max(f0,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  final  double  f1  =  getFunctionValueAccuracy().longValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getFunctionValueAccuracy().longValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getFunctionValueAccuracy().longValue();	  final    double    f1    =    getFunctionValueAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
59	[BUG]  [BUGGY]  final  double  atol  =  getRawRelativeAccuracy()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawRelativeAccuracy()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawRelativeAccuracy()  /  DEFAULT_ABSOLUTE_ACCURACY;	  final    double    atol    =    getRawRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  final  double  atol  =  getRawRelativeAccuracy()  +  ftol;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawRelativeAccuracy()  +  ftol;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawRelativeAccuracy()  +  ftol;	  final    double    atol    =    getRawRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  final  double  atol  =  getRawAbstractAccuracy()  +  ftol;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawAbstractAccuracy()  +  ftol;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawAbstractAccuracy()  +  ftol;	  final    double    atol    =    getRawAbstractAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
62	[BUG]  [BUGGY]  final  double  f1  =  getRelativeAccuracy().longValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getRelativeAccuracy().longValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getRelativeAccuracy().longValue();	  final    double    f1    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
63	[BUG]  [BUGGY]  final  double  rtol  =  getRuleAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  rtol  =  getRuleAccuracy().doubleValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRuleAccuracy().doubleValue();	  final    double    rtol    =    getRuleAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
64	[BUG]  [BUGGY]  final  double  f0  =  getFastFunctionValueAccuracy()  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getFastFunctionValueAccuracy()  +  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFastFunctionValueAccuracy()  +  1;	  final    double    f0    =    getFastFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
65	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  ftol  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(f0,  ftol  -  1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  ftol  -  1);	  final    double    f0    =    Math.min(f0,    ftol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
66	[BUG]  [BUGGY]  final  double  f0  =  getActualFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getActualFunctionValueAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getActualFunctionValueAccuracy();	  final    double    f0    =    getInitialFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  final  double  atol  =  getAssignedSolution().getAssignedSolution();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getAssignedSolution().getAssignedSolution();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getAssignedSolution().getAssignedSolution();	  final    double    atol    =    getAssignedSolution();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  final  double  atol  =  getRawAssignedSolution();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawAssignedSolution();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawAssignedSolution();	  final    double    atol    =    getAssignedSolution();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().length;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().length;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFunctionValueAccuracy().length;	  final    double    f0    =    getFunctionValueAccuracy()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
70	[BUG]  [BUGGY]  final  double  atol  =  getAssignedValueAccuracy()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getAssignedValueAccuracy()  +  1;  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getAssignedValueAccuracy()  +  1;	  final    double    atol    =    getAssignedValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
71	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  fx1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  fx1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  fx1);	  final    double    f0    =    Math.min(relativeAccuracy,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
72	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  f1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  f1);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  f1);	  final    double    f0    =    Math.min(relativeAccuracy,    ftol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
73	[BUG]  [BUGGY]  final  double  f0  =  getAssignedValueAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getAssignedValueAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getAssignedValueAccuracy();	  final    double    atol    =    getAssignedValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
74	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  ftol)-  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  ftol)-  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  ftol)-  1;	  final    double    f0    =    Math.min(f0,    ftol)-    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
75	[BUG]  [BUGGY]  final  double  f1  =  getFunctionValueAccuracy().floatValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getFunctionValueAccuracy().floatValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getFunctionValueAccuracy().floatValue();	  final    double    f1    =    getFunctionValueAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  final  double  f0  =  getRawAbstractAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRawAbstractAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRawAbstractAccuracy();	  final    double    atol    =    getRawAbstractAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  final  double  f0  =  getRawRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRawRelativeAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRawRelativeAccuracy();	  final    double    atol    =    getRawRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
78	[BUG]  [BUGGY]  final  double  atol  =  getRawInitialValueAccuracy();  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getRawInitialValueAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getRawInitialValueAccuracy();	  final    double    atol    =    getRawRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy.MIN_VALUE,  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy.MIN_VALUE,  ftol);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FUNctionValueAccuracy.MIN_VALUE,  ftol);	  final    double    f0    =    Math.min(f0,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
80	[BUG]  [BUGGY]  final  double  f0  =  Math.min(MaximumFractionValueAccuracy,  ftol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  Math.min(MaximumFractionValueAccuracy,  ftol);  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(MaximumFractionValueAccuracy,  ftol);	  final    double    f0    =    Math.min(f0,    max);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy().floatValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRelativeAccuracy().floatValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRelativeAccuracy().floatValue();	  final    double    f0    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
82	[BUG]  [BUGGY]  final  double  f0  =  getVolumeAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getVolumeAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getVolumeAccuracy();	  final    double    f0    =    getAbsoluteAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  static  final  double  rtol  =  getRoleAccuracy();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  static  final  double  rtol  =  getRoleAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	static  final  double  rtol  =  getRoleAccuracy();	  final    double    rtol    =    getRoleAccuracy()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
84	[BUG]  [BUGGY]  final  double  f0  =  getAssignedSolution();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getAssignedSolution();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getAssignedSolution();	  final    double    atol    =    getAssignedSolution();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
85	[BUG]  [BUGGY]  final  double  atol  =  getLargerAssignedSolution();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  atol  =  getLargerAssignedSolution();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  atol  =  getLargerAssignedSolution();	  final    double    atol    =    getAssignedSolution();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
86	[BUG]  [BUGGY]  final  double  f0  =  getStandardFunctionValueAccuracy().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getStandardFunctionValueAccuracy().doubleValue()  +  1;  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getStandardFunctionValueAccuracy().doubleValue()  +  1;	  final    double    f0    =    getFunctionValueAccuracy().doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
87	[BUG]  [BUGGY]  final  double  f0  =  getAlternativeAccuracy();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getAlternativeAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getAlternativeAccuracy();	  final    double    atol    =    getAlternativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  final  double  f0  =  getFloatValueAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getFloatValueAccuracy();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFloatValueAccuracy();	  final    double    f0    =    getLocalFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  final  double  f0  =  getRawAbsOLUTEAccuracy();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f0  =  getRawAbsOLUTEAccuracy();  [BUGGY]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRawAbsOLUTEAccuracy();	  final    double    atol    =    getRawAbsOLUTEAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  final  double  f1  =  getRelativeAccuracy().floatValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();      [BUGGY]  final  double  f1  =  getRelativeAccuracy().floatValue();  [BUGGY]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getRelativeAccuracy().floatValue();	  final    double    f1    =    getRelativeAccuracy().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
