bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx));	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(f1));	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  ftol);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  ftol);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f1),  ftol);	      fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fx);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fx);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f0),  fx);	      fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  allowed);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  allowed);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f1),  allowed);	      fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fx);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f1),  fx);	      fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  x0  =  fx  +  1;  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  fx  +  1;  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx  +  1;	      x0    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  -  1);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  allowedSolution.length  -  1);	      fx    =    Math.min(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  +  1);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  allowedSolution.length  +  1);	      fx    =    Math.min(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
13	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  allowedSolution.length);	      fx    =    Math.min(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
14	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(max,  allowedSolution.length);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowedSolution.length);	      fx    =    Math.min(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
15	[BUG]  [BUGGY]  x1  =  Math.min(x1,  x0);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(x1,  x0);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  x0);	  x1    =    Math.min(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  x1  =  Math.min(x1,  x1);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(x1,  x1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  x1);	  x1    =    Math.min(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  x1  =  Math.max(x1,  x0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(x1,  x0);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x1,  x0);	  x1    =    Math.min(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length(),  allowedSolution);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  allowedSolution);	      fx    =    Math.min(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(fx.length(),  allowedSolution);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  allowedSolution);	      fx    =    Math.min(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  fx  =  Math.min(allowed.length(),  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(allowed.length(),  fx);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(allowed.length(),  fx);	      fx    =    Math.min(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(fx.length(),  allowed);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  allowed);	      fx    =    Math.min(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  x0  =  x;  fx  =  Math.abs(fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  x;  fx  =  Math.abs(fx);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  Math.abs(fx);	      if(fx!=    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  fx  =  Math.min(fx.getX(),  fx.getY()  -  1);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.getX(),  fx.getY()  -  1);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.getX(),  fx.getY()  -  1);	      fx    =    Math.min(fx.getX(),    fx.getY());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  fx  =  Math.max(fx.getX(),  fx.getY());  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(fx.getX(),  fx.getY());  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.getX(),  fx.getY());	      fx    =    Math.min(fx.getX(),    fx.getY());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  fx  =  Math.min(fx.getX(),  fx.getY()  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.getX(),  fx.getY()  +  1);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.getX(),  fx.getY()  +  1);	      fx    =    Math.min(fx.getX(),    fx.getY());    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax());  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax());  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.getMax());	  x1    =    Math.min(x0,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  x1  =  Math.min(x1,  allowedSolution.getMax());  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(x1,  allowedSolution.getMax());  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  allowedSolution.getMax());	  x1    =    Math.min(x0,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax());  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax());  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax());	  x1    =    Math.min(x0,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  x1  =  Math.min(exp,  allowedSolution.getMax());  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(exp,  allowedSolution.getMax());  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  allowedSolution.getMax());	  x1    =    Math.min(x0,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  x1  =  fx  +  1;  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  fx  +  1;  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx  +  1;	  x1    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  x1  =  fx.nextToken();  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  fx.nextToken();  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.nextToken();	  x1    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  x1  =  fx.getValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  fx.getValue();  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getValue();	  x1    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  x0  =  x  +  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  x  +  1;  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x  +  1;	      x0    =    x;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  x0  =  x1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  x1;  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x1;	      x0    =    x;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  x1  =  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  1;  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  1;	  x1    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  x1  =  0L;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  0L;  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  0L;	  x1    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  x1  =  Math.min(x1,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(x1,  allowedSolution.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  allowedSolution.length);	  x1    =    Math.min(x0,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(max,  allowedSolution.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.length);	  x1    =    Math.min(x0,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  x1  =  Math.min(x0,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(x0,  allowedSolution.length  -  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x0,  allowedSolution.length  -  1);	  x1    =    Math.min(x0,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  x1  =  Math.min(exp,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(exp,  allowedSolution.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  allowedSolution.length);	  x1    =    Math.min(x0,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  allowedSolution);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  allowedSolution);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  fx  =  Math.min(len,  fx.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(len,  fx.length);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(len,  fx.length);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowed);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(max,  allowed);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowed);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  fx  =  Math.abs(fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.abs(fx);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.abs(fx);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  allowed.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length(),  allowed.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  allowed.length);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length,  fx.length);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  fx  =  Math.min(fx,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx,  allowedSolution.length);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  allowedSolution.length);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  if(false!=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(false!=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  if(false  ==  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(false  ==  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  ==  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  if(false  ==  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(false  ==  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  ==  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fx  ==  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  if(false!=  false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(false!=  false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  if(false  ==  false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(false  ==  false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  ==  false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  x0  =  Math.min(x0,  fx);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  Math.min(x0,  fx);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  Math.min(x0,  fx);	      x0    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowed.length);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(fx,  allowed.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx,  allowed.length);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  x1  =  Math.min(allowedSolution,  x0.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(allowedSolution,  x0.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(allowedSolution,  x0.length);	  x1    =    Math.min(x0,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  x1  =  fx.getX();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  fx.getX();  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getX();	  x1    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
66	[BUG]  [BUGGY]  x1  =  Math.min(x0,  x1)-  1;  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(x0,  x1)-  1;  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x0,  x1)-  1;	  x1    =    Math.min(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  1);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  relativeAccuracy);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(allowedSolution.length,  fx.length);	      fx    =    Math.min(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  if(false!=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(false!=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  if(false  ==  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(false  ==  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  ==  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  x1  =  Math.min(x0,  max);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(x0,  max);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x0,  max);	  x1    =    Math.min(x0,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length(),  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(leftedSolution.length(),  fx);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length(),  fx);	      fx    =    Math.min(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length(),  1);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  1);	      fx    =    Math.min(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
75	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  f1);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  f1);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx),  f1);	      fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  fx);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  fx);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f2),  fx);	      fx    =    Math.max(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  x1  =(inverted?  1  :  0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =(inverted?  1  :  0);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =(inverted?  1  :  0);	  x1    =    0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  x1  =  fx.getStartValue();  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  fx.getStartValue();  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getStartValue();	  x1    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  x0  =  fx  -  1;  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x0  =  fx  -  1;  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx  -  1;	      x0    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  LEFT_SIDE);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length(),  LEFT_SIDE);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  LEFT_SIDE);	      fx    =    Math.min(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
81	[BUG]  [BUGGY]  if(x!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(x!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(x!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax());  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax());  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax());	  x1    =    Math.min(x0,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  ftol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  ftol);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f1),  ftol);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(FastMath.abs(fx));  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx));	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  fx  =  Math.min(leniedSolution.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(leniedSolution.length,  fx.length);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leniedSolution.length,  fx.length);	      fx    =    Math.min(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
86	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.length);	  x1    =    Math.min(x0,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
87	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowed);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.max(fx.length,  allowed);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  allowed);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  leftSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  fx  =  Math.min(fx.length,  leftSolution);  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  leftSolution);	      fx    =    Math.min(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fx  ==  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
90	[BUG]  [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]    x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fx  ==  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	      if(fx!=    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
91	[BUG]  [BUGGY]  x1  =  Math.max(x1,  x1);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }      [BUGGY]  x1  =  Math.max(x1,  x1);  [BUGGY]    f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x1,  x1);	  x1    =    Math.min(x0,    x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
