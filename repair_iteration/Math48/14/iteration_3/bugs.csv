bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x1  =  Math.min(x0.length,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x0.length,  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x0.length,  allowedSolution.length);	  x1    =    Math.min(allowedSolution,    x0.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
2	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)+  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)+  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)+  1);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(fx));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(fx));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(fx));	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  fx  =  Math.min(fx.getX()  +  1,  fx.getY()  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.getX()  +  1,  fx.getY()  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.getX()  +  1,  fx.getY()  +  1);	  fx    =    Math.min(fx.getX(),    fx.getY()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
6	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  max);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
7	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  allowedSolution  +  1);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
8	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution,  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution,  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  allowedSolution,  max);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
9	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  ftol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  ftol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f0),  ftol);	  fx    =    Math.max(FastMath.abs(f0),    fx);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f0),  max);	  fx    =    Math.max(FastMath.abs(f0),    fx);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fTol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  fTol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f0),  fTol);	  fx    =    Math.max(FastMath.abs(f0),    fx);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  allowedSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f1),  allowedSolution);	  fx    =    Math.max(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  max);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f1),  max);	  fx    =    Math.max(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  double  x1  =  0L;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  double  x1  =  0L;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	double  x1  =  0L;	  x1    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
15	[BUG]  [BUGGY]  fx  =  Math.max(fx.getX(),  fx.getY()  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.getX(),  fx.getY()  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.getX(),  fx.getY()  -  1);	  fx    =    Math.max(fx.getX(),    fx.getY());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
16	[BUG]  [BUGGY]  fx  =  Math.max(fx.getX(),  fx.getY()  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.getX(),  fx.getY()  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.getX(),  fx.getY()  +  1);	  fx    =    Math.max(fx.getX(),    fx.getY());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
17	[BUG]  [BUGGY]  x1  =  Math.min(x1,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  allowedSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  allowedSolution.length  -  1);	  x1    =    Math.min(x0,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
18	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  allowedSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.length  -  1);	  x1    =    Math.min(x0,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
19	[BUG]  [BUGGY]  x1  =  Math.min(exp,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(exp,  allowedSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  allowedSolution.length  -  1);	  x1    =    Math.min(x0,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
20	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax()  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax()  -  1);	  x1    =    Math.min(relativeAccuracy,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
21	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy,  max);	  x1    =    Math.min(relativeAccuracy,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
22	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy,  max.getMax());  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy,  max.getMax());  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy,  max.getMax());	  x1    =    Math.min(relativeAccuracy,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
23	[BUG]  [BUGGY]  fx  =  Math.min(max,  fx.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  fx.length);	  fx    =    Math.min(len,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
24	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  len);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  len);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  len);	  fx    =    Math.min(len,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
25	[BUG]  [BUGGY]  fx  =  Math.min(len,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(len,  fx.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(len,  fx.length  -  1);	  fx    =    Math.min(len,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
26	[BUG]  [BUGGY]  fx  =  Math.min(fx,  len.length);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  len.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  len.length);	  fx    =    Math.min(len,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
27	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowed.length(),  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  allowed.length(),  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowed.length(),  fx);	  fx    =    Math.min(allowed.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
28	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx).length(),  allowed);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx).length(),  allowed);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx).length(),  allowed);	  fx    =    Math.min(allowed.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
29	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  x1    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
30	[BUG]  [BUGGY]  x1  =  Math.min(max,  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);	  x1    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
31	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);	  x1    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
32	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowedSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx),  allowedSolution.length);	  fx    =    Math.min(allowedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
33	[BUG]  [BUGGY]  x1  =  fx.getEndValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getEndValue();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getEndValue();	  x1    =    fx.getStartValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
34	[BUG]  [BUGGY]  x1  =  fx.getStartValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getStartValue()  +  1;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getStartValue()  +  1;	  x1    =    fx.getStartValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
35	[BUG]  [BUGGY]  x1  =  fx.getExpression();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getExpression();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getExpression();	  x1    =    fx.getStartValue();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
36	[BUG]  [BUGGY]  x1  =(fx?  1  :  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =(fx?  1  :  0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =(fx?  1  :  0);	  x1    =(inverted?    1    :    0);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
37	[BUG]  [BUGGY]  x1  =(allowed?  1  :  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =(allowed?  1  :  0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =(allowed?  1  :  0);	  x1    =(inverted?    1    :    0);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
38	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  max);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
39	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx),  inverted);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
40	[BUG]  [BUGGY]  fx  =  Math.max(len,  fx.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(len,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(len,  fx.length);	  fx    =    Math.max(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
41	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx,  allowedSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx,  allowedSolution.length);	  fx    =    Math.max(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
42	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  max);	  fx    =    Math.min(fx.length(),    LEFT_SIDE);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
43	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  LEFT_SIDE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  LEFT_SIDE);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  LEFT_SIDE);	  fx    =    Math.min(fx.length(),    LEFT_SIDE);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
44	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  MAX_SIDE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  MAX_SIDE);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  MAX_SIDE);	  fx    =    Math.min(fx.length(),    LEFT_SIDE);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
45	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  allowed);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f0),  allowed);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f0),  allowed);	  fx    =    Math.max(FastMath.abs(f1),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  allowed);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f1),  allowed);	  fx    =    Math.max(FastMath.abs(f1),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  leftSolution);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  leftSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f1),  leftSolution);	  fx    =    Math.max(FastMath.abs(f1),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  x0  =  x;  fx  =  Math.abs(fx  +  1);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x;  fx  =  Math.abs(fx  +  1);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  Math.abs(fx  +  1);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
49	[BUG]  [BUGGY]  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	  x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
50	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowed);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowed);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx),  allowed);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
51	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  allowedSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx),  allowedSolution);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
52	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx),  max);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  ftol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  ftol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx),  ftol);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
54	[BUG]  [BUGGY]  x0  =  fx  +  2;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  fx  +  2;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx  +  2;	  x0    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  1);	  fx    =    Math.max(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
56	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  max);	  fx    =    Math.max(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
57	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  MAX_SIDE);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  MAX_SIDE);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  MAX_SIDE);	  fx    =    Math.max(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f0),  fx);	  fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f1),  max);	  fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  2);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  2);	  fx    =    Math.min(fx.length(),    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
61	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  3);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  3);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  3);	  fx    =    Math.min(fx.length(),    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
62	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  4);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  4);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  4);	  fx    =    Math.min(fx.length(),    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
63	[BUG]  [BUGGY]  if(false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  x0  =  x1;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x1;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x1;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  x1  =  fx.getX()  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getX()  +  1;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getX()  +  1;	  x1    =    fx.getX();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
66	[BUG]  [BUGGY]  x1  =  fx.getMax();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getMax();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getMax();	  x1    =    fx.getX();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
67	[BUG]  [BUGGY]  if(false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false    ==    false)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
68	[BUG]  [BUGGY]  if(false  ==  true)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false  ==  true)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  ==  true)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false    ==    false)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
69	[BUG]  [BUGGY]  x0  =  x  -  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x  -  1;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x  -  1;	  x0    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
70	[BUG]  [BUGGY]  x0  =  fx  /  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  fx  /  1;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx  /  1;	  x0    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
71	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax()  -  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax()  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.getMax()  -  1);	  x1    =    Math.min(max,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
72	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax()  -  min);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax()  -  min);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.getMax()  -  min);	  x1    =    Math.min(max,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
73	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax()  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  allowedSolution.getMax()  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.getMax()  +  1);	  x1    =    Math.min(max,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
74	[BUG]  [BUGGY]  x0  =  fx;  fx  =  Math.abs(fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  fx;  fx  =  Math.abs(fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx;  fx  =  Math.abs(fx);	  x0    =    x;    fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
75	[BUG]  [BUGGY]  x0  =  x;  fx  =  Math.abs(fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x;  fx  =  Math.abs(fx  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  Math.abs(fx  +  1);	  x0    =    x;    fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
76	[BUG]  [BUGGY]  if(fx!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(fx!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fx!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  }	  x0    =    x;    fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
77	[BUG]  [BUGGY]  x1  =  Math.max(x0,  x1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(x0,  x1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x0,  x1);	  x1    =    Math.max(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
78	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowed.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx,  allowed.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx,  allowed.length  -  1);	  fx    =    Math.max(fx,    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
79	[BUG]  [BUGGY]  fx  =  Math.min(fx,  allowed.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  allowed.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  allowed.length);	  fx    =    Math.max(fx,    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
80	[BUG]  [BUGGY]  fx  =  Math.max(fx,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx,  leftSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx,  leftSolution.length);	  fx    =    Math.max(fx,    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
81	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy);	  x1    =    Math.min(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
82	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  inverted);	  x1    =    Math.min(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  1);	  x1    =    Math.min(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  x1  =  Math.min(x1,  allowedSolution.getMax()  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  allowedSolution.getMax()  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  allowedSolution.getMax()  -  1);	  x1    =    Math.min(x1,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
85	[BUG]  [BUGGY]  x1  =  Math.min(x1,  max.getMax());  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  max.getMax());  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  max.getMax());	  x1    =    Math.min(x1,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
86	[BUG]  [BUGGY]  x1  =  Math.min(x1,  x0)-  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  x0)-  1;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  x0)-  1;	  x1    =    Math.min(x0,    x1)-    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
87	[BUG]  [BUGGY]  x1  =  Math.min(x1,  x1)-  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  x1)-  1;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  x1)-  1;	  x1    =    Math.min(x0,    x1)-    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
88	[BUG]  [BUGGY]  x1  =  Math.min(x0,  x1)/  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x0,  x1)/  1;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x0,  x1)/  1;	  x1    =    Math.min(x0,    x1)-    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
89	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.length  -  1);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
90	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.length  +  1);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
91	[BUG]  [BUGGY]  x1  =  Math.min(max,  relativeAccuracy  *  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  relativeAccuracy  *  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  relativeAccuracy  *  allowedSolution.length);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
92	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  allowedSolution.length);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
93	[BUG]  [BUGGY]  fx  =  Math.min(fx,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  max);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
94	[BUG]  [BUGGY]  fx  =  Math.min(fx,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  allowedSolution.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  allowedSolution.length  -  1);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
95	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowedSolution.length  -  1);	  fx    =    Math.min(max,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
96	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowedSolution.length  +  1);	  fx    =    Math.min(max,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
97	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  -  min);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  allowedSolution.length  -  min);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowedSolution.length  -  min);	  fx    =    Math.min(max,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
98	[BUG]  [BUGGY]  fx  =  Math.min(max,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  leftSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  leftSolution.length);	  fx    =    Math.min(max,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
99	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  allowedSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowedSolution);	  fx    =    Math.min(max,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
100	[BUG]  [BUGGY]  fx  =  Math.max(max,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(max,  allowedSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(max,  allowedSolution);	  fx    =    Math.min(max,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
101	[BUG]  [BUGGY]  fx  =  Math.min(max,  leftSolution);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  leftSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  leftSolution);	  fx    =    Math.min(max,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
102	[BUG]  [BUGGY]  fx  =  Math.min(max,  allowedSolution;  [CE]  illegal  start  of  expression  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  allowedSolution;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  allowedSolution;	  fx    =    Math.min(max,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
103	[BUG]  [BUGGY]  x1  =  Math.min(x1,  y0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  y0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  y0);	  x1    =    Math.min(x1,    x0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
104	[BUG]  [BUGGY]  x1  =  Math.min(x1,  y1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  y1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  y1);	  x1    =    Math.min(x1,    x0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  fx  =  Math.min(leniedSolution.length,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leniedSolution.length,  allowedSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leniedSolution.length,  allowedSolution.length);	  fx    =    Math.min(leniedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
106	[BUG]  [BUGGY]  x1  =  fx.getText();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getText();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getText();	  x1    =    fx.getValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
107	[BUG]  [BUGGY]  x1  =  fx.getXValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getXValue();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getXValue();	  x1    =    fx.getValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
108	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  allowedSolution.length  -  1);	  fx    =    Math.max(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
109	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  allowedSolution.length  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  allowedSolution.length  +  1);	  fx    =    Math.max(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
110	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx));	  fx    =    Math.min(FastMath.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
111	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)+  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx)+  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx)+  1);	  fx    =    Math.min(FastMath.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
112	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)-  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx)-  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx)-  1);	  fx    =    Math.min(FastMath.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
113	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx)/  2);	  fx    =    Math.min(FastMath.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
114	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  leftedSolution);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  leftedSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  leftedSolution);	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
115	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  leftedSolution.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  leftedSolution.length());  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  leftedSolution.length());	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
116	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length(),  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length(),  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length(),  max);	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
117	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length(),  allowed);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length(),  allowed);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length(),  allowed);	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
118	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  inverted);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  inverted);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
119	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  doubleValueAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  doubleValueAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  doubleValueAccuracy);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
120	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  +  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  +  2);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  allowedSolution.length  +  2);	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
121	[BUG]  [BUGGY]  if(false!=  true)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false!=  true)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  true)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false!=    false)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
122	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  -  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution.length  -  2);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  allowedSolution.length  -  2);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
123	[BUG]  [BUGGY]  x0  =  Math.min(x0,  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  Math.min(x0,  f1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  Math.min(x0,  f1);	  x0    =    Math.min(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
124	[BUG]  [BUGGY]  x0  =  Math.min(x1,  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  Math.min(x1,  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  Math.min(x1,  fx);	  x0    =    Math.min(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
125	[BUG]  [BUGGY]  x0  =  Math.min(max,  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  Math.min(max,  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  Math.min(max,  fx);	  x0    =    Math.min(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
126	[BUG]  [BUGGY]  x1  =  Math.min(x1,  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  allowedSolution.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  allowedSolution.length  +  1);	  x1    =    Math.min(x1,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
127	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  maximum);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  maximum);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  maximum);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
128	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  allowedSolution.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.length  +  1);	  x1    =    Math.min(max,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
129	[BUG]  [BUGGY]  x1  =  Math.min(max,  allowedSolution.length  -  min);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  allowedSolution.length  -  min);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  allowedSolution.length  -  min);	  x1    =    Math.min(max,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
130	[BUG]  [BUGGY]  fx  =  Math.min(leftSolution,  fx.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftSolution,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftSolution,  fx.length);	  fx    =    Math.min(fx.length,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
131	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  leftSolution);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  leftSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx),  leftSolution);	  fx    =    Math.min(fx.length,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
132	[BUG]  [BUGGY]  if(false!=  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false!=  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	  if(false!=    false)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
133	[BUG]  [BUGGY]  fx  =  Math.abs(fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.abs(fx  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.abs(fx  +  1);	  fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
134	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx,  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx,  allowedSolution);	  fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
135	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  leftedSolution.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  leftedSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  leftedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
136	[BUG]  [BUGGY]  fx  =  Math.min(fx,  leftedSolution.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  leftedSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  leftedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
137	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length,  allowedSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length,  allowedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
138	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  leftedSolution.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  leftedSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  leftedSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
139	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  allowedSolution);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  allowedSolution);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f1),  allowedSolution);	  fx    =    Math.min(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
140	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  ftol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(f0),  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f0),  ftol);	  fx    =    Math.min(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
141	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  relativeAccuracy  +  1);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
142	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted  +  1);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
143	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  +  2);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
144	[BUG]  [BUGGY]  x0  =  x  +  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x  +  2;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x  +  2;	  x0    =    x    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
145	[BUG]  [BUGGY]  x0  =  x1  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x1  +  1;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x1  +  1;	  x0    =    x    +    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
146	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy  +  1);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
147	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1,  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1,  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
148	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
149	[BUG]  [BUGGY]  x1  =  Math.min(exp,  allowedSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(exp,  allowedSolution.length  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  allowedSolution.length  +  1);	  x1    =    Math.min(exp,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
150	[BUG]  [BUGGY]  x1  =  Math.min(exp,  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(exp,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  max);	  x1    =    Math.min(exp,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
151	[BUG]  [BUGGY]  x1  =  Math.min(max,  x0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  x0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  x0);	  x1    =    Math.min(x0,    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
152	[BUG]  [BUGGY]  x1  =  Math.max(max,  x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(max,  x0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(max,  x0);	  x1    =    Math.min(x0,    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
153	[BUG]  [BUGGY]  x1  =  Math.min(MaximumFractionValue,  max);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(MaximumFractionValue,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(MaximumFractionValue,  max);	  x1    =    Math.min(x0,    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
154	[BUG]  [BUGGY]  x1  =  0.0;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  0.0;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  0.0;	  x1    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
155	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted,  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  inverted,  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
156	[BUG]  [BUGGY]  x1  =  Math.min(exp,  allowedSolution.getMax()  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(exp,  allowedSolution.getMax()  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  allowedSolution.getMax()  -  1);	  x1    =    Math.min(exp,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
157	[BUG]  [BUGGY]  x1  =  fx  +  1L;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx  +  1L;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx  +  1L;	  x1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
158	[BUG]  [BUGGY]  x1  =  fx  +  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx  +  2;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx  +  2;	  x1    =    fx    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
159	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution,  max);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  allowedSolution,  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  allowedSolution,  max);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
160	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  max);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  max);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
161	[BUG]  [BUGGY]  x1  =  Math.max(x1,  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(x1,  fx);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x1,  fx);	  x1    =    Math.max(x1,    x0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
162	[BUG]  [BUGGY]  x1  =  Math.max(x0,  x1,  x1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(x0,  x1,  x1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x0,  x1,  x1);	  x1    =    Math.max(x1,    x0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
163	[BUG]  [BUGGY]  if(false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	  x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
164	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  allowedSolution  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  allowedSolution  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  allowedSolution  +  1);	  fx    =    Math.max(fx.length(),    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
165	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax(),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax(),  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax(),  absoluteAccuracy);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
166	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax()  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax()  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax()  +  1);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
167	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax()  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.getMax()  -  1);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
168	[BUG]  [BUGGY]  if(false!=  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false!=  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false!=    false)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
169	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  allowed.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  allowed.length  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  allowed.length  -  1);	  fx    =    Math.min(fx.length(),    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
170	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  allowedSolution.length);	  fx    =    Math.min(fx.length(),    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
171	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  allowed.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  allowed.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  allowed.length);	  fx    =    Math.min(fx.length(),    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
172	[BUG]  [BUGGY]  fx  =  Math.min(allowed.length(),  fx.length);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(allowed.length(),  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(allowed.length(),  fx.length);	  fx    =    Math.min(fx.length(),    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
173	[BUG]  [BUGGY]  x1  =  fx.nextToken()  +  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.nextToken()  +  1;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.nextToken()  +  1;	  x1    =    fx.nextToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
174	[BUG]  [BUGGY]  fx  =  Math.abs(fx  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.abs(fx  -  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.abs(fx  -  1);	  fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
175	[BUG]  [BUGGY]  fx  =  Math.min(fx,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  leftSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  leftSolution.length);	  fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
176	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowed.length());  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  allowed.length());  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx),  allowed.length());	  fx    =    Math.min(allowed.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
177	[BUG]  [BUGGY]  fx  =  Math.min(allowed.length(),  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(allowed.length(),  fx  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(allowed.length(),  fx  +  1);	  fx    =    Math.min(allowed.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
178	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  false);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  false);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  false);	  fx    =    Math.max(fx.length(),    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
179	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  ftol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx),  ftol);	  fx    =    Math.min(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
180	[BUG]  [BUGGY]  fx  =  Math.min(allowedSolution.length(),  fx.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(allowedSolution.length(),  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(allowedSolution.length(),  fx.length);	  fx    =    Math.min(fx.length(),    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
181	[BUG]  [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftSolution.length,  fx.length  +  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
182	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  leftSolution.length  +  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
183	[BUG]  [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(allowedSolution.length,  fx.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(allowedSolution.length,  fx.length  -  1);	  fx    =    Math.min(allowedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
184	[BUG]  [BUGGY]  if(false  ==  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false  ==  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  ==  true)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false!=    false)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
185	[BUG]  [BUGGY]  x1  =  Math.min(exp,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(exp,  leftSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  leftSolution.length);	  x1    =    Math.min(exp,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
186	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx),  f1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx),  f1);	  fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
187	[BUG]  [BUGGY]  x1  =  Math.min(Maximum,  x0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(Maximum,  x0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(Maximum,  x0);	  x1    =    Math.min(x0,    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
188	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy);	  x1    =    Math.min(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
189	[BUG]  [BUGGY]  fx  =  Math.min(fx,  fx.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  fx.length);	  fx    =    Math.min(len,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
190	[BUG]  [BUGGY]  fx  =  Math.max(fx,  fx.length);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx,  fx.length);	  fx    =    Math.min(len,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
191	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
192	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1,  fx),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1,  fx),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1,  fx),  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
193	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  false);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  false);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  false);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
194	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  flen);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  flen);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  flen);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
195	[BUG]  [BUGGY]  x1  =  Math.min(allowedSolution.length,  max);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(allowedSolution.length,  max);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(allowedSolution.length,  max);	  x1    =    Math.min(max,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
196	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  absoluteAccuracy  +  1);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
197	[BUG]  [BUGGY]  fx  =  Math.min(fx,  flen);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  flen);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  flen);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
198	[BUG]  [BUGGY]  x1  =  Math.min(max,  leftSolution.getMax());  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  leftSolution.getMax());  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  leftSolution.getMax());	  x1    =    Math.min(max,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
199	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(fx),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(fx),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(fx),  relativeAccuracy);	  x1    =    Math.min(relativeAccuracy    *    Math.abs(f1));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
200	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length(),  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length(),  fx  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length(),  fx  +  1);	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
201	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length(),  allowedSolution.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length(),  allowedSolution.length());  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length(),  allowedSolution.length());	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
202	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  ftol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f2),  ftol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f2),  ftol);	  fx    =    Math.max(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
203	[BUG]  [BUGGY]  if(!inverted)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(!inverted)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(!inverted)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	  if(false    ==    true)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
204	[BUG]  [BUGGY]  if(false  >=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false  >=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  >=  false)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	  if(false    ==    true)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
205	[BUG]  [BUGGY]  x1  =  Math.min(x1,  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  f1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  f1);	  x1    =    Math.min(x1,    x0);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
206	[BUG]  [BUGGY]  fx  =  Math.min(leniedSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leniedSolution.length,  fx.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leniedSolution.length,  fx.length  -  1);	  fx    =    Math.min(leniedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
207	[BUG]  [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftSolution.length,  fx.length);	  fx    =    Math.min(leniedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
208	[BUG]  [BUGGY]  fx  =  Math.min(leftSolution,  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftSolution,  max);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftSolution,  max);	  fx    =    Math.min(max,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
209	[BUG]  [BUGGY]  x1  =  Math.max(x0,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(x0,  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x0,  allowedSolution.length);	  x1    =    Math.min(allowedSolution,    x0.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
210	[BUG]  [BUGGY]  x1  =  Math.min(x1,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  leftSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  leftSolution.length);	  x1    =    Math.min(x1,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
211	[BUG]  [BUGGY]  x1  =  Math.min(x1,  fx.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  fx.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  fx.length);	  x1    =    Math.min(x1,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
212	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  left);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  left);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx),  left);	  fx    =    Math.max(FastMath.abs(f2),    fx);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
213	[BUG]  [BUGGY]  x1  =  Math.min(x1,  leftSolution.getMax());  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  leftSolution.getMax());  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  leftSolution.getMax());	  x1    =    Math.min(x1,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
214	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(fx),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  Math.abs(fx),  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  Math.abs(fx),  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
215	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)+  1,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)+  1,  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)+  1,  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
216	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)/  2);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)/  2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)/  2);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
217	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f0)/  fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f0)/  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f0)/  fx);	  fx    =    Math.max(FastMath.abs(f0),    fx);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
218	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  leftSolution.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  leftSolution.length  -  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
219	[BUG]  [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftSolution.length,  fx.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftSolution.length,  fx.length  -  1);	  fx    =    Math.min(fx.length,    allowedSolution.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
220	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax()  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax()  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy,  allowedSolution.getMax()  +  1);	  x1    =    Math.min(relativeAccuracy,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
221	[BUG]  [BUGGY]  x0  =  fx  -  1L;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  fx  -  1L;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx  -  1L;	  x0    =    fx    -    1;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
222	[BUG]  [BUGGY]  x1  =  Math.min(exp,  allowedSolution.getMax()  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(exp,  allowedSolution.getMax()  +  1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  allowedSolution.getMax()  +  1);	  x1    =    Math.min(exp,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
223	[BUG]  [BUGGY]  if(allowed)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(allowed)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(allowed)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
224	[BUG]  [BUGGY]  fx  =  Math.min(fx.getX()  +  1,  fx.getY());  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.getX()  +  1,  fx.getY());  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.getX()  +  1,  fx.getY());	  fx    =    Math.min(fx.getX(),    fx.getY()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
225	[BUG]  [BUGGY]  x1  =  fx.next();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.next();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.next();	  x1    =    fx.getX();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
226	[BUG]  [BUGGY]  x1  =  fx.getStart();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getStart();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getStart();	  x1    =    fx.getX();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
227	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f0),  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f0),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f0),  inverted);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
228	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  f1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx)/  f1);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
229	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  fTol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx),  fTol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx),  fTol);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
230	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx)+  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx)+  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx)+  1);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
231	[BUG]  [BUGGY]  x1  =  Math.min(x1,  x2);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(x1,  x2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(x1,  x2);	  x1    =    Math.min(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
232	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx  +  1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx  +  1));  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx  +  1));	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
233	[BUG]  [BUGGY]  x1  =  fx.getAlternateValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  fx.getAlternateValue();  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  fx.getAlternateValue();	  x1    =    fx.getValue();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
234	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  leftSolution.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length,  leftSolution.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length,  leftSolution.length);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
235	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  -  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length,  fx.length  -  1);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
236	[BUG]  [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(leftedSolution.length,  fx.length  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(leftedSolution.length,  fx.length  +  1);	  fx    =    Math.min(leftedSolution.length,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
237	[BUG]  [BUGGY]  x0  =  x2;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x2;  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x2;	  x0    =    x1;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
238	[BUG]  [BUGGY]  x1  =  Math.max(x1,  x2);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(x1,  x2);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x1,  x2);	  x1    =    Math.max(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
239	[BUG]  [BUGGY]  double  x1  =  0;  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  double  x1  =  0;  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	double  x1  =  0;	  x1    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
240	[BUG]  [BUGGY]  if(allowed)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(allowed)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(allowed)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	  x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
241	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2.0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(fx)/  2.0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(fx)/  2.0);	  fx    =    Math.min(FastMath.abs(fx));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
242	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  ftol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  ftol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  ftol);	  fx    =    Math.max(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
243	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  0);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  0);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  0);	  fx    =    Math.max(fx.length(),    allowed);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
244	[BUG]  [BUGGY]  x0  =  Math.max(x0,  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  Math.max(x0,  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  Math.max(x0,  fx);	  x0    =    Math.min(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
245	[BUG]  [BUGGY]  fx  =  Math.min(FAST_SIDE,  leftSolution);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FAST_SIDE,  leftSolution);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FAST_SIDE,  leftSolution);	  fx    =    Math.min(fx.length,    leftSolution);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
246	[BUG]  [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  Math.abs(fx);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(fx  ==  null)  {  x0  =  x;  fx  =  Math.abs(fx);  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fx  ==  null)  {  x0  =  x;  fx  =  Math.abs(fx);  }	  x0    =    x;    fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
247	[BUG]  [BUGGY]  x0  =  fx;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  fx;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
248	[BUG]  [BUGGY]  x0  =  x;  fx  =  Math.min(fx,  f1);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  x;  fx  =  Math.min(fx,  f1);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  x;  fx  =  Math.min(fx,  f1);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
249	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  fx.length);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
250	[BUG]  [BUGGY]  fx  =  Math.min(fx.length,  ftol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length,  ftol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length,  ftol);	  fx    =    Math.min(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
251	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
252	[BUG]  [BUGGY]  fx  =  Math.max(lensedSolution,  fx.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(lensedSolution,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(lensedSolution,  fx.length);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
253	[BUG]  [BUGGY]  fx  =  Math.max(fx.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length,  fx.length);	  fx    =    Math.max(fx.length,    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
254	[BUG]  [BUGGY]  if(inverted)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(inverted)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(inverted)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x1;  }	  if(false    ==    true)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x1;    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
255	[BUG]  [BUGGY]  x1  =  Math.min(exp,  max.getMax());  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(exp,  max.getMax());  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(exp,  max.getMax());	  x1    =    Math.min(exp,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
256	[BUG]  [BUGGY]  x1  =  Math.max(exp,  allowedSolution.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(exp,  allowedSolution.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(exp,  allowedSolution.length);	  x1    =    Math.min(exp,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
257	[BUG]  [BUGGY]  if(false!=  false)  {  x0  =  x1;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false!=  false)  {  x0  =  x1;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  false)  {  x0  =  x1;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false!=    false)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
258	[BUG]  [BUGGY]  if(fx  >=  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(fx  >=  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fx  >=  null)  {  x0  =  x;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(fx    ==    null)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
259	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy,  leftSolution.getMax());  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy,  leftSolution.getMax());  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy,  leftSolution.getMax());	  x1    =    Math.min(relativeAccuracy,    allowedSolution.getMax());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
260	[BUG]  [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(relativeAccuracy  *  allowedSolution.length,  absoluteAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(relativeAccuracy  *  allowedSolution.length,  absoluteAccuracy);	  x1    =    Math.min(relativeAccuracy    *    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
261	[BUG]  [BUGGY]  if(fxx!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(fxx!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fxx!=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(x!=    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
262	[BUG]  [BUGGY]  x0  =  fx;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  fx;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  fx;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
263	[BUG]  [BUGGY]  x1  =(inverted?  2  :  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =(inverted?  2  :  0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =(inverted?  2  :  0);	  x1    =(inverted?    1    :    0);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
264	[BUG]  [BUGGY]  x1  =(inverted?  3  :  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =(inverted?  3  :  0);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =(inverted?  3  :  0);	  x1    =(inverted?    1    :    0);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
265	[BUG]  [BUGGY]  x0  =  Math.min(exp,  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x0  =  Math.min(exp,  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x0  =  Math.min(exp,  fx);	  x0    =    Math.min(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
266	[BUG]  [BUGGY]  x1  =  Math.max(x1,  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(x1,  f1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x1,  f1);	  x1    =    Math.max(x1,    x1);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
267	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  2);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  2);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx)/  2);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
268	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  2,  f1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(fx)/  2,  f1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(fx)/  2,  f1);	  fx    =    Math.max(FastMath.abs(fx),    f1);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
269	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  double.doubleValue());  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  double.doubleValue());  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  double.doubleValue());	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
270	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  inverted);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f2),  inverted);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
271	[BUG]  [BUGGY]  fx  =  Math.min(fx,  ftol.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx,  ftol.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx,  ftol.length);	  fx    =    Math.min(fx,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
272	[BUG]  [BUGGY]  if(fx  >=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(fx  >=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(fx  >=  null)  {  x0  =  x;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(fx    ==    null)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
273	[BUG]  [BUGGY]  fx  =  Math.min(max,  fx);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(max,  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(max,  fx);	  fx    =    Math.min(max,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
274	[BUG]  [BUGGY]  fx  =  Math.min(x,  allowed);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(x,  allowed);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(x,  allowed);	  fx    =    Math.min(max,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
275	[BUG]  [BUGGY]  fx  =  Math.max(relativeAccuracy  *  allowed.length);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(relativeAccuracy  *  allowed.length);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(relativeAccuracy  *  allowed.length);	  fx    =    Math.max(fx,    allowed.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
276	[BUG]  [BUGGY]  fx  =  Math.max(lensedSolution.length,  fx.length);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(lensedSolution.length,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(lensedSolution.length,  fx.length);	  fx    =    Math.max(fx.length,    allowedSolution.length);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
277	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  /  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
278	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  *  LEFT_SIDE);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  *  LEFT_SIDE);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(f1),  absoluteAccuracy  *  LEFT_SIDE);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(f1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
279	[BUG]  [BUGGY]  if(false  ==  false)  {  x0  =  x1;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false  ==  false)  {  x0  =  x1;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false  ==  false)  {  x0  =  x1;  fx  =  Math.abs(fx);  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false    ==    false)    {    x0    =    x;    fx    =    Math.abs(fx);    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
280	[BUG]  [BUGGY]  fx  =  Math.min(x,  fx.length);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(x,  fx.length);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(x,  fx.length);	  fx    =    Math.min(len,    fx.length);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
281	[BUG]  [BUGGY]  if(false!=  false)  {  x0  =  x1;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  if(false!=  false)  {  x0  =  x1;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	if(false!=  false)  {  x0  =  x1;  fx  =  fx;  if  (FastMath.abs(f1)  <  =  ftol)  {  return  x0;  }	  if(false!=    false)    {    x0    =    x;    fx    =    fx;    if    (FastMath.abs(f1)    <    =    ftol)    {    return    x0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
282	[BUG]  [BUGGY]  fx  =  Math.abs(fx  +  1,  ftol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.abs(fx  +  1,  ftol);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.abs(fx  +  1,  ftol);	  fx    =    Math.abs(fx);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
283	[BUG]  [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(FastMath.abs(f1),  fx  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(FastMath.abs(f1),  fx  +  1);	  fx    =    Math.min(FastMath.abs(f1),    fx);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
284	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)/  2,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)/  2,  relativeAccuracy);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(relativeAccuracy  *  Math.abs(fx)/  2,  relativeAccuracy);	  x1    =    Math.max(relativeAccuracy    *    Math.abs(fx),    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
285	[BUG]  [BUGGY]  fx  =  Math.max(fx,  allowed);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx,  allowed);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx,  allowed);	  fx    =    Math.max(fx.length,    allowed);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
286	[BUG]  [BUGGY]  x1  =  Math.min(max,  x1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.min(max,  x1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.min(max,  x1);	  x1    =    Math.min(x0,    max);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
287	[BUG]  [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  MAX_SIDE);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(FastMath.abs(f1),  MAX_SIDE);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(FastMath.abs(f1),  MAX_SIDE);	  fx    =    Math.max(FastMath.abs(f1),    ftol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
288	[BUG]  [BUGGY]  fx  =  Math.min(rightedSolution.length(),  fx  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(rightedSolution.length(),  fx  +  1);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(rightedSolution.length(),  fx  +  1);	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
289	[BUG]  [BUGGY]  fx  =  Math.max(leftedSolution.length(),  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(leftedSolution.length(),  fx);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(leftedSolution.length(),  fx);	  fx    =    Math.min(leftedSolution.length(),    fx);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
290	[BUG]  [BUGGY]  fx  =  Math.min(fx.length(),  ftol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.min(fx.length(),  ftol);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.min(fx.length(),  ftol);	  fx    =    Math.min(fx.length(),    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
291	[BUG]  [BUGGY]  fx  =  Math.max(fx.length(),  flen);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  fx  =  Math.max(fx.length(),  flen);  [BUGGY]      x1  =  x;  f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	fx  =  Math.max(fx.length(),  flen);	  fx    =    Math.max(fx.length(),    allowedSolution);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
292	[BUG]  [BUGGY]  x1  =  Math.max(x1,  y1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      case  REGULA_FALSI:    break;  default:  throw  new  MathInternalError();  }  }        [BUGGY]  x1  =  Math.max(x1,  y1);  [BUGGY]      f1  =  fx;    if  (FastMath.abs(f1)  <=  ftol)  {  switch  (allowed)  {  case  ANY_SIDE:  return  x1;  case  LEFT_SIDE:  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	196	196	1	replace	x1  =  Math.max(x1,  y1);	  x1    =    Math.max(x1,    x0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
