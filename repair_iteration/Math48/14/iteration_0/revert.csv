projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=x;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=fx;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=Math.min(x0,allowedSolution.getMax());
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=Math.min(x0,allowedSolution.length);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x0=fx;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x0=x;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196fx=Math.min(fx.length(),allowed);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196fx=Math.min(fx.length,allowed);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196if(fx!=null){x0=x;fx=fx;if(FastMath.abs(f1)<=ftol){returnx0;}
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196if(fx!=null){x0=x;fx=Math.abs(fx);if(FastMath.abs(f1)<=ftol){returnx0;}
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196if(fx!=null){x0=x;fx=fx;if(FastMath.abs(f1)<=ftol){returnx1;}
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=Math.min(x0,x1);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=0;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=Math.max(relativeAccuracy*DEFAULT_ABSOLUTE_ACCURACY);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=Math.max(relativeAccuracy*Math.abs(f1),absoluteAccuracy);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196x1=Math.max(relativeAccuracy*Math.abs(f1));
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196fx=Math.max(FastMath.abs(f1),fx);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196fx=Math.min(fx.getX(),fx.getY());
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java196fx=Math.min(fx.length,allowedSolution.length);
