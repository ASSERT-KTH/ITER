projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.allowed=Method.ILLINOIS;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getDeclaredMethods().size();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingSolution();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions().size();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getMethod();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ILLINOIS;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.REGULA_FALSI;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=REGULA_FALSI;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(method,0,this.allowed,0,method.doubleValue());
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(method,0,this.allowed,0,method.length);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowSecantSolutions();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitialValue();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getMethod("regular",DEFAULT_ABSOLUTE_ACCURACY);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.REGULA_FALSI|Method.ILLINOIS;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getDeclaredMethods().size()+1;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getDeclaredMethods().size()*2;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(this.allowed,0,this.allowed,0,method.doubleValue());
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(this.allowed,0,method,0,method.doubleValue());
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(this.allowed,0,method,0,this.allowed.doubleValue());
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getMethod("regular",DEFAULT_ABSOLUTE_ACCURACY,absoluteAccuracy);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getMethod("regular");
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getMethod("returnValue",DEFAULT_ABSOLUTE_ACCURACY);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitialState();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitialSecond();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.allowed=Method.ALLOWED;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.allowed=Method.ALL;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.allowed=Method.PEGASUS;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ILLINOIS?DEFAULT_ABSOLUTE_ACCURACY:DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ILLINOIS?DEFAULT_ABSOLUTE_ACCURACY:DEFAULT_ABSOLUTE_ACCOURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingSecantSolution();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingSingleSolution();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ILLINOIS?DEFAULT_ABSOLUTE_ACCURACY:REGULA_FALSI;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ILLINOIS?method:DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getRawClass();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getRawMethod();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getDeclaredMethod();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions()*DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSecantSolutions();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions().size()+1;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions().size()*2;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(this.allowed,0,this.allowed,0,method.length);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(method,0,this.allowed,0,method.length-1);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(this.allowed,0,method,0,method.length);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ALLOWED;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(method,0,this.allowed,0,method.doubleValue()-1);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(method,0,this.allowed,0,method.length+1);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(method,0,this.allowed,1,method.length);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.NONE;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingRegularSolution();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingReGULA();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingSecond();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getMethod("REGULA_FALSI");
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.allowed=Method.REGULA_FALSI;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.USE_REGULA_FALSI;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ILLINOIS?REGULA_FALSI:DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.ILLINOIS?REGULA_FALSI:method;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getDeclaredMethods().iterator().next();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions()+1;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions(this.allowed);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitialValue()+1;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitialSerialValue();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getReturnType();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions().size()-1;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=method.getMethod("returnValues",DEFAULT_ABSOLUTE_ACCURACY);
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.allowed=Method.DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowedSolutions()*PEGASUS;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingSeconds();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getInitializingMethod();
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowSecantSolutions()*DEFAULT_ABSOLUTE_ACCURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71ILLINOIS=method.getAllowSecantSolutions()+1;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71this.method=Method.DEFAULT_ABSOLUTE_CURACY;
projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java71System.arraycopy(method,0,this.allowed,1,method.doubleValue());
