bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  inverted));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  inverted));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  inverted));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    inverted));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  inverted));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  inverted));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  inverted));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    inverted));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  inverted));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  inverted));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  inverted));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    inverted));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  final  double  f0  =  Math.min(F0,  atol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(F0,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(F0,  atol);	  final    double    f0    =    Math.min(F0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
5	[BUG]  [BUGGY]  final  double  f0  =  Math.min(F0,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(F0,  rtol  +  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(F0,  rtol  +  1);	  final    double    f0    =    Math.min(F0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
6	[BUG]  [BUGGY]  final  double  f0  =  Math.max(F0,  rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.max(F0,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(F0,  rtol);	  final    double    f0    =    Math.min(F0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
7	[BUG]  [BUGGY]  final  double  f0  =  calculateFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  calculateFunctionValue(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  calculateFunctionValue(rtol);	  final    double    f0    =    computeFunctionValue(f1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
8	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(f1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(f1);	  final    double    f0    =    computeFunctionValue(f1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
9	[BUG]  [BUGGY]  final  double  x  =  inverted?  x1  -  ((  f1  *  atol  -  rtol))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x1  -  ((  f1  *  atol  -  rtol))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x1  -  ((  f1  *  atol  -  rtol))  :(f1  -  f0));	  final    double    x    =    inverted?    x1    -    ((    f1    *    atol    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
10	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  atol  -  x0))  :(f1  -  inverted));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  atol  -  x0))  :(f1  -  inverted));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f1  *  atol  -  x0))  :(f1  -  inverted));	  final    double    x    =    inverted?    x1    -    ((    f1    *    atol    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x1))  :(f1  -  inverted));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x1))  :(f1  -  inverted));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x1))  :(f1  -  inverted));	  final    double    x    =    inverted?    x1    -    ((    f1    *    atol    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x1))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x1))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x1))  :(f1  -  f0));	  final    double    x    =    inverted?    x1    -    ((    f1    *    atol    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  rtol,  atol);	  final    double    f0    =    Math.min(relativeAccuracy    *    f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
14	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  f0,  rtol);	  final    double    f0    =    Math.min(relativeAccuracy    *    f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
15	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  max);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  max);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  f0,  max);	  final    double    f0    =    Math.min(relativeAccuracy    *    f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
16	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  atol  +  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  f0,  atol  +  1);	  final    double    f0    =    Math.min(relativeAccuracy    *    f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
17	[BUG]  [BUGGY]  final  double  f0  =  getFullFunctionValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFullFunctionValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFullFunctionValue();	  final    double    f0    =    getFullRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
18	[BUG]  [BUGGY]  final  double  f0  =  getFullRelativeAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFullRelativeAccuracy().doubleValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFullRelativeAccuracy().doubleValue();	  final    double    f0    =    getFullRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
19	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  rtol);	  final    double    f0    =    Math.min(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
20	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  max);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(rtol,  max);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  max);	  final    double    f0    =    Math.min(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
21	[BUG]  [BUGGY]  final  double  f0  =  Math.max(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.max(rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(rtol,  atol);	  final    double    f0    =    Math.min(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  atol,  inverted);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(rtol,  atol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  atol,  inverted);	  final    double    f0    =    Math.min(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
23	[BUG]  [BUGGY]  final  double  f0  =  getRelativeFunctionValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getRelativeFunctionValue().doubleValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getRelativeFunctionValue().doubleValue();	  final    double    f0    =    getRelativeFunctionValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFullValue(rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(rtol,  atol);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFullValue(rtol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(rtol,  inverted);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FALSE_ACCURACY,  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(FALSE_ACCURACY,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(FALSE_ACCURACY,  rtol);	  final    double    f0    =    Math.min(FALSE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
27	[BUG]  [BUGGY]  final  double  f0  =  Math.max(FALSE_ACCURACY,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.max(FALSE_ACCURACY,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(FALSE_ACCURACY,  rtol);	  final    double    f0    =    Math.min(FALSE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
28	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
29	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (f1  -  f0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
30	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (f1  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (f1  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (f1  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (f1  -  f1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
32	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  atol  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  atol  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  atol  -  f1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
33	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
34	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f0  -  f1))  /  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f0  -  f1))  /  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (f0  -  f1))  /  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
35	[BUG]  [BUGGY]  x  =  computeObjectiveValue(atol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeObjectiveValue(atol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeObjectiveValue(atol);	  x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  x  =  computeObjectiveValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeObjectiveValue(rtol,  atol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeObjectiveValue(rtol,  atol);	  x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  final  x  =  computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  x  =  computeObjectiveValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  x  =  computeObjectiveValue(rtol);	  x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
38	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  inverted);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(f0,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(f0,  inverted);	  final    double    f0    =    Math.min(inverted,    atol);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
39	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(rtol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  inverted);	  final    double    f0    =    Math.min(inverted,    atol);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
40	[BUG]  [BUGGY]  final  double  f0  =  Math.min(inverted,  rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(inverted,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(inverted,  rtol);	  final    double    f0    =    Math.min(inverted,    atol);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
41	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
42	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
43	[BUG]  [BUGGY]  final  ObjectiveValue  f0  =  computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  ObjectiveValue  f0  =  computeObjectiveValue(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  ObjectiveValue  f0  =  computeObjectiveValue(rtol);	  ObjectiveValue    f0    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
44	[BUG]  [BUGGY]  FinalValue  f0  =  computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  FinalValue  f0  =  computeObjectiveValue(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	FinalValue  f0  =  computeObjectiveValue(rtol);	  ObjectiveValue    f0    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
45	[BUG]  [BUGGY]  final  ObjectiveValue  f0  =  computeObjectiveValue(atol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  ObjectiveValue  f0  =  computeObjectiveValue(atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  ObjectiveValue  f0  =  computeObjectiveValue(atol);	  ObjectiveValue    f0    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
46	[BUG]  [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  ObjectiveValue  f0  =  getFunctionValue(rtol,  atol);	  final    ObjectiveValue    f0    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
47	[BUG]  [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(atol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  ObjectiveValue  f0  =  getFunctionValue(atol);	  final    ObjectiveValue    f0    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
48	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f1  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    inverted    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
49	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));	  final    double    x    =    inverted    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
50	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
51	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  x0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  x0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  x0));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  final  double  x  =  computeRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeRelativeValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeRelativeValue(rtol);	  final    double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  final  double  x  =  computeIntegerValue(rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeIntegerValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeIntegerValue(rtol);	  final    double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  final  double  x  =  computeFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeFunctionValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeFunctionValue(rtol);	  final    double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  atol  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    /    ((    f1    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
56	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f0  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f0  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f0  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    rtol    /    ((    f1    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
57	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(dol  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(dol  +  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(dol  +  1);	  final    double    f0    =    Math.abs(dol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
58	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(dol  *  atol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(dol  *  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(dol  *  atol);	  final    double    f0    =    Math.abs(dol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
59	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
60	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
61	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
62	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f0));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
63	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  atol  -  f0))/  (f1  -  f0));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
64	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
65	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f0));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
66	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValue(rtol,  atol,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValue(rtol,  atol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValue(rtol,  atol,  inverted);	  final    double    f0    =    getFunctionValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
67	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValue(rtol,  max);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValue(rtol,  max);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValue(rtol,  max);	  final    double    f0    =    getFunctionValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(rtol,  atol);	  final    double    f0    =    getFunctionValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  double  x  =  computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  double  x  =  computeObjectiveValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	double  x  =  computeObjectiveValue(rtol);	  double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
70	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  atol  -  x0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
71	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))  /  (f1  *  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))  /  (f1  *  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))  /  (f1  *  f0));	  final    double    x    =    rtol    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
72	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
73	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
74	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  /  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  /  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  /  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
75	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
76	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  x0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  x0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  x0);	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    x1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
77	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  x0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  rtol  -  x0))  :(f1  -  x0);	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    x1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  x0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  x0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    x1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f1))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f1))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (f1  -  f1))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
80	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
81	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (f1  -  f0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
82	[BUG]  [BUGGY]  final  double  f0  =  calculateFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  calculateFullValue(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  calculateFullValue(rtol);	  final    double    f0    =    computeFullValue(atol);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
83	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValue().doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValue().doubleValue()  +  1;  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValue().doubleValue()  +  1;	  final    double    f0    =    getFunctionValue().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
84	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValue().longValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValue().longValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValue().longValue();	  final    double    f0    =    getFunctionValue().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
85	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f0);	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
86	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f0  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
87	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f1));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
88	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
89	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  x0  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  x0  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  x0  *  (x1  -  x0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
90	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (relativeAccuracy  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (relativeAccuracy  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (relativeAccuracy  -  f0));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
91	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
92	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
93	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
94	[BUG]  [BUGGY]  final  double  x  =  rtol  *  (f0  -  f0))/(f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  *  (f0  -  f0))/(f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  *  (f0  -  f0))/(f1  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
95	[BUG]  [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(atol,  rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(atol,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  ObjectiveValue  f0  =  getFunctionValue(atol,  rtol);	  ObjectiveValue    f0    =    getFunctionValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
96	[BUG]  [BUGGY]  ObjectiveValue  f0  =  getFunctionValue(rtol,  atol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  ObjectiveValue  f0  =  getFunctionValue(rtol,  atol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	ObjectiveValue  f0  =  getFunctionValue(rtol,  atol,  inverted);	  ObjectiveValue    f0    =    getFunctionValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
97	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  atol,  inverted);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  atol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(rtol,  atol,  inverted);	  final    double    f0    =    computeObjectiveValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
98	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(rtol,  inverted);	  final    double    f0    =    computeObjectiveValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
99	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(rtol,  inverted);	  final    double    f0    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
100	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  (rtol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  (rtol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f1  *  (rtol  -  f0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
101	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f1))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
102	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f1))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f1))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f1))/  (f1  -  f1));	  final    double    x    =    inverted    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
103	[BUG]  [BUGGY]  x  =  computeIntegerValue(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeIntegerValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeIntegerValue(rtol);	  x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
104	[BUG]  [BUGGY]  x  =  computeFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeFunctionValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeFunctionValue(rtol);	  x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
105	[BUG]  [BUGGY]  x  =  computeRoleValue(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeRoleValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeRoleValue(rtol);	  x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
106	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (atol  -  x0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
107	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))  /  atol  /  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))  /  atol  /  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))  /  atol  /  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
108	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(ascii);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(ascii);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(ascii);	  final    double    f0    =    Math.abs(atol);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
109	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (atol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (atol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (atol  -  x0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
110	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f0  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f0  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f0  *  (x1  -  x0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
111	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  atol  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
112	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))  /  atol  /  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))  /  atol  /  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))  /  atol  /  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
113	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x0  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x0  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (x0  -  x0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
114	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x0  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x0  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (x0  -  x0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
115	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (x0  -  x0))  /  atol  /  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (x0  -  x0))  /  atol  /  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (x0  -  x0))  /  atol  /  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
116	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x0  -  x1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x0  -  x1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (x0  -  x1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
117	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x0  -  x1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x0  -  x1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (x0  -  x1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
118	[BUG]  [BUGGY]  final  Value  f0  =  getFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  Value  f0  =  getFunctionValue(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  Value  f0  =  getFunctionValue(rtol);	  FinalValue    f0    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
119	[BUG]  [BUGGY]  FinalValue  f0  =  getFunctionValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  FinalValue  f0  =  getFunctionValue(rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	FinalValue  f0  =  getFunctionValue(rtol,  atol);	  FinalValue    f0    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
120	[BUG]  [BUGGY]  final  String  f0  =  getFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  String  f0  =  getFunctionValue(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  String  f0  =  getFunctionValue(rtol);	  FinalValue    f0    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
121	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  atol  -  rtol))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
122	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  rtol  *  atol  -  f0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
123	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f1  *  atol  -  f0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
124	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f1));	  final    double    x    =    inverted    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
125	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
126	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
127	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (f1  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
128	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
129	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
130	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
131	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f0  -  f0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f0  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f0  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  final  long  x  =  computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  long  x  =  computeObjectiveValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  long  x  =  computeObjectiveValue(rtol);	  final    int    x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
133	[BUG]  [BUGGY]  final  int  x  =  computeObjectiveValue(atol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  int  x  =  computeObjectiveValue(atol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  int  x  =  computeObjectiveValue(atol);	  final    int    x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
134	[BUG]  [BUGGY]  final  int  x  =  computeObjectiveValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  int  x  =  computeObjectiveValue(rtol,  atol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  int  x  =  computeObjectiveValue(rtol,  atol);	  final    int    x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
135	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x1));	  final    double    x    =    inverted?    x1    -    ((    rtol    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
136	[BUG]  [BUGGY]  final  double  x  =  inverted?  x1  -  ((  rtol  *  atol  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x1  -  ((  rtol  *  atol  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x1  -  ((  rtol  *  atol  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x1    -    ((    rtol    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
137	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (rtol  -  x0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
138	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f0  *  (x1  -  x0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
139	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
140	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
141	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  rtol  *  atol  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
142	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
143	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (f1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (f1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  f1  *  (f1  -  x0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
144	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
145	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(true);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(true);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(true);	  final    double    f0    =    computeObjectiveValue(false);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
146	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  false);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  false);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(rtol,  false);	  final    double    f0    =    computeObjectiveValue(false);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
147	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(rtol  +  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(rtol  +  1);	  final    double    f0    =    Math.abs(rtol);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
148	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
149	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  atol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  atol  -  f0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
150	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
151	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (f0  -  f0))/  (f1  -  f0);	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
152	[BUG]  [BUGGY]  final  double  x  =  computeObjectiveValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeObjectiveValue(rtol,  atol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeObjectiveValue(rtol,  atol);	  final    double    x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
153	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  atol  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  atol  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  f1  *  atol  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
154	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  f1  *  rtol  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
155	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  atol  /  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  atol  /  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  f1  *  atol  /  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
156	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x1  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x1  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (x1  -  x0))/  (f1  -  f0);	  final    double    x    =    rtol    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
157	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  atol  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  atol  -  x0))/  (f1  -  f0);	  final    double    x    =    rtol    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
158	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))/  (f1  -  f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))/  (f1  -  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (x1  -  x0))/  (f1  -  f1);	  final    double    x    =    rtol    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
159	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (atol  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
160	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (atol  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (atol  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (atol  -  f1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
161	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  rtol  *  atol  /  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
162	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  x0  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  x0  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  x0  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
163	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  rtol);	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
164	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));	  final    double    x    =    inverted    /    ((    f1    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
165	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x0  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x0  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  rtol  *  (x0  -  x0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
166	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  f1  *  atol  -  f0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
167	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  f1  *  atol  -  rtol))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
168	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (atol  -  x0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
169	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(rtol  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(rtol  -  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(rtol  -  1);	  final    double    f0    =    Math.abs(f0    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
170	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f0  *  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f0  *  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f0  *  1);	  final    double    f0    =    Math.abs(f0    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
171	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f1  -  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f1  -  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f1  -  1);	  final    double    f0    =    Math.abs(f0    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
172	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f0)/  1;  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f0)/  1;  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f0)/  1;	  final    double    f0    =    Math.abs(f0    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
173	[BUG]  [BUGGY]  final  double  x  =  atol  *  ((  f1  -  rtol))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  atol  *  ((  f1  -  rtol))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  atol  *  ((  f1  -  rtol))/  (f1  -  f1));	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
174	[BUG]  [BUGGY]  final  double  x  =  rtol  *  ((  f0  -  f1))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  *  ((  f0  -  f1))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  *  ((  f0  -  f1))/  (f1  -  f1));	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
175	[BUG]  [BUGGY]  final  double  x  =  rtol  *  ((  f1  -  f0))  /  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  *  ((  f1  -  f0))  /  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  *  ((  f1  -  f0))  /  (f1  -  f0);	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
176	[BUG]  [BUGGY]  final  double  x  =  rtol  *((  f1  -  f0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  *((  f1  -  f0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  *((  f1  -  f0))  /(f1  -  f0));	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
177	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  atol  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  atol  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f1  *  atol  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    rtol    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
178	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f0  *  (x1  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f0  *  (x1  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f0  *  (x1  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    rtol    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
179	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f0  *  (x1  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f0  *  (x1  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f0  *  (x1  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    rtol    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
180	[BUG]  [BUGGY]  final  double  f0  =  getAbsoluteFunctionValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getAbsoluteFunctionValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getAbsoluteFunctionValue();	  final    double    f0    =    getAbsoluteAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
181	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  :((  f1  *  (rtol  -  x0))/  (f1  -  f1));	  final    double    x    =    inverted?    f0    :((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
182	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  atol  -  f0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  atol  -  f0))/(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  :((  f1  *  atol  -  f0))/(f1  -  f1));	  final    double    x    =    inverted?    f0    :((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
183	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (x1  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (x1  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f1  *  (x1  -  x0))/  (f1  -  f0);	  final    double    x    =    inverted?    f0    :((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
184	[BUG]  [BUGGY]  final  double  x  =  atol  *  ((  f1  -  rtol))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  atol  *  ((  f1  -  rtol))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  atol  *  ((  f1  -  rtol))/  (f1  -  f0));	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
185	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(rtol,  f0);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  f0);	  final    double    f0    =    Math.min(f0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
186	[BUG]  [BUGGY]  final  double  f0  =  Math.min(atol,  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(atol,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(atol,  rtol);	  final    double    f0    =    Math.min(f0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
187	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(atol,  f1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(atol,  f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(atol,  f1);	  final    double    f0    =    computeObjectiveValue(rtol,    f1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
188	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(rtol,  f1);	  final    double    f0    =    computeObjectiveValue(rtol,    f1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
189	[BUG]  [BUGGY]  final  double  f0  =  calculateObjectiveValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  calculateObjectiveValue(rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  calculateObjectiveValue(rtol,  atol);	  final    double    f0    =    computeObjectiveValue(rtol,    f1);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
190	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x0  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x0  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (x0  -  x0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
191	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (x0  -  x0))  /  atol  /  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (x0  -  x0))  /  atol  /  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (x0  -  x0))  /  atol  /  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
192	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  rtol);	  final    double    f0    =    Math.min(FIRST_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
193	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(rtol,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    Math.min(FIRST_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
194	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  max);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  max);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  max);	  final    double    f0    =    Math.min(FIRST_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
195	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f0  *  rtol);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f0  *  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f0  *  rtol);	  final    double    f0    =    Math.abs(f0    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
196	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(rtol  -  f0);  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(rtol  -  f0);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(rtol  -  f0);	  final    double    f0    =    Math.abs(f0    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
197	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f1  -  rtol);  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f1  -  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f1  -  rtol);	  final    double    f0    =    Math.abs(f0    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
198	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f0  /  rtol);  [CE]  illegal  start  of  expression  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f0  /  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f0  /  rtol);	  final    double    f0    =    Math.abs(f0    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
199	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(true);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFunctionValue(true);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(true);	  final    double    f0    =    computeFunctionValue(false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
200	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(false,  rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFunctionValue(false,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(false,  rtol);	  final    double    f0    =    computeFunctionValue(false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
201	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  false);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFunctionValue(rtol,  false);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(rtol,  false);	  final    double    f0    =    computeFunctionValue(false);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
202	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
203	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy(rtol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValueAccuracy(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValueAccuracy(rtol);	  final    double    f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
204	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().doubleValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValueAccuracy().doubleValue();	  final    double    f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
205	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(dol  -  rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(dol  -  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(dol  -  rtol);	  final    double    f0    =    Math.abs(dol);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
206	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  rtol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  rtol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  rtol  -  f0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
207	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  atol  -  rtol))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  atol  -  rtol))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  atol  -  rtol))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
208	[BUG]  [BUGGY]  FinalValue  f0  =  computeFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  FinalValue  f0  =  computeFunctionValue(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	FinalValue  f0  =  computeFunctionValue(rtol);	  FinalValue    f0    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
209	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
210	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
211	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (f0  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (f0  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (f0  -  f1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
212	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f0  *  (f0  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f0  *  (f0  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f0  *  (f0  -  f1))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
213	[BUG]  [BUGGY]  ObjectiveValue  f0  =  computeObjectiveValue(atol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  ObjectiveValue  f0  =  computeObjectiveValue(atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	ObjectiveValue  f0  =  computeObjectiveValue(atol);	  ObjectiveValue    f0    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
214	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (f1  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (f1  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (f1  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
215	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f0  *  (f1  -  f0))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f0  *  (f1  -  f0))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
216	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
217	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (relativeAccuracy  *  f0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (relativeAccuracy  *  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (relativeAccuracy  *  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
218	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  -  f0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
219	[BUG]  [BUGGY]  final  double  x  =  f0  *  (f1  -  f0)/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  *  (f1  -  f0)/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  *  (f1  -  f0)/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
220	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
221	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  f1  *  (f1  -  f0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
222	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
223	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
224	[BUG]  [BUGGY]  final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
225	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f0));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
226	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (rtol  -  f0))  /  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (rtol  -  f0))  /  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  f1  *  (rtol  -  f0))  /  (f1  -  f0));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
227	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
228	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
229	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  absoluteAccuracy);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  f0,  absoluteAccuracy);	  final    double    f0    =    Math.min(relativeAccuracy    *    f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
230	[BUG]  [BUGGY]  final  double  x  =  inverted?  x1  -  ((  f1  *  rtol  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x1  -  ((  f1  *  rtol  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x1  -  ((  f1  *  rtol  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x1    -    ((    f1    *    atol    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
231	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (atol  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
232	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (atol  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (atol  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (atol  -  f0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
233	[BUG]  [BUGGY]  final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  f1));	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
234	[BUG]  [BUGGY]  final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  atol  *  ((  f1  -  f0))/  (f1  -  rtol);	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
235	[BUG]  [BUGGY]  ObjectiveValue  f0  =  computeObjectiveValue(rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  ObjectiveValue  f0  =  computeObjectiveValue(rtol,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	ObjectiveValue  f0  =  computeObjectiveValue(rtol,  atol);	  ObjectiveValue    f0    =    getFunctionValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
236	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f0  /  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f0  /  1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f0  /  1);	  final    double    f0    =    Math.abs(f0    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
237	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f0  *  (x1  -  f0))/  (f1  -  f1));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
238	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (f1  -  f0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
239	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  x0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  x0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    x1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
240	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  x0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  x0);	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    x1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
241	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x0  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x0  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (x0  -  x0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
242	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
243	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -  ((  f1  *  (f0  -  f1))/  (f1  -  f1);	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
244	[BUG]  [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (f0  -  f1))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  /  ((  f1  *  (f0  -  f1))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  /  ((  f1  *  (f0  -  f1))/  (f1  -  f0));	  final    double    x    =    rtol    /    ((    f1    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
245	[BUG]  [BUGGY]  final  double  x  =  f0  /  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  /  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  /  ((  f1  *  (rtol  -  x0))/  (f1  -  f0));	  final    double    x    =    rtol    /    ((    f1    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
246	[BUG]  [BUGGY]  x  =  computeLongValue(rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeLongValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeLongValue(rtol);	  x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
247	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  inverted));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  inverted));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  inverted));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    inverted));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
248	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
249	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
250	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(rtol,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  rtol);	  final    double    f0    =    Math.min(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
251	[BUG]  [BUGGY]  final  double  x  =  computeFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeFullValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeFullValue(rtol);	  final    double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
252	[BUG]  [BUGGY]  final  double  f0  =  getFullAbsoluteAccuracy();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFullAbsoluteAccuracy();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFullAbsoluteAccuracy();	  final    double    f0    =    getFullRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
253	[BUG]  [BUGGY]  final  double  f0  =  getFullAbstractAccuracy();  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFullAbstractAccuracy();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFullAbstractAccuracy();	  final    double    f0    =    getFullRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
254	[BUG]  [BUGGY]  final  double  x  =  computeRelativeValue(atol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeRelativeValue(atol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeRelativeValue(atol);	  final    double    x    =    computeObjectiveValue(atol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
255	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  -  ((  f1  *  (x1  -  x0))  :(f1  -  f0);	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
256	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  f0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  f0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  f1  *  (rtol  -  f0))  :(f1  -  f1));	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
257	[BUG]  [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  f0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  /  ((  f0  *  (x1  -  f0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  /  ((  f0  *  (x1  -  f0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
258	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  f0  *  (rtol  -  f0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
259	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(FIRST_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    Math.min(FIRST_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
260	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0);	  final    double    x    =    rtol    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
261	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  /  ((  f1  *  (x1  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  /  ((  f1  *  (x1  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  /  ((  f1  *  (x1  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    rtol    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
262	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  rtol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  f1  *  rtol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  f1  *  rtol  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
263	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (rtol  -  f0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (rtol  -  f0))/(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  :((  f1  *  (rtol  -  f0))/(f1  -  f1));	  final    double    x    =    inverted?    f0    :((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
264	[BUG]  [BUGGY]  final  double  f0  =  computeNullValue(atol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeNullValue(atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeNullValue(atol);	  final    double    f0    =    computeFullValue(atol);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
265	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
266	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  rtol  *  (f1  -  f0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
267	[BUG]  [BUGGY]  final  double  x  =  x1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
268	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(false);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFullValue(false);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(false);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
269	[BUG]  [BUGGY]  final  double  f0  =  Math.min(F0,  rtol)-  1;  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(F0,  rtol)-  1;  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(F0,  rtol)-  1;	  final    double    f0    =    Math.min(F0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
270	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(len);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(len);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(len);	  final    double    f0    =    Math.abs(atol);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
271	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  rtol  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  f1  *  rtol  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  f1  *  rtol  -  x0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
272	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (rtol  -  f1))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (rtol  -  f1))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  f1  *  (rtol  -  f1))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
273	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (rtol  -  f0))  /  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (rtol  -  f0))  /  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  f1  *  (rtol  -  f0))  /  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
274	[BUG]  [BUGGY]  final  double  x  =  inverted?  x1  -  ((  f0  *  (x1  -  x0))  :(f1  -  rtol));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x1  -  ((  f0  *  (x1  -  x0))  :(f1  -  rtol));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x1  -  ((  f0  *  (x1  -  x0))  :(f1  -  rtol));	  final    double    x    =    inverted?    x1    -    ((    rtol    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
275	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x1));	  final    double    x    =    inverted?    x1    -    ((    rtol    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
276	[BUG]  [BUGGY]  final  double  f0  =  Math.min(DEFAULT_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(DEFAULT_ABSOLUTE_ACCURACY,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(DEFAULT_ABSOLUTE_ACCURACY,  atol);	  final    double    f0    =    Math.min(FALSE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
277	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FALSE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(FALSE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(FALSE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    Math.min(FALSE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
278	[BUG]  [BUGGY]  x  =  computeRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeRelativeValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeRelativeValue(rtol);	  x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
279	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValue(rtol,  rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValue(rtol,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValue(rtol,  rtol);	  final    double    f0    =    getFunctionValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
280	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f1  -  f0);  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f1  -  f0);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f1  -  f0);	  final    double    f0    =    Math.abs(f0    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
281	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (x1  -  x0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (x1  -  x0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (x1  -  x0))/  (f1  -  f0);	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
282	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f1));	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
283	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (rtol  -  f0))/  (f1  -  f0);	  final    double    x    =    f0    -    ((    f1    *    (rtol    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
284	[BUG]  [BUGGY]  final  double  x  =  x1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  x0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  x0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -  ((  rtol  *  (x1  -  x0))/  (f1  -  x0));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
285	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
286	[BUG]  [BUGGY]  x  =  computeObjectiveValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeObjectiveValue(x,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeObjectiveValue(x,  rtol);	  x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
287	[BUG]  [BUGGY]  x  =  computeIntegerValue(x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeIntegerValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeIntegerValue(x);	  x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
288	[BUG]  [BUGGY]  x  =  computeFullValue(x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeFullValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeFullValue(x);	  x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
289	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);	  final    double    f0    =    Math.min(FALSE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
290	[BUG]  [BUGGY]  final  double  f0  =  Math.min(MAX_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(MAX_ABSOLUTE_ACCURACY,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(MAX_ABSOLUTE_ACCURACY,  atol);	  final    double    f0    =    Math.min(FALSE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
291	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy()  +  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFunctionValueAccuracy()  +  1;  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFunctionValueAccuracy()  +  1;	  final    double    f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
292	[BUG]  [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f0  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f0  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f1  -  ((  rtol  *  (x1  -  x0))/  (f0  -  f1));	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
293	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  *  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  *  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  *  f1));	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
294	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  x0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    x1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
295	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  x0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  x0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  f1  *  atol  -  x0))  :(f1  -  x0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    x1));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
296	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (x1  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (x1  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  :((  f1  *  (x1  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
297	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
298	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  atol  -  f0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  -  ((  f1  *  atol  -  f0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  -  ((  f1  *  atol  -  f0))  :(f1  -  f1));	  final    double    x    =    inverted?    f0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
299	[BUG]  [BUGGY]  double  x  =  computeIntegerValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  double  x  =  computeIntegerValue(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	double  x  =  computeIntegerValue(rtol);	  double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
300	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(f2);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFunctionValue(f2);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(f2);	  final    double    f0    =    computeFunctionValue(f1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
301	[BUG]  [BUGGY]  final  double  f0  =  calculateFunctionValue(f1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  calculateFunctionValue(f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  calculateFunctionValue(f1);	  final    double    f0    =    computeFunctionValue(f1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
302	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  atol  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
303	[BUG]  [BUGGY]  final  double  x  =  x1  -  ((  f1  *  atol  -  x0))/(f1  *  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x1  -  ((  f1  *  atol  -  x0))/(f1  *  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -  ((  f1  *  atol  -  x0))/(f1  *  f1));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
304	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  inverted);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  f0,  inverted);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  f0,  inverted);	  final    double    f0    =    Math.min(relativeAccuracy    *    f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
305	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(f0,  f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(f0,  f1);	  final    double    f0    =    Math.min(f0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
306	[BUG]  [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (x1  -  x0))  /  atol  /  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f0  :((  f1  *  (x1  -  x0))  /  atol  /  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f0  :((  f1  *  (x1  -  x0))  /  atol  /  (f1  -  f1));	  final    double    x    =    inverted?    f0    :((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
307	[BUG]  [BUGGY]  ObjectiveValue  f0  =  computeObjectiveValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  ObjectiveValue  f0  =  computeObjectiveValue(rtol,  f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	ObjectiveValue  f0  =  computeObjectiveValue(rtol,  f1);	  ObjectiveValue    f0    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
308	[BUG]  [BUGGY]  final  double  x  =  computeIntegerValue(atol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeIntegerValue(atol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeIntegerValue(atol);	  final    double    x    =    computeObjectiveValue(atol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
309	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f0  *  (x1  -  x0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f0  *  (x1  -  x0))/(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f0  *  (x1  -  x0))/(f1  -  f1));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
310	[BUG]  [BUGGY]  final  double  f0  =  getFastFunctionValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFastFunctionValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFastFunctionValue();	  final    double    f0    =    getAbsoluteAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
311	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(f1  -  f0));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
312	[BUG]  [BUGGY]  final  double  f0  =  Math.min(F0,  f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(F0,  f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(F0,  f1);	  final    double    f0    =    Math.min(F0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
313	[BUG]  [BUGGY]  final  double  f0  =  Math.min(max,  rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(max,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(max,  rtol);	  final    double    f0    =    Math.min(F0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
314	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (f1  -  f0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (f1  -  f0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (f1  -  f0))/  (f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
315	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (f1  -  f0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (f1  -  f0))/(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f1  *  (f1  -  f0))/(f1  -  f1));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
316	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f0  *  (x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f0  *  (x1  -  x0))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f0  *  (x1  -  x0))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
317	[BUG]  [BUGGY]  final  double  f0  =  computeFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFallThrough(rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFallThrough(rtol);	  final    double    f0    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
318	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFullValue(rtol,  f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(rtol,  f1);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
319	[BUG]  [BUGGY]  final  double  f0  =  Math.abs(f1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.abs(f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.abs(f1);	  final    double    f0    =    Math.abs(rtol);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
320	[BUG]  [BUGGY]  final  double  x  =  x1  -  ((  f1  *  atol  -  x0))/(f1  *  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x1  -  ((  f1  *  atol  -  x0))/(f1  *  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -  ((  f1  *  atol  -  x0))/(f1  *  f0));	  final    double    x    =    x0    -    ((    f1    *    atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
321	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  1.0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(rtol,  1.0);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(rtol,  1.0);	  final    double    f0    =    computeObjectiveValue(rtol,    atol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
322	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (value  -  f0);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (value  -  f0);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -  ((  rtol  *  (x1  -  x0))  /  (value  -  f0);	  final    double    x    =    f0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
323	[BUG]  [BUGGY]  final  double  x  =  computeIntegerValue(x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeIntegerValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeIntegerValue(x);	  final    double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
324	[BUG]  [BUGGY]  final  double  x  =  computeObjective(rtol);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  computeObjective(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  computeObjective(rtol);	  final    double    x    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
325	[BUG]  [BUGGY]  final  double  f0  =  getFloatValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFloatValue().doubleValue();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFloatValue().doubleValue();	  final    double    f0    =    getFunctionValue().doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
326	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (f1  -  f0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (f1  -  f0))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f1  *  (f1  -  f0))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f1    -    f0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
327	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  FIRST_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  FIRST_ABSOLUTE_ACCURACY,  atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  FIRST_ABSOLUTE_ACCURACY,  atol);	  final    double    f0    =    Math.min(FIRST_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
328	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  rtol  *  (x1  -  x0))/  (f1  -  f0));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
329	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (x1  -  x0))  /  (f0  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f0  *  (x1  -  x0))  /  (f0  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f0  *  (x1  -  x0))  /  (f0  -  f1));	  final    double    x    =    inverted    -    ((    f0    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
330	[BUG]  [BUGGY]  x  =  computeObjectiveValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  x  =  computeObjectiveValue(x0,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	x  =  computeObjectiveValue(x0,  rtol);	  x    =    computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
331	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (atol  -  rtol))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (atol  -  rtol))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (atol  -  rtol))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (atol    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
332	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  *  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  *  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -  ((  rtol  *  (x1  -  x0))  /  (relativeAccuracy  *  f0));	  final    double    x    =    x0    -    ((    rtol    *    (x1    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
333	[BUG]  [BUGGY]  final  double  x  =  inverted?  f1  :((  f1  *  (x0  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  f1  :((  f1  *  (x0  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  f1  :((  f1  *  (x0  -  x0))/  (f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
334	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (f0  -  f1))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (f0  -  f1))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f1  *  (f0  -  f1))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
335	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (f0  -  f1))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (f0  -  f1))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (f0  -  f1))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
336	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f0  *  (f0  -  f1))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f0  *  (f0  -  f1))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f0  *  (f0  -  f1))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (f0    -    f1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
337	[BUG]  [BUGGY]  final  double  f0  =  getFullFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  getFullFunctionValueAccuracy();  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFullFunctionValueAccuracy();	  final    double    f0    =    getFullRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
338	[BUG]  [BUGGY]  final  double  x  =  rtol  *  ((  f1  -  f1))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  rtol  *  ((  f1  -  f1))/(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  *  ((  f1  -  f1))/(f1  -  f1));	  final    double    x    =    rtol    *    ((    f1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
339	[BUG]  [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(rtol,  f1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  ObjectiveValue  f0  =  getFunctionValue(rtol,  f1);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  ObjectiveValue  f0  =  getFunctionValue(rtol,  f1);	  final    ObjectiveValue    f0    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
340	[BUG]  [BUGGY]  final  double  x  =  x1  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  x1  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -  ((  f1  *  (rtol  -  x0))/  (f1  -  f1));	  final    double    x    =    x0    -    ((    f1    *    (rtol    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
341	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x0  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x0  -  x0))/  (f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (x0  -  x0))/  (f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x0))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
342	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(x1  -  inverted));  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(x1  -  inverted));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(x1  -  inverted));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    inverted));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
343	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x0  -  x1))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x0  -  x1))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted  -  ((  f1  *  (x0  -  x1))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
344	[BUG]  [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (x0  -  x1))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  rtol  :((  f1  *  (x0  -  x1))/(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  rtol  :((  f1  *  (x0  -  x1))/(f1  -  f0));	  final    double    x    =    rtol    -    ((    f1    *    (x0    -    x1))    /    (f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
345	[BUG]  [BUGGY]  final  double  f0  =  computeFallThrough(atol);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeFallThrough(atol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFallThrough(atol);	  final    double    f0    =    computeFunctionValue(atol);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
346	[BUG]  [BUGGY]  final  double  x  =  f0  *  (f1  -  f0))/(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  f0  *  (f1  -  f0))/(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  *  (f1  -  f0))/(f1  -  f1));	  final    double    x    =    f1    -    ((    f1    *    (x1    -    x0))    /    (f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
347	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(false,  rtol);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  f0  =  computeObjectiveValue(false,  rtol);  [BUGGY]      final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(false,  rtol);	  final    double    f0    =    computeObjectiveValue(false);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
348	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  -  ((  rtol  *  (x1  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
349	[BUG]  [BUGGY]  final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(f1  -  f1));  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {        [BUGGY]  final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(f1  -  f1));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  inverted?  x0  :((  f1  *  (x1  -  x0))  :(f1  -  f1));	  final    double    x    =    inverted?    x0    -    ((    f1    *    (x1    -    x0))    :(f1    -    f1));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
