bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(x  ==  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  ==  0.0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  ==  0.0)  {  return  x;  }	  if(x    ==    0.0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
2	[BUG]  [BUGGY]  if(x  <  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0.0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0.0)  {  return  x;  }	  if(x    ==    0.0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
3	[BUG]  [BUGGY]  if(fx  ==  0.0)  {  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  ==  0.0)  {  if(!inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  ==  0.0)  {  if(!inverted)  {  return  x;  }	  if(fx    ==    0)    {    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  if(fx!=  0.0)  {  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx!=  0.0)  {  if(!inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx!=  0.0)  {  if(!inverted)  {  return  x;  }	  if(fx    ==    0)    {    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  if(x  <  =  0.0  ||  fx  >  max)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  =  0.0  ||  fx  >  max)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  =  0.0  ||  fx  >  max)  {	  if(x    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
6	[BUG]  [BUGGY]  if(fx  <  0.0)  {  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  0.0)  {  if(!inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  0.0)  {  if(!inverted)  {  return  x;  }	  if(fx    <    0)    {    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeObjectiveValue(x1);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeObjectiveValue(x1);	  final    double    fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeFunctionValue(x0);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeFunctionValue(x0);	  final    double    fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  if(fx  ==  null)  {  if(!inverted)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  ==  null)  {  if(!inverted)  {  break;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  ==  null)  {  if(!inverted)  {  break;  }	  if(fx!=    null)    {    if(!inverted)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
10	[BUG]  [BUGGY]  if(fx  >=  null)  {  if(!inverted)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >=  null)  {  if(!inverted)  {  break;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >=  null)  {  if(!inverted)  {  break;  }	  if(fx!=    null)    {    if(!inverted)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
11	[BUG]  [BUGGY]  if(fx!=  null)  {  if(inverted)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx!=  null)  {  if(inverted)  {  break;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx!=  null)  {  if(inverted)  {  break;  }	  if(fx!=    null)    {    if(!inverted)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
12	[BUG]  [BUGGY]  fx  =  computeNullValue(x);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeNullValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeNullValue(x);	  fx    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
13	[BUG]  [BUGGY]  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    System.arraycopy(x,    0,    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
14	[BUG]  [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x,  0,  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x,  0,  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x,  0,	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    System.arraycopy(x,    0,    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
15	[BUG]  [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    System.arraycopy(x,    0,    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
16	[BUG]  [BUGGY]  if(fx  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x  [CE]  illegal  start  of  expression  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    System.arraycopy(x,    0,    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
17	[BUG]  [BUGGY]  if(x  >  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  >  0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  >  0)  {  return  x;  }	  if(x    >    0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  if(x  <  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0)  {  return  x;  }	  if(x    >    0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
19	[BUG]  [BUGGY]  if(fx  ==  null)  {  if(!inverted)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  ==  null)  {  if(!inverted)  {  continue;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  ==  null)  {  if(!inverted)  {  continue;  }	  if(fx!=    null)    {    if(!inverted)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
20	[BUG]  [BUGGY]  if(fx  >=  null)  {  if(!inverted)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >=  null)  {  if(!inverted)  {  continue;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >=  null)  {  if(!inverted)  {  continue;  }	  if(fx!=    null)    {    if(!inverted)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  if(fx!=  null)  {  if(inverted)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx!=  null)  {  if(inverted)  {  continue;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx!=  null)  {  if(inverted)  {  continue;  }	  if(fx!=    null)    {    if(!inverted)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  if(fx!=  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx!=  0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx!=  0)  {  return  x;  }	  if(fx    >=    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeFullValue(x0);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeFullValue(x0);	  final    double    fx    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  final  double  fx  =  computeIntegerValue(x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeIntegerValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeIntegerValue(x);	  final    double    fx    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
26	[BUG]  [BUGGY]  if(f0  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(f0  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(f0  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
27	[BUG]  [BUGGY]  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!in  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!in  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!in	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
28	[BUG]  [BUGGY]  if(x  >=  0.0)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  >=  0.0)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  >=  0.0)  {  return  fx;  }	  if(fx    >=    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
29	[BUG]  [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
30	[BUG]  [BUGGY]  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
31	[BUG]  [BUGGY]  if(f0  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(f0  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(f0  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
32	[BUG]  [BUGGY]  if(x  <  =  0)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  =  0)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  =  0)  {  return  fx;  }	  if(x    <    0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  x  =  x0  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  x  =  x0  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	x  =  x0  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
34	[BUG]  [BUGGY]  final  double  fx  =  absoluteAccuracy  -  Math.max(relativeAccuracy  *  fx,  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  absoluteAccuracy  -  Math.max(relativeAccuracy  *  fx,  fx);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  absoluteAccuracy  -  Math.max(relativeAccuracy  *  fx,  fx);	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
35	[BUG]  [BUGGY]  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(inverted)  {  return  x;  }	  if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  if(!inverted)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(!inverted)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(!inverted)  {  return  fx;  }	  if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  if(fx!=  inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx!=  inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx!=  inverted)  {  return  x;  }	  if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  if(x  <  0.0  ||  fx  >  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0.0  ||  fx  >  0.0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0.0  ||  fx  >  0.0)  {  return  x;  }	  if(x    <    0.0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  final  double  fx  =  computeLocalFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeLocalFunctionValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeLocalFunctionValue(x);	  final    double    fx    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x.doubleValue());  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeFunctionValue(x.doubleValue());  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeFunctionValue(x.doubleValue());	  final    double    fx    =    computeObjectiveValue(x.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
41	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x.doubleValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeObjectiveValue(x.doubleValue()  +  1);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeObjectiveValue(x.doubleValue()  +  1);	  final    double    fx    =    computeObjectiveValue(x.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
42	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x.doubleValue());  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeRelativeValue(x.doubleValue());  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeRelativeValue(x.doubleValue());	  final    double    fx    =    computeObjectiveValue(x.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
43	[BUG]  [BUGGY]  if(x  <  =  0.0  ||  fx  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  =  0.0  ||  fx  >  1.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  =  0.0  ||  fx  >  1.0)  {	  if(fx    <    =    0.0    ||    fx    >    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
44	[BUG]  [BUGGY]  if(fx  <  0.0  ||  fx  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  0.0  ||  fx  >  1.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  0.0  ||  fx  >  1.0)  {	  if(fx    <    =    0.0    ||    fx    >    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
45	[BUG]  [BUGGY]  if(fx  <  =  0.0  &&  fx  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  =  0.0  &&  fx  >  1.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  =  0.0  &&  fx  >  1.0)  {	  if(fx    <    =    0.0    ||    fx    >    1.0)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
46	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeFunctionValue(x  +  1);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeFunctionValue(x  +  1);	  final    double    fx    =    computeObjectiveValue(x    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
47	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x0  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeObjectiveValue(x0  +  1);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeObjectiveValue(x0  +  1);	  final    double    fx    =    computeObjectiveValue(x    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
48	[BUG]  [BUGGY]  if(x  ==  0)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  ==  0)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  ==  0)  {  return  fx;  }	  if(fx    ==    0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
49	[BUG]  [BUGGY]  if(x  ==  0.0)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  ==  0.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  ==  0.0)  {	  if(x!=    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
50	[BUG]  [BUGGY]  if(x  <  0.0  ||  x  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0.0  ||  x  >  0.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0.0  ||  x  >  0.0)  {	  if(x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  if(x  >  0.0  ||  fx  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  >  0.0  ||  fx  <  0.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  >  0.0  ||  fx  <  0.0)  {	  if(x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  final  double  fx  =  computeFloatValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeFloatValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeFloatValue(x);	  fx    =    computeFloatValue(x);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  fx  =  computeLongValue(x);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeLongValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeLongValue(x);	  fx    =    computeFloatValue(x);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  if(fx  <  0)  {  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  0)  {  if(inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  0)  {  if(inverted)  {  return  x;  }	  if(fx    >    0)    {    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
55	[BUG]  [BUGGY]  if(!inverted)  {  if(fx  >  0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(!inverted)  {  if(fx  >  0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(!inverted)  {  if(fx  >  0)  {  return  x;  }	  if(fx    >    0)    {    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
56	[BUG]  [BUGGY]  if(fx  ==  0)  {  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  ==  0)  {  if(inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  ==  0)  {  if(inverted)  {  return  x;  }	  if(fx    >    0)    {    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
57	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f0  =  computeFunctionValue(x);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f0  =  computeFunctionValue(x);	  final    double    f0    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
58	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  fx);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f0  =  computeObjectiveValue(x,  fx);	  final    double    f0    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f0  =  computeFullValue(x);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f0  =  computeFullValue(x);	  final    double    f0    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
60	[BUG]  [BUGGY]  if(x  >  0.0)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  >  0.0)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  >  0.0)  {  return  fx;  }	  if(fx    >    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
61	[BUG]  [BUGGY]  if(x  <  0.0  ||  fx  >  max)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0.0  ||  fx  >  max)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0.0  ||  fx  >  max)  {	  if(fx    <    0.0    ||    fx    >    max)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
62	[BUG]  [BUGGY]  if(fx  <  =  0.0  ||  fx  >  max)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  =  0.0  ||  fx  >  max)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  =  0.0  ||  fx  >  max)  {	  if(fx    <    0.0    ||    fx    >    max)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  if(fx  <  0.0  ||  fx  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  0.0  ||  fx  >  maximum)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  0.0  ||  fx  >  maximum)  {	  if(fx    <    0.0    ||    fx    >    max)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  if(x  <  0.0  ||  fx  >  0.5)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0.0  ||  fx  >  0.5)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0.0  ||  fx  >  0.5)  {	  if(x    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  final  double  f1  =  computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f1  =  computeFunctionValue(x);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f1  =  computeFunctionValue(x);	  final    double    f1    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  final  double  f1  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f1  =  computeObjectiveValue(x0);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f1  =  computeObjectiveValue(x0);	  final    double    f1    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  final  double  f1  =  computeObjectiveValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f1  =  computeObjectiveValue(x,  fx);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f1  =  computeObjectiveValue(x,  fx);	  final    double    f1    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
68	[BUG]  [BUGGY]  if(x!=  0.0)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x!=  0.0)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x!=  0.0)  {  return  fx;  }	  if(fx!=    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
69	[BUG]  [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
70	[BUG]  [BUGGY]  if(fx  <  min)  {  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  min)  {  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  min)  {  if(f1  >  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
71	[BUG]  [BUGGY]  if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
72	[BUG]  [BUGGY]  if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =  [CE]  illegal  start  of  expression  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
73	[BUG]  [BUGGY]  if(fx  >=  0)  {  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >=  0)  {  if(inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >=  0)  {  if(inverted)  {  return  x;  }	  if(fx    >    0)    {    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
74	[BUG]  [BUGGY]  if(fx  <  =  0)  {  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  =  0)  {  if(!inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  =  0)  {  if(!inverted)  {  return  x;  }	  if(fx    >=    0)    {    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
75	[BUG]  [BUGGY]  if(!inverted)  {  return  f;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(!inverted)  {  return  f;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(!inverted)  {  return  f;  }	  if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeRelativeValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeRelativeValue(x);	  final    double    fx    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x)+  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeObjectiveValue(x)+  1;  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeObjectiveValue(x)+  1;	  final    double    fx    =    computeObjectiveValue(x    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
78	[BUG]  [BUGGY]  fx  =  computeRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeRelativeValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeRelativeValue(x);	  fx    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
79	[BUG]  [BUGGY]  fx  =  computeFullValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeFullValue(x,  fx);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeFullValue(x,  fx);	  fx    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
80	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x.doubleValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeObjectiveValue(x.doubleValue()  -  1);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeObjectiveValue(x.doubleValue()  -  1);	  final    double    fx    =    computeObjectiveValue(x.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  if(x  >=  0)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  >=  0)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  >=  0)  {  return  fx;  }	  if(x    >    0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
82	[BUG]  [BUGGY]  fx  =  computeFloatValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeFloatValue(x,  fx);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeFloatValue(x,  fx);	  fx    =    computeFloatValue(x);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  final  double  f1  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f1  =  computeObjectiveValue(x1);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f1  =  computeObjectiveValue(x1);	  final    double    f1    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
84	[BUG]  [BUGGY]  fx  =  computeFunctionValue(fx);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeFunctionValue(fx);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeFunctionValue(fx);	  fx    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeFunctionValue(x,  fx);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeFunctionValue(x,  fx);	  fx    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
86	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  f0  =  computeObjectiveValue(x1);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  f0  =  computeObjectiveValue(x1);	  final    double    f0    =    computeObjectiveValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
87	[BUG]  [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  }	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
88	[BUG]  [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  }	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
89	[BUG]  [BUGGY]  final  double  fx  =  absoluteAccuracy  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  absoluteAccuracy  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  absoluteAccuracy  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  if(fx  <  =  0.0)  {  if(!inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  =  0.0)  {  if(!inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  =  0.0)  {  if(!inverted)  {  return  x;  }	  if(fx    ==    0)    {    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
92	[BUG]  [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  min)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
93	[BUG]  [BUGGY]  if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  =  0)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted;  }	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
94	[BUG]  [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x,  0,  [CE]  illegal  start  of  expression  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x,  0,  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x,  0,	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    System.arraycopy(x,    0,    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
95	[BUG]  [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  >  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  System.arraycopy(x	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    System.arraycopy(x,    0,    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
96	[BUG]  [BUGGY]  if(x  <  =  0.0  ||  x  >  fx)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  =  0.0  ||  x  >  fx)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  =  0.0  ||  x  >  fx)  {  return  x;  }	  if(x    <    =    0.0)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
97	[BUG]  [BUGGY]  if(x  <  0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0)  {	  if(x    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  if(x  <  0.0  ||  fx  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0.0  ||  fx  >  1.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0.0  ||  fx  >  1.0)  {	  if(x    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
99	[BUG]  [BUGGY]  if(x  <  =  0.0  ||  fx  >  1.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  =  0.0  ||  fx  >  1.0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  =  0.0  ||  fx  >  1.0)  {  return  x;  }	  if(x    <    =    0.0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  if(!inverted  &&  fx  <  =  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(!inverted  &&  fx  <  =  0.0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(!inverted  &&  fx  <  =  0.0)  {  return  x;  }	  if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  fx);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeFunctionValue(x,  fx);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeFunctionValue(x,  fx);	  final    double    fx    =    computeFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
102	[BUG]  [BUGGY]  if(x  >  0)  {  if(inverted)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  >  0)  {  if(inverted)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  >  0)  {  if(inverted)  {  return  x;  }	  if(fx    >    0)    {    if(inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
103	[BUG]  [BUGGY]  if(x  <  0)  {  if(!inverted)  {  return  fx;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0)  {  if(!inverted)  {  return  fx;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0)  {  if(!inverted)  {  return  fx;  }	  if(fx    <    0)    {    if(!inverted)    {    return    x;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
104	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x)/  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeObjectiveValue(x)/  1;  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeObjectiveValue(x)/  1;	  final    double    fx    =    computeObjectiveValue(x    +    1);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
105	[BUG]  [BUGGY]  if(x  <  =  0.0  ||  x  >  fx)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  =  0.0  ||  x  >  fx)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  =  0.0  ||  x  >  fx)  {	  if(x    <    =    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
106	[BUG]  [BUGGY]  if(fx  <  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [CE]  illegal  start  of  expression  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(fx  <  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(fx  <  1)  {  x  =  x1  -  Math.max(relativeAccuracy  *  fx,  absoluteAccuracy);  }  else  {  x  =  x0  -  Math.min(relativeAccuracy  *  fx);  inverted  =!inverted	  if(fx    >    0)    {    x    =    x1    -    Math.max(relativeAccuracy    *    fx,    absoluteAccuracy);    }    else    {    x    =    x0    -    Math.min(relativeAccuracy    *    fx);    inverted    =!inverted    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
107	[BUG]  [BUGGY]  if(x  >  0.0  ||  fx  <  1.0)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  >  0.0  ||  fx  <  1.0)  {  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  >  0.0  ||  fx  <  1.0)  {	  if(x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
108	[BUG]  [BUGGY]  if(inverted!=  fx)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(inverted!=  fx)  {  continue;  }  [BUGGY]      return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(inverted!=  fx)  {  continue;  }	  if(fx!=    null)    {    if(!inverted)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
109	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  f1);  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  f1);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeObjectiveValue(x,  f1);	  final    double    fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  if(x  <  0.0  ||  fx  >  1.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0.0  ||  fx  >  1.0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0.0  ||  fx  >  1.0)  {  return  x;  }	  if(x    <    0.0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
111	[BUG]  [BUGGY]  fx  =  computeFloatValue(x0);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  fx  =  computeFloatValue(x0);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	fx  =  computeFloatValue(x0);	  fx    =    computeFloatValue(x);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x1);  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  final  double  fx  =  computeFullValue(x1);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	final  double  fx  =  computeFullValue(x1);	  final    double    fx    =    computeFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
113	[BUG]  [BUGGY]  if(x  <  0  ||  fx  >  0.0)  {  return  x;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]        while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);          [BUGGY]  if(x  <  0  ||  fx  >  0.0)  {  return  x;  }  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {    x0  =  x1;  f0  =  f1;  inverted  =  !inverted;  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math48/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	167	167	1	replace	if(x  <  0  ||  fx  >  0.0)  {  return  x;  }	  if(x    <    0)    {    return    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
