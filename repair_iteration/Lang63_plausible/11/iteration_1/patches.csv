bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
2	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
4	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
5	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	3	None	add
6	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  -=  ReduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
7	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    S))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
8	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    S))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
9	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    S))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	      years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	1	replace
11	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months  +  1);	      years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	1	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	      years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	1	replace
13	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months)+  1;	      years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	4	1	replace
14	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
15	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
17	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
19	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
21	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
22	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [CE]  cannot  find  symbol  J  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  cannot  find  symbol  J	25	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
24	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
26	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
28	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  days  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	1	add
29	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  If(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    If(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	  	non-compiled	[CE]  ';'  expected	24	None	add
30	[BUG]  [BUGGY]  Years  =  0;  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  Years  =  0;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  =  0;	  years    =    0L;    	non-compiled	[CE]  cannot  find  symbol  Years	12	None	replace
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
32	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
33	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	non-compiled	[CE]  cannot  find  symbol  Days	21	None	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
35	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
36	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
37	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
39	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	21	1	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
41	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
43	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
45	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
47	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
48	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    S))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
49	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    S))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
51	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	29	2	add
53	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	29	2	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
55	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	29	1	add
56	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    years);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	29	None	add
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
58	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
60	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
61	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	13	None	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
63	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
64	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	13	None	add
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	      years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
66	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months  +  1);	      years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	2	1	replace
67	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	14	None	replace
68	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
69	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
70	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	16	None	replace
71	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	18	None	replace
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
73	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
74	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
75	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
77	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
79	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
81	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
82	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	19	None	add
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
84	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
86	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
87	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);  [CE]  cannot  find  symbol  centuries  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);	  	non-compiled	[CE]  cannot  find  symbol  centuries	19	None	add
88	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  years  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    =    1;    years  =  1;	  	compilable	  [FE]  ComparisonFailure  	10	1	add
89	[BUG]  [BUGGY]  years  =  1;  years  =  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  years  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    =    1;    years  =  1;	  	compilable	  [FE]  ComparisonFailure  	10	1	add
90	[BUG]  [BUGGY]  years  =  1;  Years  =  1;  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  Years  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    =    1;    Years  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Years	10	None	add
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  months  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    =    1;    months  =  1;	  	compilable	  [FE]  ComparisonFailure  	10	2	add
92	[BUG]  [BUGGY]  years  =  1;  months  =  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  months  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    =    1;    months  =  1;	  	compilable	  [FE]  ComparisonFailure  	10	2	add
93	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  days  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    =    1;    days  =  1;	  	compilable	  [FE]  ComparisonFailure  	10	1	add
94	[BUG]  [BUGGY]  years  =  1;  days  =  1;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  days  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    =    1;    days  =  1;	  	compilable	  [FE]  ComparisonFailure  	10	1	add
95	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      years    -=    reduceAndCorrect(months,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	7	2	replace
96	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      years    -=    reduceAndCorrect(months,    end,    Calendar.YEAR,    months);    	compilable	  [FE]  ComparisonFailure  	7	2	replace
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	22	1	replace
98	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	22	1	replace
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	22	1	replace
100	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  +  1);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	22	1	replace
101	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	22	None	replace
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
103	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
105	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    months  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
106	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	1	None	add
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
108	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.YEAR,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	  	compilable	  [FE]  ComparisonFailure  	1	1	add
109	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
110	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months  +  1);	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
112	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
114	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months)+  1;	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  12  *  years;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  12  *  years;	  years    =    1;    	compilable	  [FE]  ComparisonFailure  	11	1	replace
116	[BUG]  [BUGGY]  years  -=  12  *  years;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  12  *  years;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  12  *  years;	  years    =    1;    	compilable	  [FE]  ComparisonFailure  	11	1	replace
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  12  *  months;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  12  *  months;	  years    =    1;    	compilable	  [FE]  ComparisonFailure  	11	1	replace
118	[BUG]  [BUGGY]  years  -=  12  *  months;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  12  *  months;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  12  *  months;	  years    =    1;    	compilable	  [FE]  ComparisonFailure  	11	1	replace
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
120	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
122	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
123	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	17	None	add
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
125	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
126	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);  [CE]  cannot  find  symbol  centuries  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  centuries);	  	non-compiled	[CE]  cannot  find  symbol  centuries	17	None	add
127	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
128	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
130	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
131	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	15	None	add
132	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	15	None	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
134	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
135	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  d))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  d))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  d))  {  if(Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
136	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
137	[BUG]  [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	non-compiled	[CE]  method  get  in  class  Calendar  cannot  be  applied  to  given  types;	20	None	replace
138	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
139	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
140	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
141	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
143	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	31	1	add
144	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]          ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    years);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	31	None	add
145	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	19	None	add
146	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
147	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
149	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	19	1	add
150	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	20	1	replace
151	[BUG]  [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);	      days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	20	1	replace
152	[BUG]  [BUGGY]  years  =  1;  Days  =  1;  [CE]  cannot  find  symbol  Days  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  Days  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    =    1;    Days  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Days	10	None	add
153	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    Years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	8	None	add
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
155	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  years);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
157	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	3	1	add
158	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
159	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  J))  {  if(Token.containsTokenWithValue(tokens,  J))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
160	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	2	add
161	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	2	add
162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	2	add
163	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	  	compilable	  [FE]  ComparisonFailure  	24	2	add
164	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
165	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	14	1	replace
166	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
167	[BUG]  [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH  -  1);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	18	1	replace
168	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  if(Token.containsTokenWithValue(tokens,  y))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    if(Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    years;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
169	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
170	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
171	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  Days  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    Days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Days	17	None	add
172	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
173	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    years  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  +=  end.get(Calendar.DAY_OF_MONTH);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
174	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
175	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	5	1	add
176	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [CE]  cannot  find  symbol  Years  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    Years  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  Years	5	None	add
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
178	[BUG]  [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	months  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  months);	      years    -=    reduceAndCorrect(start,    end,    Calendar.DAY_OF_MONTH,    months);    	compilable	  [FE]  ComparisonFailure  	6	1	replace
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
180	[BUG]  [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.MONTH)-  start.get(Calendar.DAY_OF_MONTH);  days  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	15	1	add
181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	22	1	replace
182	[BUG]  [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	days  +=  start.get(Calendar.DAY_OF_MONTH)-  end.get(Calendar.DAY_OF_MONTH);	      days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    	compilable	  [FE]  ComparisonFailure  	22	1	replace
183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	1	replace
184	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	1	replace
185	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
186	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  S))  {  months  +=  12  *  years;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
188	[BUG]  [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	if(!Token.containsTokenWithValue(tokens,  H))  {  months  +=  12  *  months;  }	      if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    	compilable	  [FE]  ComparisonFailure  	25	2	replace
189	[BUG]  [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [CE]  cannot  find  symbol  Years  [FE]              ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	Years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  months);	      years    -=    reduceAndCorrect(months,    end,    Calendar.YEAR,    months);    	non-compiled	[CE]  cannot  find  symbol  Years	7	None	replace
190	[BUG]  [BUGGY]  years  =  1;  Jahre  =  1;  [CE]  cannot  find  symbol  Jahre  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  =  1;  Jahre  =  1;  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years    =    1;    Jahre  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Jahre	10	None	add
191	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
192	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
193	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
194	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  start.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	17	1	add
195	[BUG]  [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  Monate  +=  12  *  months;  }  [CE]  cannot  find  symbol  Monate  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      if(!Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  months;  }  if(!Token.containsTokenWithValue(tokens,  M))  {  Monate  +=  12  *  months;  }  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        if(!Token.containsTokenWithValue(tokens,    M))    {    months    +=    12    *    months;    }    if(!Token.containsTokenWithValue(tokens,  M))  {  Monate  +=  12  *  months;  }	  	non-compiled	[CE]  cannot  find  symbol  Monate	24	None	add
196	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
197	[BUG]  [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  days);  years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        years    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    days);    years  +=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	8	1	add
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);	  years    =    1;    	compilable	  [FE]  ComparisonFailure  	11	1	replace
199	[BUG]  [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]  years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);  [BUGGY]    }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	years  -=  reduceAndCorrect(start,  end,  Calendar.HOUR_OF_DAY,  years);	  years    =    1;    	compilable	  [FE]  ComparisonFailure  	11	1	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	add	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
201	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  years  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	compilable	  [FE]  ComparisonFailure  	13	1	add
202	[BUG]  [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  weeks  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [CE]  cannot  find  symbol  weeks  [FE]      ComparisonFailure    [CONTEXT]    days  -=  reduceAndCorrect(start,  end,  Calendar.DAY_OF_MONTH,  days);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  years  -=  reduceAndCorrect(start,  end,  Calendar.YEAR,  years);    if  (!Token.containsTokenWithValue(tokens,  y))  {  if  (Token.containsTokenWithValue(tokens,  M))  {  months  +=  12  *  years;    [BUGGY]      days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  months  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  weeks  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);  [BUGGY]    years  =  0;  }  else  {  days  +=  365  *  years;  years  =  0;  }  }  if  (!Token.containsTokenWithValue(tokens,  M))  {  days  +=  end.get(Calendar.DAY_OF_YEAR)  -  start.get(Calendar.DAY_OF_YEAR);  months  =  0;  }  [CLASS]  DurationFormatUtils  Token  [METHOD]  formatPeriod  [RETURN_TYPE]  String  long  startMillis  long  endMillis  String  format  boolean  padWithZeros  TimeZone  timezone  [VARIABLES]  TimeZone  timezone  boolean  padWithZeros  Token[]  tokens  Calendar  end  start  Object  H  M  S  d  m  s  value  y  String  ISO_EXTENDED_FORMAT_PATTERN  duration  format  tmp  int  count  days  hours  milliseconds  minutes  months  seconds  years  long  endMillis  millis  startMillis  	projects/Lang63/src/java/org/apache/commons/lang/time/DurationFormatUtils.java	0.7071067811865475	332	332	1	replace	        days    +=    end.get(Calendar.DAY_OF_MONTH)-    start.get(Calendar.DAY_OF_MONTH);    months    -=    reduceAndCorrect(start,    end,    Calendar.MONTH,    months);    days  +=  end.get(Calendar.DAY_OF_MONTH)-  start.get(Calendar.DAY_OF_MONTH);  weeks  -=  reduceAndCorrect(start,  end,  Calendar.MONTH,  months);	  	non-compiled	[CE]  cannot  find  symbol  weeks	13	None	add
